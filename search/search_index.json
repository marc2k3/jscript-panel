{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This component for foobar2000 is based on WSH Panel Mod . It allows the creation of customisable panels that can be written with JavaScript rather than the C++ required by the foobar2000 SDK . Under the hood, it uses Windows Script Host . It is possible to use ActiveX objects like WScript.Shell to run external apps, etc. Note that JS language support is limited to ECMAScript 5 . Nothing newer will ever be supported. Here are just some of the features provided by the component... Custom drawing of text, external images, lines, rectangles, etc. Use fonts/colours from the main preferences of whichever user interface you are using. Executing main/context menu commands. Ability to create custom buttons/menus. Capture keystrokes/mouse movement/clicks. Callbacks can be used to trigger code based on foobar2000 events. Read/ write file tags. Complete manipulation of playlists. Media Library display/sorting/filtering Save settings on a per panel basis. These persist between restarts and are stored inside the layout configuration file for whichever UI your are using. You can also write your own functions to load/save settings from JSON or plain text files. Built in support for making GET / POST requests which return plain text and there is also a method for downloading binary files. If you prefer, you can use the Microsoft.XMLHTTP ActiveX object. And much more...","title":"Overview"},{"location":"gallery/","text":"Not all Samples are included here. Smooth by Br3tt aka Falstaff # From left to right: JS Smooth Browser , JS Smooth Playlist Manager , JS Smooth Playlist . JS Playlist by Br3tt aka Falstaff # Album Art # Allmusic # Last.fm Bio # Last.fm Similar Artists # MusicBrainz # Properties # Spectrogram Seekbar # Track Info + Seekbar + Buttons # Thumbs #","title":"Gallery"},{"location":"gallery/#smooth-by-br3tt-aka-falstaff","text":"From left to right: JS Smooth Browser , JS Smooth Playlist Manager , JS Smooth Playlist .","title":"Smooth by Br3tt aka Falstaff"},{"location":"gallery/#js-playlist-by-br3tt-aka-falstaff","text":"","title":"JS Playlist by Br3tt aka Falstaff"},{"location":"gallery/#album-art","text":"","title":"Album Art"},{"location":"gallery/#allmusic","text":"","title":"Allmusic"},{"location":"gallery/#lastfm-bio","text":"","title":"Last.fm Bio"},{"location":"gallery/#lastfm-similar-artists","text":"","title":"Last.fm Similar Artists"},{"location":"gallery/#musicbrainz","text":"","title":"MusicBrainz"},{"location":"gallery/#properties","text":"","title":"Properties"},{"location":"gallery/#spectrogram-seekbar","text":"","title":"Spectrogram Seekbar"},{"location":"gallery/#track-info-seekbar-buttons","text":"","title":"Track Info + Seekbar + Buttons"},{"location":"gallery/#thumbs","text":"","title":"Thumbs"},{"location":"docs/","text":"Note for JScript Panel v2 users Because of the massive changes, this component is named JScript Panel 3 (foo_jscript_panel3.dll) and will not override any previous JScript Panel installation. It will install side by side. There is no way to upgrade and scripts will require significant changes to be compatible. The biggest change is the reworking of all graphics and image handling which are detailed on the changes page. JScript Panel v2 is still available for download here . Minimum requirements # Windows 7 is the current minimum requirement. The minimum requirement for foobar2000 is v1.5 . Both Default UI and Columns UI are supported. Note If running Windows 7 , it should be fully updated. At the very least, IE9 and the Platform Update need to be installed. Installation # Download https://wiki.hydrogenaud.io/index.php?title=Foobar2000:How_to_install_a_component It is assumed you know how to add panels to your layout. Basic guides can be found below. Default UI Columns UI Samples # Since the learning curve for writing your own scripts is quite steep, there are many included samples that don't require any knowledge at all. You can simply pick the one you want to use from the Samples menu in the Configuration Window . See the Gallery for some screenshots. Note Most included samples require the installation of FontAwesome which you can grab here: https://github.com/FortAwesome/Font-Awesome/blob/4.x/fonts/fontawesome-webfont.ttf?raw=true","title":"Requirements & Installation"},{"location":"docs/#minimum-requirements","text":"Windows 7 is the current minimum requirement. The minimum requirement for foobar2000 is v1.5 . Both Default UI and Columns UI are supported. Note If running Windows 7 , it should be fully updated. At the very least, IE9 and the Platform Update need to be installed.","title":"Minimum requirements"},{"location":"docs/#installation","text":"Download https://wiki.hydrogenaud.io/index.php?title=Foobar2000:How_to_install_a_component It is assumed you know how to add panels to your layout. Basic guides can be found below. Default UI Columns UI","title":"Installation"},{"location":"docs/#samples","text":"Since the learning curve for writing your own scripts is quite steep, there are many included samples that don't require any knowledge at all. You can simply pick the one you want to use from the Samples menu in the Configuration Window . See the Gallery for some screenshots. Note Most included samples require the installation of FontAwesome which you can grab here: https://github.com/FortAwesome/Font-Awesome/blob/4.x/fonts/fontawesome-webfont.ttf?raw=true","title":"Samples"},{"location":"docs/callbacks/","text":"Note You should only use callbacks that contain code you want to run. It's not good practice to include empty callbacks like this: function on_always_on_top_changed ( state ) { } on_always_on_top_changed(state) # Arguments state boolean Called when Always On Top state is changed. on_char(code) # Arguments code number UTF16 encoded char on_colours_changed() # Called when colours are changed via Default UI/Columns UI preferences. on_cursor_follow_playback_changed(state) # Arguments state boolean Called when Cursor follow playback state is changed. on_download_file_done(path, success, error_text) # Arguments path string The path that was originally supplied to utils.DownloadFileAsync . success boolean If true it means the web request was succesful and the file was saved correctly. error_text string Empty if success is true . If success is false , it should describe what went wrong. Called when thread created by utils.DownloadFileAsync is done. on_drag_drop(action, x, y, mask) # Arguments action IDropAction x number y number mask number on_drag_enter(action, x, y, mask) # Arguments action IDropAction x number y number mask number on_drag_leave() # on_drag_over(action, x, y, mask) # Arguments action IDropAction x number y number mask number on_dsp_preset_changed() # Called when DSP preset changes but does not get called when presets are added or removed. on_focus(is_focused) # Arguments is_focused boolean Called when the panel gets/loses focus. on_font_changed() # Called when fonts are changed via Default UI/Columns UI preferences. on_get_album_art_done(handle, art_id, image) # Arguments handle IMetadbHandle art_id number image IJSImage Could be null on failure. Called when thread created by IMetadbHandle GetAlbumArtAsync is done. on_http_request_done(task_id, success, content) # Arguments task_id number The return value from the original utils.HTTPRequestAsync call. success boolean If true , it doesn't necessarily mean http status 200 but it indicates the request was completed succesfully so the response text is from the server. content string Called when thread created by utils.HTTPRequestAsync is done. on_item_focus_change(playlistIndex, from, to) # Arguments playlistIndex number from number to number Called when playlist focus has changed. on_item_played(handle) # Arguments handle IMetadbHandle Called when at least one minute of the track has been played or the track has reached its end after at least one third of it has been played. on_key_down(vkey) # Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes Keyboard shortcuts defined in the main preferences are always executed first and are not passed to this callback. on_key_up(vkey) # Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes on_library_items_added(handle_list) # on_library_items_changed(handle_list) # on_library_items_removed(handle_list) # Arguments handle_list IMetadbHandleList on_load_image_done(image_path, image) # Arguments image_path string The path that was originally supplied to utils.LoadImageAsync . image IJSImage Could be null on failure. Called when thread created by utils.LoadImageAsync is done. on_locations_added(task_id, handle_list) # Arguments task_id number The return value from the original fb.AddLocationsAsync call. handle_list IMetadbHandleList Called when thread created by fb.AddLocationsAsync is done. on_metadb_changed(handle_list) # Arguments handle_list IMetadbHandleList Called when metadb contents change. This can be tag updates or database changes from foo_playcount , etc. on_mouse_lbtn_dblclk(x, y, mask) # on_mouse_lbtn_down(x, y, mask) # on_mouse_lbtn_up(x, y, mask) # on_mouse_leave() # on_mouse_mbtn_dblclk(x, y, mask) # on_mouse_mbtn_down(x, y, mask) # on_mouse_mbtn_up(x, y, mask) # on_mouse_move(x, y, mask) # on_mouse_rbtn_dblclk(x, y, mask) # on_mouse_rbtn_down(x, y, mask) # on_mouse_rbtn_up(x, y, mask) # You must return true if you want to suppress the default context menu. Use the Shift + Win keys to bypass user code and open default context menu. on_mouse_wheel(step) # Arguments step number on_mouse_wheel_h(step) # Arguments step number on_notify_data(name, info) # Arguments name string info string , number , array , object Called in other panels after window.NotifyOthers is executed. on_output_device_changed() # Called when output device changes. on_paint(gr) # Arguments gr IJSGraphics Called when window is ready to draw. on_playback_follow_cursor_changed(state) # Arguments state boolean Called when Playback follow cursor state is changed. on_playback_dynamic_info() # Called when dynamic info such as VBR bitrate changes. on_playback_dynamic_info_track(type) # Arguments type number 0 stream metadata update, 1 stream album art update on_playback_edited(handle) # Arguments handle IMetadbHandle Called when currently playing file gets edited. on_playback_new_track(handle) # Arguments handle IMetadbHandle on_playback_order_changed(new_order_index) # Arguments new_order_index PlaybackOrder Called when playback order is changed. on_playback_pause(state) # Arguments state boolean on_playback_queue_changed(origin) # Arguments origin PlaybackQueueOrigin on_playback_seek(time) # Arguments time number on_playback_starting(cmd, is_paused) # Arguments cmd PlaybackStartingCMD is_paused boolean on_playback_stop(reason) # Arguments reason PlaybackStopReason on_playback_time(time) # Arguments time number Called every second for time display. on_playlist_items_added(playlistIndex) # on_playlist_items_removed(playlistIndex, new_count) # on_playlist_items_reordered(playlistIndex) # on_playlist_items_selection_change() # Workaround for some 3rd party playlist viewers not working with on_selection_changed . on_playlist_stop_after_current_changed(state) # Arguments state boolean Called when Stop after current state is changed. on_playlist_switch() # on_playlists_changed() # Called when playlists are added/removed/reordered/renamed. a playlist's lock status changes through the use of the built-in playlist lock methods or other components such as foo_utils or foo_playlist_attributes . on_replaygain_mode_changed(new_mode) # Arguments new_mode ReplaygainMode on_script_unload() # Should always be called when: scripts are reloaded from the context menu / window.Reload the OK/Apply buttons are used in the Configure dialog. panels are removed/replaced in layout editing mode foobar2000 exits normally It will not be called if a script throws an error or foobar2000 terminates abnormally. on_selection_changed() # Called when selection changes based on File>Preferences>Display>Selection viewers . on_size() # Called when panel is resized. on_volume_change(volume) # Arguments volume number Floating point value in dB. Minimum is -100 , maximum is 0 .","title":"Callbacks"},{"location":"docs/callbacks/#on_always_on_top_changedstate","text":"Arguments state boolean Called when Always On Top state is changed.","title":"on_always_on_top_changed(state)"},{"location":"docs/callbacks/#on_charcode","text":"Arguments code number UTF16 encoded char","title":"on_char(code)"},{"location":"docs/callbacks/#on_colours_changed","text":"Called when colours are changed via Default UI/Columns UI preferences.","title":"on_colours_changed()"},{"location":"docs/callbacks/#on_cursor_follow_playback_changedstate","text":"Arguments state boolean Called when Cursor follow playback state is changed.","title":"on_cursor_follow_playback_changed(state)"},{"location":"docs/callbacks/#on_download_file_donepath-success-error_text","text":"Arguments path string The path that was originally supplied to utils.DownloadFileAsync . success boolean If true it means the web request was succesful and the file was saved correctly. error_text string Empty if success is true . If success is false , it should describe what went wrong. Called when thread created by utils.DownloadFileAsync is done.","title":"on_download_file_done(path, success, error_text)"},{"location":"docs/callbacks/#on_drag_dropaction-x-y-mask","text":"Arguments action IDropAction x number y number mask number","title":"on_drag_drop(action, x, y, mask)"},{"location":"docs/callbacks/#on_drag_enteraction-x-y-mask","text":"Arguments action IDropAction x number y number mask number","title":"on_drag_enter(action, x, y, mask)"},{"location":"docs/callbacks/#on_drag_leave","text":"","title":"on_drag_leave()"},{"location":"docs/callbacks/#on_drag_overaction-x-y-mask","text":"Arguments action IDropAction x number y number mask number","title":"on_drag_over(action, x, y, mask)"},{"location":"docs/callbacks/#on_dsp_preset_changed","text":"Called when DSP preset changes but does not get called when presets are added or removed.","title":"on_dsp_preset_changed()"},{"location":"docs/callbacks/#on_focusis_focused","text":"Arguments is_focused boolean Called when the panel gets/loses focus.","title":"on_focus(is_focused)"},{"location":"docs/callbacks/#on_font_changed","text":"Called when fonts are changed via Default UI/Columns UI preferences.","title":"on_font_changed()"},{"location":"docs/callbacks/#on_get_album_art_donehandle-art_id-image","text":"Arguments handle IMetadbHandle art_id number image IJSImage Could be null on failure. Called when thread created by IMetadbHandle GetAlbumArtAsync is done.","title":"on_get_album_art_done(handle, art_id, image)"},{"location":"docs/callbacks/#on_http_request_donetask_id-success-content","text":"Arguments task_id number The return value from the original utils.HTTPRequestAsync call. success boolean If true , it doesn't necessarily mean http status 200 but it indicates the request was completed succesfully so the response text is from the server. content string Called when thread created by utils.HTTPRequestAsync is done.","title":"on_http_request_done(task_id, success, content)"},{"location":"docs/callbacks/#on_item_focus_changeplaylistindex-from-to","text":"Arguments playlistIndex number from number to number Called when playlist focus has changed.","title":"on_item_focus_change(playlistIndex, from, to)"},{"location":"docs/callbacks/#on_item_playedhandle","text":"Arguments handle IMetadbHandle Called when at least one minute of the track has been played or the track has reached its end after at least one third of it has been played.","title":"on_item_played(handle)"},{"location":"docs/callbacks/#on_key_downvkey","text":"Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes Keyboard shortcuts defined in the main preferences are always executed first and are not passed to this callback.","title":"on_key_down(vkey)"},{"location":"docs/callbacks/#on_key_upvkey","text":"Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes","title":"on_key_up(vkey)"},{"location":"docs/callbacks/#on_library_items_addedhandle_list","text":"","title":"on_library_items_added(handle_list)"},{"location":"docs/callbacks/#on_library_items_changedhandle_list","text":"","title":"on_library_items_changed(handle_list)"},{"location":"docs/callbacks/#on_library_items_removedhandle_list","text":"Arguments handle_list IMetadbHandleList","title":"on_library_items_removed(handle_list)"},{"location":"docs/callbacks/#on_load_image_doneimage_path-image","text":"Arguments image_path string The path that was originally supplied to utils.LoadImageAsync . image IJSImage Could be null on failure. Called when thread created by utils.LoadImageAsync is done.","title":"on_load_image_done(image_path, image)"},{"location":"docs/callbacks/#on_locations_addedtask_id-handle_list","text":"Arguments task_id number The return value from the original fb.AddLocationsAsync call. handle_list IMetadbHandleList Called when thread created by fb.AddLocationsAsync is done.","title":"on_locations_added(task_id, handle_list)"},{"location":"docs/callbacks/#on_metadb_changedhandle_list","text":"Arguments handle_list IMetadbHandleList Called when metadb contents change. This can be tag updates or database changes from foo_playcount , etc.","title":"on_metadb_changed(handle_list)"},{"location":"docs/callbacks/#on_mouse_lbtn_dblclkx-y-mask","text":"","title":"on_mouse_lbtn_dblclk(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_lbtn_downx-y-mask","text":"","title":"on_mouse_lbtn_down(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_lbtn_upx-y-mask","text":"","title":"on_mouse_lbtn_up(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_leave","text":"","title":"on_mouse_leave()"},{"location":"docs/callbacks/#on_mouse_mbtn_dblclkx-y-mask","text":"","title":"on_mouse_mbtn_dblclk(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_mbtn_downx-y-mask","text":"","title":"on_mouse_mbtn_down(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_mbtn_upx-y-mask","text":"","title":"on_mouse_mbtn_up(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_movex-y-mask","text":"","title":"on_mouse_move(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_rbtn_dblclkx-y-mask","text":"","title":"on_mouse_rbtn_dblclk(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_rbtn_downx-y-mask","text":"","title":"on_mouse_rbtn_down(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_rbtn_upx-y-mask","text":"You must return true if you want to suppress the default context menu. Use the Shift + Win keys to bypass user code and open default context menu.","title":"on_mouse_rbtn_up(x, y, mask)"},{"location":"docs/callbacks/#on_mouse_wheelstep","text":"Arguments step number","title":"on_mouse_wheel(step)"},{"location":"docs/callbacks/#on_mouse_wheel_hstep","text":"Arguments step number","title":"on_mouse_wheel_h(step)"},{"location":"docs/callbacks/#on_notify_dataname-info","text":"Arguments name string info string , number , array , object Called in other panels after window.NotifyOthers is executed.","title":"on_notify_data(name, info)"},{"location":"docs/callbacks/#on_output_device_changed","text":"Called when output device changes.","title":"on_output_device_changed()"},{"location":"docs/callbacks/#on_paintgr","text":"Arguments gr IJSGraphics Called when window is ready to draw.","title":"on_paint(gr)"},{"location":"docs/callbacks/#on_playback_follow_cursor_changedstate","text":"Arguments state boolean Called when Playback follow cursor state is changed.","title":"on_playback_follow_cursor_changed(state)"},{"location":"docs/callbacks/#on_playback_dynamic_info","text":"Called when dynamic info such as VBR bitrate changes.","title":"on_playback_dynamic_info()"},{"location":"docs/callbacks/#on_playback_dynamic_info_tracktype","text":"Arguments type number 0 stream metadata update, 1 stream album art update","title":"on_playback_dynamic_info_track(type)"},{"location":"docs/callbacks/#on_playback_editedhandle","text":"Arguments handle IMetadbHandle Called when currently playing file gets edited.","title":"on_playback_edited(handle)"},{"location":"docs/callbacks/#on_playback_new_trackhandle","text":"Arguments handle IMetadbHandle","title":"on_playback_new_track(handle)"},{"location":"docs/callbacks/#on_playback_order_changednew_order_index","text":"Arguments new_order_index PlaybackOrder Called when playback order is changed.","title":"on_playback_order_changed(new_order_index)"},{"location":"docs/callbacks/#on_playback_pausestate","text":"Arguments state boolean","title":"on_playback_pause(state)"},{"location":"docs/callbacks/#on_playback_queue_changedorigin","text":"Arguments origin PlaybackQueueOrigin","title":"on_playback_queue_changed(origin)"},{"location":"docs/callbacks/#on_playback_seektime","text":"Arguments time number","title":"on_playback_seek(time)"},{"location":"docs/callbacks/#on_playback_startingcmd-is_paused","text":"Arguments cmd PlaybackStartingCMD is_paused boolean","title":"on_playback_starting(cmd, is_paused)"},{"location":"docs/callbacks/#on_playback_stopreason","text":"Arguments reason PlaybackStopReason","title":"on_playback_stop(reason)"},{"location":"docs/callbacks/#on_playback_timetime","text":"Arguments time number Called every second for time display.","title":"on_playback_time(time)"},{"location":"docs/callbacks/#on_playlist_items_addedplaylistindex","text":"","title":"on_playlist_items_added(playlistIndex)"},{"location":"docs/callbacks/#on_playlist_items_removedplaylistindex-new_count","text":"","title":"on_playlist_items_removed(playlistIndex, new_count)"},{"location":"docs/callbacks/#on_playlist_items_reorderedplaylistindex","text":"","title":"on_playlist_items_reordered(playlistIndex)"},{"location":"docs/callbacks/#on_playlist_items_selection_change","text":"Workaround for some 3rd party playlist viewers not working with on_selection_changed .","title":"on_playlist_items_selection_change()"},{"location":"docs/callbacks/#on_playlist_stop_after_current_changedstate","text":"Arguments state boolean Called when Stop after current state is changed.","title":"on_playlist_stop_after_current_changed(state)"},{"location":"docs/callbacks/#on_playlist_switch","text":"","title":"on_playlist_switch()"},{"location":"docs/callbacks/#on_playlists_changed","text":"Called when playlists are added/removed/reordered/renamed. a playlist's lock status changes through the use of the built-in playlist lock methods or other components such as foo_utils or foo_playlist_attributes .","title":"on_playlists_changed()"},{"location":"docs/callbacks/#on_replaygain_mode_changednew_mode","text":"Arguments new_mode ReplaygainMode","title":"on_replaygain_mode_changed(new_mode)"},{"location":"docs/callbacks/#on_script_unload","text":"Should always be called when: scripts are reloaded from the context menu / window.Reload the OK/Apply buttons are used in the Configure dialog. panels are removed/replaced in layout editing mode foobar2000 exits normally It will not be called if a script throws an error or foobar2000 terminates abnormally.","title":"on_script_unload()"},{"location":"docs/callbacks/#on_selection_changed","text":"Called when selection changes based on File>Preferences>Display>Selection viewers .","title":"on_selection_changed()"},{"location":"docs/callbacks/#on_size","text":"Called when panel is resized.","title":"on_size()"},{"location":"docs/callbacks/#on_volume_changevolume","text":"Arguments volume number Floating point value in dB. Minimum is -100 , maximum is 0 .","title":"on_volume_change(volume)"},{"location":"docs/changes/","text":"v3.0.3 # Bug fixes # Fixes a bug with JSPlaylist state and mood column alignment where the right and centre options were inverted. v3.0.2 # Bug fixes # Fix crash if Configuration Window Goto dialog was empty when clicking OK . v3.0.1 # Bug fixes # Calling DrawImage with bad srcW or srcH arguments now silently fails instead of turning the whole panel black. v3.0.0 # New additions # utils.CreateFolder (creates all parent folders if necessary) utils.CreateTextLayout , gr.WriteTextLayout utils.GetClipboardText , utils.SetClipboardText utils.GetLastModified utils.LoadSVG utils.MessageBox utils.RemovePath window.IsDark gr.FillGradientRectangleAdvanced (allows you to create D2D Linear and Radial brushes.) gr.WriteText (supports coloured emoji, styling ranges of text) Sample changes # The Queue Viewer and Playback Buttons samples have been removed. The Album Art sample no longer has a CD Jewel Case option. JS Smooth Browser no longer creates playlists on selection changes. To send tracks to the Library selection playlist, a group has to be double clicked. The destination playlist name can be changed via the panel properties. As before, groups can be added to existing playlists using the right click> Add to... option. The default view in JS Smooth Browser has been changed to Column + Album Art with extra group count and group length info. All previous options are still available via the right click menu. The group headers in JS Smooth Playlist are no longer collapsable. Thumbs now has a circular option available via the right click menu, Removed features # There is no longer a playback stats database. There is no pseudo transparent option in Columns UI . Panels cannot be added as toolbars in Columns UI . Support for WebP images is no longer baked in to the component. Now it relies on the Windows Imaging Component . Windows 10/11 users should have WebP extensions already installed by default from the Windows Store . If you're really averse to using the store or are running Windows 7/8/8.1 , you can install this to enable WebP support. Like Columns UI and Spider Monkey Panel , using the Windows Imaging Component opens up the possibility of using more exotic formats like HEIF and AVIF . Extensions for these and more can be installed via the Windows Store on Windows 10/11 . The included Thumbs sample will display these automatically. Removal of gdi # There is no longer a gdi namespace. Those methods have been replaced as follows: Removed Replacement gdi.CreateImage utils.CreateImage gdi.Font Stringified JSON gdi.Image utils.LoadImage gdi.LoadImageAsync utils.LoadImageAsync Removal of IGdiGraphics # The replacement is IJSGraphics which uses DirectWrite instead of Gdiplus . The most commonly used methods have changed as follows: Removed Replacement Notes gr.DrawRect gr.DrawRectangle No changes in usage. gr.FillSolidRect gr.FillRectangle No changes in usage. gr.DrawString, gr.GdiDrawText gr.WriteText Special care has to be taken with all other methods as their behaviour has changed. The most commonly used method will be gr.DrawImage which used to take angle and alpha as the last 2 arguments. Now the last 2 are opacity and angle . They were/are always optional so may be omitted. // old gr . DrawImage ( img , dstx , dsty , dstw , dsth , srcx , srcy , srcw , srch [, angle , alpha ]) // new gr . DrawImage ( img , dstx , dsty , dstw , dsth , srcx , srcy , srcw , srch [, opacity , angle ]) Unlike alpha which accepted values between 0-255 , opacity takes a floating point number between 0-1 . gr.DrawPolygon and gr.FillPolygon no longer exist at all. Removal of IGdiBitmap # Since Gdiplus is no longer used, the Windows Imaging Component is used for all image handling. I've managed to transfer most but not all previous functionality. ApplyMask and InvertColours no longer exist but similar functionality can be replicated with new methods. See IJSImage for full details. Callback changes # on_main_menu and on_playlist_item_ensure_visible have been removed entirely. on_get_album_art_done no longer receives image_path because it's now a property of the image. Example function on_get_album_art_done ( handle , art_id , image ) { if ( image ) g_img_path = image . Path ; } on_load_image_done has different arguments where the image_path supplied to utils.LoadImageAsync is now the identifier instead of a task_id . Example function on_load_image_done ( image_path , image ) { if ( image ) { // could be null if supplied path was bad // do something } } Renamed/moved methods # This list may be incomplete. Old New Notes fb.AcquireUiSelectionHolder fb.AcquireSelectionHolder fb.CopyHandleListToClipboard IMetadbHandleList CopyToClipboard fb.CreateProfiler utils.CreateProfiler fb.DoDragDrop IMetadbHandleList DoDragDrop fb.GetQueryItems IMetadbHandleList GetQueryItems fb.GetSelections fb.GetSelection This replaces the old fb.GetSelection fb.IsMetadbInMediaLibrary IMetadbHandle IsInLibrary fb.RunContextCommandWithMetadb IMetadbHandleList RunContextCommand fb.ShowPopupMessage utils.ShowPopupMessage plman.PlaylistItemCount plman.GetPlaylistItemCount utils.Chardet utils.DetectCharset utils.GetAlbumArtAsync IMetadbHandle GetAlbumArtAsync utils.GetAlbumArtEmbedded IMetadbHandle GetAlbumArtEmbedded utils.GetAlbumArtV2 IMetadbHandle GetAlbumArt utils.GetRequestAsync, utils.PostRequestAsync utils.HTTPRequestAsync window.InstanceType window.IsDefaultUI Now returns a boolean value IMetadbHandleList Add IMetadbHandleList AddItem IMetadbHandleList AddRange IMetadbHandleList AddItems IMetadbHandleList Insert IMetadbHandleList InsertItem IMetadbHandleList InsertRange IMetadbHandleList InsertItems IMetadbHandleList Item IMetadbHandleList GetItem , IMetadbHandleList ReplaceItem IMetadbHandleList OrderByFormat IMetadbHandleList SortByFormat IMetadbHandleList OrderByPath IMetadbHandleList SortByPath IMetadbHandleList OrderByRelativePath IMetadbHandleList SortByRelativePath Methods with changed behaviour # fb.CreateMainMenuManager now takes a name parameter for File , Edit , View etc and the returned IMainMenuManager object no longer has an Init method. IMetadbHandleList RemoveDuplicatesByFormat and IMetadbHandleList SortByFormat now take a title format pattern as a string . Removals with no replacement # plman.AddPlaylistItemToPlaybackQueue plman.EnsurePlaylistItemVisible plman.FlushPlaybackQueue plman.GetPlaybackQueueHandles plman.RemoveItemFromPlaybackQueue plman.RemoveItemsFromPlaybackQueue plman.SetPlaylistFocusItemByHandle utils.MapString utils.PathWildcardMatch window.IsTransparent IMetadbHandleList BSearch","title":"Changes"},{"location":"docs/changes/#v303","text":"","title":"v3.0.3"},{"location":"docs/changes/#bug-fixes","text":"Fixes a bug with JSPlaylist state and mood column alignment where the right and centre options were inverted.","title":"Bug fixes"},{"location":"docs/changes/#v302","text":"","title":"v3.0.2"},{"location":"docs/changes/#bug-fixes_1","text":"Fix crash if Configuration Window Goto dialog was empty when clicking OK .","title":"Bug fixes"},{"location":"docs/changes/#v301","text":"","title":"v3.0.1"},{"location":"docs/changes/#bug-fixes_2","text":"Calling DrawImage with bad srcW or srcH arguments now silently fails instead of turning the whole panel black.","title":"Bug fixes"},{"location":"docs/changes/#v300","text":"","title":"v3.0.0"},{"location":"docs/changes/#new-additions","text":"utils.CreateFolder (creates all parent folders if necessary) utils.CreateTextLayout , gr.WriteTextLayout utils.GetClipboardText , utils.SetClipboardText utils.GetLastModified utils.LoadSVG utils.MessageBox utils.RemovePath window.IsDark gr.FillGradientRectangleAdvanced (allows you to create D2D Linear and Radial brushes.) gr.WriteText (supports coloured emoji, styling ranges of text)","title":"New additions"},{"location":"docs/changes/#sample-changes","text":"The Queue Viewer and Playback Buttons samples have been removed. The Album Art sample no longer has a CD Jewel Case option. JS Smooth Browser no longer creates playlists on selection changes. To send tracks to the Library selection playlist, a group has to be double clicked. The destination playlist name can be changed via the panel properties. As before, groups can be added to existing playlists using the right click> Add to... option. The default view in JS Smooth Browser has been changed to Column + Album Art with extra group count and group length info. All previous options are still available via the right click menu. The group headers in JS Smooth Playlist are no longer collapsable. Thumbs now has a circular option available via the right click menu,","title":"Sample changes"},{"location":"docs/changes/#removed-features","text":"There is no longer a playback stats database. There is no pseudo transparent option in Columns UI . Panels cannot be added as toolbars in Columns UI . Support for WebP images is no longer baked in to the component. Now it relies on the Windows Imaging Component . Windows 10/11 users should have WebP extensions already installed by default from the Windows Store . If you're really averse to using the store or are running Windows 7/8/8.1 , you can install this to enable WebP support. Like Columns UI and Spider Monkey Panel , using the Windows Imaging Component opens up the possibility of using more exotic formats like HEIF and AVIF . Extensions for these and more can be installed via the Windows Store on Windows 10/11 . The included Thumbs sample will display these automatically.","title":"Removed features"},{"location":"docs/changes/#removal-of-gdi","text":"There is no longer a gdi namespace. Those methods have been replaced as follows: Removed Replacement gdi.CreateImage utils.CreateImage gdi.Font Stringified JSON gdi.Image utils.LoadImage gdi.LoadImageAsync utils.LoadImageAsync","title":"Removal of gdi"},{"location":"docs/changes/#removal-of-igdigraphics","text":"The replacement is IJSGraphics which uses DirectWrite instead of Gdiplus . The most commonly used methods have changed as follows: Removed Replacement Notes gr.DrawRect gr.DrawRectangle No changes in usage. gr.FillSolidRect gr.FillRectangle No changes in usage. gr.DrawString, gr.GdiDrawText gr.WriteText Special care has to be taken with all other methods as their behaviour has changed. The most commonly used method will be gr.DrawImage which used to take angle and alpha as the last 2 arguments. Now the last 2 are opacity and angle . They were/are always optional so may be omitted. // old gr . DrawImage ( img , dstx , dsty , dstw , dsth , srcx , srcy , srcw , srch [, angle , alpha ]) // new gr . DrawImage ( img , dstx , dsty , dstw , dsth , srcx , srcy , srcw , srch [, opacity , angle ]) Unlike alpha which accepted values between 0-255 , opacity takes a floating point number between 0-1 . gr.DrawPolygon and gr.FillPolygon no longer exist at all.","title":"Removal of IGdiGraphics"},{"location":"docs/changes/#removal-of-igdibitmap","text":"Since Gdiplus is no longer used, the Windows Imaging Component is used for all image handling. I've managed to transfer most but not all previous functionality. ApplyMask and InvertColours no longer exist but similar functionality can be replicated with new methods. See IJSImage for full details.","title":"Removal of IGdiBitmap"},{"location":"docs/changes/#callback-changes","text":"on_main_menu and on_playlist_item_ensure_visible have been removed entirely. on_get_album_art_done no longer receives image_path because it's now a property of the image. Example function on_get_album_art_done ( handle , art_id , image ) { if ( image ) g_img_path = image . Path ; } on_load_image_done has different arguments where the image_path supplied to utils.LoadImageAsync is now the identifier instead of a task_id . Example function on_load_image_done ( image_path , image ) { if ( image ) { // could be null if supplied path was bad // do something } }","title":"Callback changes"},{"location":"docs/changes/#renamedmoved-methods","text":"This list may be incomplete. Old New Notes fb.AcquireUiSelectionHolder fb.AcquireSelectionHolder fb.CopyHandleListToClipboard IMetadbHandleList CopyToClipboard fb.CreateProfiler utils.CreateProfiler fb.DoDragDrop IMetadbHandleList DoDragDrop fb.GetQueryItems IMetadbHandleList GetQueryItems fb.GetSelections fb.GetSelection This replaces the old fb.GetSelection fb.IsMetadbInMediaLibrary IMetadbHandle IsInLibrary fb.RunContextCommandWithMetadb IMetadbHandleList RunContextCommand fb.ShowPopupMessage utils.ShowPopupMessage plman.PlaylistItemCount plman.GetPlaylistItemCount utils.Chardet utils.DetectCharset utils.GetAlbumArtAsync IMetadbHandle GetAlbumArtAsync utils.GetAlbumArtEmbedded IMetadbHandle GetAlbumArtEmbedded utils.GetAlbumArtV2 IMetadbHandle GetAlbumArt utils.GetRequestAsync, utils.PostRequestAsync utils.HTTPRequestAsync window.InstanceType window.IsDefaultUI Now returns a boolean value IMetadbHandleList Add IMetadbHandleList AddItem IMetadbHandleList AddRange IMetadbHandleList AddItems IMetadbHandleList Insert IMetadbHandleList InsertItem IMetadbHandleList InsertRange IMetadbHandleList InsertItems IMetadbHandleList Item IMetadbHandleList GetItem , IMetadbHandleList ReplaceItem IMetadbHandleList OrderByFormat IMetadbHandleList SortByFormat IMetadbHandleList OrderByPath IMetadbHandleList SortByPath IMetadbHandleList OrderByRelativePath IMetadbHandleList SortByRelativePath","title":"Renamed/moved methods"},{"location":"docs/changes/#methods-with-changed-behaviour","text":"fb.CreateMainMenuManager now takes a name parameter for File , Edit , View etc and the returned IMainMenuManager object no longer has an Init method. IMetadbHandleList RemoveDuplicatesByFormat and IMetadbHandleList SortByFormat now take a title format pattern as a string .","title":"Methods with changed behaviour"},{"location":"docs/changes/#removals-with-no-replacement","text":"plman.AddPlaylistItemToPlaybackQueue plman.EnsurePlaylistItemVisible plman.FlushPlaybackQueue plman.GetPlaybackQueueHandles plman.RemoveItemFromPlaybackQueue plman.RemoveItemsFromPlaybackQueue plman.SetPlaylistFocusItemByHandle utils.MapString utils.PathWildcardMatch window.IsTransparent IMetadbHandleList BSearch","title":"Removals with no replacement"},{"location":"docs/configuration-window/","text":"Right click any panel> Configure to open the Configuration Window . Note Some scripts may implement their own menu without a Configure option. If this happens, you can hold down the Shift + Win keys and then right click. This always brings up the default menu. Keyboard shortcuts # Ctrl + F Open Find dialog Ctrl + G Open Go To Line dialog Ctrl + H Open Replace dialog Ctrl + S Apply F3 Find next Shift + F3 Find previous Main menu # You can use the File menu to Import and Export your scripts. The Samples menu provides quick access to all included scripts and the rest of the options should be self explanatory! Reset # Use this to reset back to the default script. Editor Properties # From the main foobar2000 Preferences>Tools>JScript Panel 3 you can customise the fonts/colours used in the editor above. style.caret.fore and style.selection.back accept hex colours only. For all the others, you can combine any of the following options separated by a comma. font:NAME size:PIXELS bold italics fore:HEX_COLOUR back:HEX_COLOUR Hex colours must be the full 6 digits like #FF0000 .","title":"Configuration Window"},{"location":"docs/configuration-window/#keyboard-shortcuts","text":"Ctrl + F Open Find dialog Ctrl + G Open Go To Line dialog Ctrl + H Open Replace dialog Ctrl + S Apply F3 Find next Shift + F3 Find previous","title":"Keyboard shortcuts"},{"location":"docs/configuration-window/#main-menu","text":"You can use the File menu to Import and Export your scripts. The Samples menu provides quick access to all included scripts and the rest of the options should be self explanatory!","title":"Main menu"},{"location":"docs/configuration-window/#reset","text":"Use this to reset back to the default script.","title":"Reset"},{"location":"docs/configuration-window/#editor-properties","text":"From the main foobar2000 Preferences>Tools>JScript Panel 3 you can customise the fonts/colours used in the editor above. style.caret.fore and style.selection.back accept hex colours only. For all the others, you can combine any of the following options separated by a comma. font:NAME size:PIXELS bold italics fore:HEX_COLOUR back:HEX_COLOUR Hex colours must be the full 6 digits like #FF0000 .","title":"Editor Properties"},{"location":"docs/flags/","text":"All of these are provided in helpers.txt bundled with the component. You can import it like this. // ==PREPROCESSOR== // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== See Preprocessors . DWRITE_FONT_WEIGHT # var DWRITE_FONT_WEIGHT_THIN = 100 ; var DWRITE_FONT_WEIGHT_EXTRA_LIGHT = 200 ; var DWRITE_FONT_WEIGHT_ULTRA_LIGHT = 200 ; var DWRITE_FONT_WEIGHT_LIGHT = 300 ; var DWRITE_FONT_WEIGHT_SEMI_LIGHT = 350 ; var DWRITE_FONT_WEIGHT_NORMAL = 400 ; var DWRITE_FONT_WEIGHT_REGULAR = 400 ; var DWRITE_FONT_WEIGHT_MEDIUM = 500 ; var DWRITE_FONT_WEIGHT_DEMI_BOLD = 600 ; var DWRITE_FONT_WEIGHT_SEMI_BOLD = 600 ; var DWRITE_FONT_WEIGHT_BOLD = 700 ; var DWRITE_FONT_WEIGHT_EXTRA_BOLD = 800 ; var DWRITE_FONT_WEIGHT_ULTRA_BOLD = 800 ; var DWRITE_FONT_WEIGHT_BLACK = 900 ; var DWRITE_FONT_WEIGHT_HEAVY = 900 ; var DWRITE_FONT_WEIGHT_EXTRA_BLACK = 950 ; var DWRITE_FONT_WEIGHT_ULTRA_BLACK = 950 ; DWRITE_FONT_STYLE # var DWRITE_FONT_STYLE_NORMAL = 0 ; var DWRITE_FONT_STYLE_OBLIQUE = 1 ; var DWRITE_FONT_STYLE_ITALIC = 2 ; DWRITE_FONT_STRETCH # var DWRITE_FONT_STRETCH_ULTRA_CONDENSED = 1 ; var DWRITE_FONT_STRETCH_EXTRA_CONDENSED = 2 ; var DWRITE_FONT_STRETCH_CONDENSED = 3 ; var DWRITE_FONT_STRETCH_SEMI_CONDENSED = 4 ; var DWRITE_FONT_STRETCH_NORMAL = 5 ; var DWRITE_FONT_STRETCH_MEDIUM = 5 ; var DWRITE_FONT_STRETCH_SEMI_EXPANDED = 6 ; var DWRITE_FONT_STRETCH_EXPANDED = 7 ; var DWRITE_FONT_STRETCH_EXTRA_EXPANDED = 8 ; var DWRITE_FONT_STRETCH_ULTRA_EXPANDED = 9 ; DWRITE_TEXT_ALIGNMENT # var DWRITE_TEXT_ALIGNMENT_LEADING = 0 ; var DWRITE_TEXT_ALIGNMENT_TRAILING = 1 ; var DWRITE_TEXT_ALIGNMENT_CENTER = 2 ; var DWRITE_TEXT_ALIGNMENT_JUSTIFIED = 3 ; DWRITE_PARAGRAPH_ALIGNMENT # var DWRITE_PARAGRAPH_ALIGNMENT_NEAR = 0 ; var DWRITE_PARAGRAPH_ALIGNMENT_FAR = 1 ; var DWRITE_PARAGRAPH_ALIGNMENT_CENTER = 2 ; DWRITE_WORD_WRAPPING # var DWRITE_WORD_WRAPPING_WRAP = 0 ; var DWRITE_WORD_WRAPPING_NO_WRAP = 1 ; var DWRITE_WORD_WRAPPING_EMERGENCY_BREAK = 2 ; var DWRITE_WORD_WRAPPING_WHOLE_WORD = 3 ; var DWRITE_WORD_WRAPPING_CHARACTER = 4 ; DWRITE_TRIMMING_GRANULARITY # var DWRITE_TRIMMING_GRANULARITY_NONE = 0 ; var DWRITE_TRIMMING_GRANULARITY_CHARACTER = 1 ; var DWRITE_TRIMMING_GRANULARITY_WORD = 2 ; WICBitmapTransform # var WICBitmapTransformRotate0 = 0 ; var WICBitmapTransformRotate90 = 1 ; var WICBitmapTransformRotate180 = 2 ; var WICBitmapTransformRotate270 = 3 ; var WICBitmapTransformFlipHorizontal = 8 ; var WICBitmapTransformFlipVertical = 16 ; MessageBox Buttons # var MB_OK = 0 ; var MB_OKCANCEL = 1 ; var MB_ABORTRETRYIGNORE = 2 ; var MB_YESNOCANCEL = 3 ; var MB_YESNO = 4 ; MessageBox Icons # var MB_ICONHAND = 16 ; var MB_ICONQUESTION = 32 ; var MB_ICONEXCLAMATION = 48 ; var MB_ICONASTERISK = 64 ; MessageBox Return Values # var IDOK = 1 ; var IDCANCEL = 2 ; var IDABORT = 3 ; var IDRETRY = 4 ; var IDIGNORE = 5 ; var IDYES = 6 ; var IDNO = 7 ; AppendMenuItem Flags # var MF_SEPARATOR = 0x00000800 ; var MF_ENABLED = 0x00000000 ; var MF_GRAYED = 0x00000001 ; var MF_DISABLED = 0x00000002 ; var MF_UNCHECKED = 0x00000000 ; var MF_CHECKED = 0x00000008 ; var MF_STRING = 0x00000000 ; var MF_MENUBARBREAK = 0x00000020 ; var MF_MENUBREAK = 0x00000040 ; // var MF_BITMAP; // do not use // var MF_OWNERDRAW // do not use // var MF_POPUP // do not use https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-appendmenua TrackPopupMenu Flags # var TPM_LEFTALIGN = 0x0000 ; var TPM_CENTERALIGN = 0x0004 ; var TPM_RIGHTALIGN = 0x0008 ; var TPM_TOPALIGN = 0x0000 ; var TPM_VCENTERALIGN = 0x0010 ; var TPM_BOTTOMALIGN = 0x0020 ; var TPM_HORIZONTAL = 0x0000 ; var TPM_VERTICAL = 0x0040 ; var TPM_HORPOSANIMATION = 0x0400 ; var TPM_HORNEGANIMATION = 0x0800 ; var TPM_VERPOSANIMATION = 0x1000 ; var TPM_VERNEGANIMATION = 0x2000 ; var TPM_NOANIMATION = 0x4000 ; https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-trackpopupmenu Mouse Mask Values # var MK_LBUTTON = 0x0001 ; var MK_RBUTTON = 0x0002 ; var MK_SHIFT = 0x0004 ; var MK_CONTROL = 0x0008 ; var MK_MBUTTON = 0x0010 ; var MK_XBUTTON1 = 0x0020 ; var MK_XBUTTON2 = 0x0040 ; SetCursor Values # var IDC_ARROW = 32512 ; var IDC_IBEAM = 32513 ; var IDC_WAIT = 32514 ; var IDC_CROSS = 32515 ; var IDC_UPARROW = 32516 ; var IDC_SIZE = 32640 ; var IDC_ICON = 32641 ; var IDC_SIZENWSE = 32642 ; var IDC_SIZENESW = 32643 ; var IDC_SIZEWE = 32644 ; var IDC_SIZENS = 32645 ; var IDC_SIZEALL = 32646 ; var IDC_NO = 32648 ; var IDC_APPSTARTING = 32650 ; var IDC_HAND = 32649 ; var IDC_HELP = 32651 ; FILE_ATTRIBUTE # var FILE_ATTRIBUTE_READONLY = 0x00000001 ; var FILE_ATTRIBUTE_HIDDEN = 0x00000002 ; var FILE_ATTRIBUTE_SYSTEM = 0x00000004 ; var FILE_ATTRIBUTE_DIRECTORY = 0x00000010 ; var FILE_ATTRIBUTE_ARCHIVE = 0x00000020 ; var FILE_ATTRIBUTE_NORMAL = 0x00000080 ; var FILE_ATTRIBUTE_TEMPORARY = 0x00000100 ; var FILE_ATTRIBUTE_SPARSE_FILE = 0x00000200 ; var FILE_ATTRIBUTE_REPARSE_POINT = 0x00000400 ; var FILE_ATTRIBUTE_COMPRESSED = 0x00000800 ; var FILE_ATTRIBUTE_OFFLINE = 0x00001000 ; var FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 0x00002000 ; var FILE_ATTRIBUTE_ENCRYPTED = 0x00004000 ; // var FILE_ATTRIBUTE_DEVICE // do not use // var FILE_ATTRIBUTE_VIRTUAL // do not use http://msdn.microsoft.com/en-us/library/ee332330%28VS.85%29.aspx Keyboard Mask Values # var VK_BACK = 0x08 ; var VK_TAB = 0x09 ; var VK_RETURN = 0x0D ; var VK_SHIFT = 0x10 ; var VK_CONTROL = 0x11 ; var VK_ALT = 0x12 ; var VK_ESCAPE = 0x1B ; var VK_PGUP = 0x21 ; var VK_PGDN = 0x22 ; var VK_END = 0x23 ; var VK_HOME = 0x24 ; var VK_LEFT = 0x25 ; var VK_UP = 0x26 ; var VK_RIGHT = 0x27 ; var VK_DOWN = 0x28 ; var VK_INSERT = 0x2D ; var VK_DELETE = 0x2E ; var VK_SPACEBAR = 0x20 ; AlbumArtId # var AlbumArtId = { front : 0 , back : 1 , disc : 2 , icon : 3 , artist : 4 , }; ColourTypeCUI # var ColourTypeCUI = { text : 0 , selection_text : 1 , inactive_selection_text : 2 , background : 3 , selection_background : 4 , inactive_selection_background : 5 , active_item_frame : 6 , }; ColourTypeDUI # var ColourTypeDUI = { text : 0 , background : 1 , highlight : 2 , selection : 3 , }; FontTypeCUI # var FontTypeCUI = { items : 0 , labels : 1 , }; FontTypeDUI # var FontTypeDUI = { defaults : 0 , tabs : 1 , lists : 2 , playlists : 3 , statusbar : 4 , console : 5 , }; PlaylistLockFilterMask # var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 , }; ReplaygainMode # var ReplaygainMode = { None : 0 , Track : 1 , Album : 2 , Track_Album_By_Playback_Order : 3 , }; PlaybackOrder # var PlaybackOrder = { Default : 0 , Repeat_Playlist : 1 , Repeat_Track : 2 , Random : 3 , Shuffle_tracks : 4 , Shuffle_albums : 5 , Shuffle_folders : 6 , }; PlaybackQueueOrigin # var PlaybackQueueOrigin = { user_added : 0 , user_removed : 1 , playback_advance : 2 , }; PlaybackStartingCMD # var PlaybackStartingCMD = { default : 0 , play : 1 , next : 2 , prev : 3 , settrack : 4 , rand : 5 , resume : 6 , }; PlaybackStopReason # var PlaybackStopReason = { user : 0 , eof : 1 , starting_another : 2 , }; SelectionType # var SelectionType = { undefined : 0 , active_playlist_selection : 1 , caller_active_playlist : 2 , playlist_manager : 3 , now_playing : 4 , keyboard_shortcut_list : 5 , media_library_viewer : 6 , }; ImageEffect # var ImageEffect = { grayscale : 0 , invert : 1 , sepia : 2 , };","title":"Flags"},{"location":"docs/flags/#dwrite_font_weight","text":"var DWRITE_FONT_WEIGHT_THIN = 100 ; var DWRITE_FONT_WEIGHT_EXTRA_LIGHT = 200 ; var DWRITE_FONT_WEIGHT_ULTRA_LIGHT = 200 ; var DWRITE_FONT_WEIGHT_LIGHT = 300 ; var DWRITE_FONT_WEIGHT_SEMI_LIGHT = 350 ; var DWRITE_FONT_WEIGHT_NORMAL = 400 ; var DWRITE_FONT_WEIGHT_REGULAR = 400 ; var DWRITE_FONT_WEIGHT_MEDIUM = 500 ; var DWRITE_FONT_WEIGHT_DEMI_BOLD = 600 ; var DWRITE_FONT_WEIGHT_SEMI_BOLD = 600 ; var DWRITE_FONT_WEIGHT_BOLD = 700 ; var DWRITE_FONT_WEIGHT_EXTRA_BOLD = 800 ; var DWRITE_FONT_WEIGHT_ULTRA_BOLD = 800 ; var DWRITE_FONT_WEIGHT_BLACK = 900 ; var DWRITE_FONT_WEIGHT_HEAVY = 900 ; var DWRITE_FONT_WEIGHT_EXTRA_BLACK = 950 ; var DWRITE_FONT_WEIGHT_ULTRA_BLACK = 950 ;","title":"DWRITE_FONT_WEIGHT"},{"location":"docs/flags/#dwrite_font_style","text":"var DWRITE_FONT_STYLE_NORMAL = 0 ; var DWRITE_FONT_STYLE_OBLIQUE = 1 ; var DWRITE_FONT_STYLE_ITALIC = 2 ;","title":"DWRITE_FONT_STYLE"},{"location":"docs/flags/#dwrite_font_stretch","text":"var DWRITE_FONT_STRETCH_ULTRA_CONDENSED = 1 ; var DWRITE_FONT_STRETCH_EXTRA_CONDENSED = 2 ; var DWRITE_FONT_STRETCH_CONDENSED = 3 ; var DWRITE_FONT_STRETCH_SEMI_CONDENSED = 4 ; var DWRITE_FONT_STRETCH_NORMAL = 5 ; var DWRITE_FONT_STRETCH_MEDIUM = 5 ; var DWRITE_FONT_STRETCH_SEMI_EXPANDED = 6 ; var DWRITE_FONT_STRETCH_EXPANDED = 7 ; var DWRITE_FONT_STRETCH_EXTRA_EXPANDED = 8 ; var DWRITE_FONT_STRETCH_ULTRA_EXPANDED = 9 ;","title":"DWRITE_FONT_STRETCH"},{"location":"docs/flags/#dwrite_text_alignment","text":"var DWRITE_TEXT_ALIGNMENT_LEADING = 0 ; var DWRITE_TEXT_ALIGNMENT_TRAILING = 1 ; var DWRITE_TEXT_ALIGNMENT_CENTER = 2 ; var DWRITE_TEXT_ALIGNMENT_JUSTIFIED = 3 ;","title":"DWRITE_TEXT_ALIGNMENT"},{"location":"docs/flags/#dwrite_paragraph_alignment","text":"var DWRITE_PARAGRAPH_ALIGNMENT_NEAR = 0 ; var DWRITE_PARAGRAPH_ALIGNMENT_FAR = 1 ; var DWRITE_PARAGRAPH_ALIGNMENT_CENTER = 2 ;","title":"DWRITE_PARAGRAPH_ALIGNMENT"},{"location":"docs/flags/#dwrite_word_wrapping","text":"var DWRITE_WORD_WRAPPING_WRAP = 0 ; var DWRITE_WORD_WRAPPING_NO_WRAP = 1 ; var DWRITE_WORD_WRAPPING_EMERGENCY_BREAK = 2 ; var DWRITE_WORD_WRAPPING_WHOLE_WORD = 3 ; var DWRITE_WORD_WRAPPING_CHARACTER = 4 ;","title":"DWRITE_WORD_WRAPPING"},{"location":"docs/flags/#dwrite_trimming_granularity","text":"var DWRITE_TRIMMING_GRANULARITY_NONE = 0 ; var DWRITE_TRIMMING_GRANULARITY_CHARACTER = 1 ; var DWRITE_TRIMMING_GRANULARITY_WORD = 2 ;","title":"DWRITE_TRIMMING_GRANULARITY"},{"location":"docs/flags/#wicbitmaptransform","text":"var WICBitmapTransformRotate0 = 0 ; var WICBitmapTransformRotate90 = 1 ; var WICBitmapTransformRotate180 = 2 ; var WICBitmapTransformRotate270 = 3 ; var WICBitmapTransformFlipHorizontal = 8 ; var WICBitmapTransformFlipVertical = 16 ;","title":"WICBitmapTransform"},{"location":"docs/flags/#messagebox-buttons","text":"var MB_OK = 0 ; var MB_OKCANCEL = 1 ; var MB_ABORTRETRYIGNORE = 2 ; var MB_YESNOCANCEL = 3 ; var MB_YESNO = 4 ;","title":"MessageBox Buttons"},{"location":"docs/flags/#messagebox-icons","text":"var MB_ICONHAND = 16 ; var MB_ICONQUESTION = 32 ; var MB_ICONEXCLAMATION = 48 ; var MB_ICONASTERISK = 64 ;","title":"MessageBox Icons"},{"location":"docs/flags/#messagebox-return-values","text":"var IDOK = 1 ; var IDCANCEL = 2 ; var IDABORT = 3 ; var IDRETRY = 4 ; var IDIGNORE = 5 ; var IDYES = 6 ; var IDNO = 7 ;","title":"MessageBox Return Values"},{"location":"docs/flags/#appendmenuitem-flags","text":"var MF_SEPARATOR = 0x00000800 ; var MF_ENABLED = 0x00000000 ; var MF_GRAYED = 0x00000001 ; var MF_DISABLED = 0x00000002 ; var MF_UNCHECKED = 0x00000000 ; var MF_CHECKED = 0x00000008 ; var MF_STRING = 0x00000000 ; var MF_MENUBARBREAK = 0x00000020 ; var MF_MENUBREAK = 0x00000040 ; // var MF_BITMAP; // do not use // var MF_OWNERDRAW // do not use // var MF_POPUP // do not use https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-appendmenua","title":"AppendMenuItem Flags"},{"location":"docs/flags/#trackpopupmenu-flags","text":"var TPM_LEFTALIGN = 0x0000 ; var TPM_CENTERALIGN = 0x0004 ; var TPM_RIGHTALIGN = 0x0008 ; var TPM_TOPALIGN = 0x0000 ; var TPM_VCENTERALIGN = 0x0010 ; var TPM_BOTTOMALIGN = 0x0020 ; var TPM_HORIZONTAL = 0x0000 ; var TPM_VERTICAL = 0x0040 ; var TPM_HORPOSANIMATION = 0x0400 ; var TPM_HORNEGANIMATION = 0x0800 ; var TPM_VERPOSANIMATION = 0x1000 ; var TPM_VERNEGANIMATION = 0x2000 ; var TPM_NOANIMATION = 0x4000 ; https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-trackpopupmenu","title":"TrackPopupMenu Flags"},{"location":"docs/flags/#mouse-mask-values","text":"var MK_LBUTTON = 0x0001 ; var MK_RBUTTON = 0x0002 ; var MK_SHIFT = 0x0004 ; var MK_CONTROL = 0x0008 ; var MK_MBUTTON = 0x0010 ; var MK_XBUTTON1 = 0x0020 ; var MK_XBUTTON2 = 0x0040 ;","title":"Mouse Mask Values"},{"location":"docs/flags/#setcursor-values","text":"var IDC_ARROW = 32512 ; var IDC_IBEAM = 32513 ; var IDC_WAIT = 32514 ; var IDC_CROSS = 32515 ; var IDC_UPARROW = 32516 ; var IDC_SIZE = 32640 ; var IDC_ICON = 32641 ; var IDC_SIZENWSE = 32642 ; var IDC_SIZENESW = 32643 ; var IDC_SIZEWE = 32644 ; var IDC_SIZENS = 32645 ; var IDC_SIZEALL = 32646 ; var IDC_NO = 32648 ; var IDC_APPSTARTING = 32650 ; var IDC_HAND = 32649 ; var IDC_HELP = 32651 ;","title":"SetCursor Values"},{"location":"docs/flags/#file_attribute","text":"var FILE_ATTRIBUTE_READONLY = 0x00000001 ; var FILE_ATTRIBUTE_HIDDEN = 0x00000002 ; var FILE_ATTRIBUTE_SYSTEM = 0x00000004 ; var FILE_ATTRIBUTE_DIRECTORY = 0x00000010 ; var FILE_ATTRIBUTE_ARCHIVE = 0x00000020 ; var FILE_ATTRIBUTE_NORMAL = 0x00000080 ; var FILE_ATTRIBUTE_TEMPORARY = 0x00000100 ; var FILE_ATTRIBUTE_SPARSE_FILE = 0x00000200 ; var FILE_ATTRIBUTE_REPARSE_POINT = 0x00000400 ; var FILE_ATTRIBUTE_COMPRESSED = 0x00000800 ; var FILE_ATTRIBUTE_OFFLINE = 0x00001000 ; var FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 0x00002000 ; var FILE_ATTRIBUTE_ENCRYPTED = 0x00004000 ; // var FILE_ATTRIBUTE_DEVICE // do not use // var FILE_ATTRIBUTE_VIRTUAL // do not use http://msdn.microsoft.com/en-us/library/ee332330%28VS.85%29.aspx","title":"FILE_ATTRIBUTE"},{"location":"docs/flags/#keyboard-mask-values","text":"var VK_BACK = 0x08 ; var VK_TAB = 0x09 ; var VK_RETURN = 0x0D ; var VK_SHIFT = 0x10 ; var VK_CONTROL = 0x11 ; var VK_ALT = 0x12 ; var VK_ESCAPE = 0x1B ; var VK_PGUP = 0x21 ; var VK_PGDN = 0x22 ; var VK_END = 0x23 ; var VK_HOME = 0x24 ; var VK_LEFT = 0x25 ; var VK_UP = 0x26 ; var VK_RIGHT = 0x27 ; var VK_DOWN = 0x28 ; var VK_INSERT = 0x2D ; var VK_DELETE = 0x2E ; var VK_SPACEBAR = 0x20 ;","title":"Keyboard Mask Values"},{"location":"docs/flags/#albumartid","text":"var AlbumArtId = { front : 0 , back : 1 , disc : 2 , icon : 3 , artist : 4 , };","title":"AlbumArtId"},{"location":"docs/flags/#colourtypecui","text":"var ColourTypeCUI = { text : 0 , selection_text : 1 , inactive_selection_text : 2 , background : 3 , selection_background : 4 , inactive_selection_background : 5 , active_item_frame : 6 , };","title":"ColourTypeCUI"},{"location":"docs/flags/#colourtypedui","text":"var ColourTypeDUI = { text : 0 , background : 1 , highlight : 2 , selection : 3 , };","title":"ColourTypeDUI"},{"location":"docs/flags/#fonttypecui","text":"var FontTypeCUI = { items : 0 , labels : 1 , };","title":"FontTypeCUI"},{"location":"docs/flags/#fonttypedui","text":"var FontTypeDUI = { defaults : 0 , tabs : 1 , lists : 2 , playlists : 3 , statusbar : 4 , console : 5 , };","title":"FontTypeDUI"},{"location":"docs/flags/#playlistlockfiltermask","text":"var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 , };","title":"PlaylistLockFilterMask"},{"location":"docs/flags/#replaygainmode","text":"var ReplaygainMode = { None : 0 , Track : 1 , Album : 2 , Track_Album_By_Playback_Order : 3 , };","title":"ReplaygainMode"},{"location":"docs/flags/#playbackorder","text":"var PlaybackOrder = { Default : 0 , Repeat_Playlist : 1 , Repeat_Track : 2 , Random : 3 , Shuffle_tracks : 4 , Shuffle_albums : 5 , Shuffle_folders : 6 , };","title":"PlaybackOrder"},{"location":"docs/flags/#playbackqueueorigin","text":"var PlaybackQueueOrigin = { user_added : 0 , user_removed : 1 , playback_advance : 2 , };","title":"PlaybackQueueOrigin"},{"location":"docs/flags/#playbackstartingcmd","text":"var PlaybackStartingCMD = { default : 0 , play : 1 , next : 2 , prev : 3 , settrack : 4 , rand : 5 , resume : 6 , };","title":"PlaybackStartingCMD"},{"location":"docs/flags/#playbackstopreason","text":"var PlaybackStopReason = { user : 0 , eof : 1 , starting_another : 2 , };","title":"PlaybackStopReason"},{"location":"docs/flags/#selectiontype","text":"var SelectionType = { undefined : 0 , active_playlist_selection : 1 , caller_active_playlist : 2 , playlist_manager : 3 , now_playing : 4 , keyboard_shortcut_list : 5 , media_library_viewer : 6 , };","title":"SelectionType"},{"location":"docs/flags/#imageeffect","text":"var ImageEffect = { grayscale : 0 , invert : 1 , sepia : 2 , };","title":"ImageEffect"},{"location":"docs/preprocessors/","text":"Preprocessors # Using a preprocessor section is not mandatory but it is useful for identifying scripts and loading external files so common code can be reused without having to update each panel instance. The section should start with ==PREPROCESSOR== and end with ==/PREPROCESSOR== . // ==PREPROCESSOR== // ... // ==/PREPROCESSOR== A full example might look something like this: // ==PREPROCESSOR== // @name \"my sooper dooper script\" // @author \"marc\" // @version \"0.1\" // @import \"%fb2k_component_path%helpers.txt\" // @import \"%fb2k_profile_path%scripts\\main.js\" // ==/PREPROCESSOR== Each directive is case sensitive. It should be started with @ and placed into a single comment. // @directive \"value here\" Directives # Name # // @name \"name\" Note If you set a name here, it's also available in script via window.Name . You can use it to prefix console messages or use for titles on various dialog boxes. Version # // @version \"version\" Author # // @author \"author\" Import # // @import \"path\" Load external script from path . These files should be UTF8 only. You can place %fb2k_component_path% or %fb2k_profile_path% in to path . They will be expanded while parsing.","title":"Preprocessors"},{"location":"docs/preprocessors/#preprocessors","text":"Using a preprocessor section is not mandatory but it is useful for identifying scripts and loading external files so common code can be reused without having to update each panel instance. The section should start with ==PREPROCESSOR== and end with ==/PREPROCESSOR== . // ==PREPROCESSOR== // ... // ==/PREPROCESSOR== A full example might look something like this: // ==PREPROCESSOR== // @name \"my sooper dooper script\" // @author \"marc\" // @version \"0.1\" // @import \"%fb2k_component_path%helpers.txt\" // @import \"%fb2k_profile_path%scripts\\main.js\" // ==/PREPROCESSOR== Each directive is case sensitive. It should be started with @ and placed into a single comment. // @directive \"value here\"","title":"Preprocessors"},{"location":"docs/preprocessors/#directives","text":"","title":"Directives"},{"location":"docs/preprocessors/#name","text":"// @name \"name\" Note If you set a name here, it's also available in script via window.Name . You can use it to prefix console messages or use for titles on various dialog boxes.","title":"Name"},{"location":"docs/preprocessors/#version","text":"// @version \"version\"","title":"Version"},{"location":"docs/preprocessors/#author","text":"// @author \"author\"","title":"Author"},{"location":"docs/preprocessors/#import","text":"// @import \"path\" Load external script from path . These files should be UTF8 only. You can place %fb2k_component_path% or %fb2k_profile_path% in to path . They will be expanded while parsing.","title":"Import"},{"location":"docs/tips/","text":"Always check the method arguments for the type/range of values you can supply. Over the years, internal validation has got stricter and errors may be thrown when they were silently ignored before. If anything goes wrong, check the popup window/console. It should tell you where the code is that caused the error. Never call window.Repaint() or window.RepaintRect() from the on_size callback. Consider using Dispose() methods where you can to free up memory. Remember to retrieve window.Width and window.Height in the on_size callback because their values during startup is not reliable. You should not create objects inside the on_paint callback since it will be called frequently. For example, utils.LoadImage and fb.TitleFormat should never be used there. Ideally, these objects should be created once on startup.","title":"Tips"},{"location":"docs/interfaces/IContextMenuManager/","text":"Methods BuildMenu(menu, base_id) # Arguments menu IMenuObj base_id number No return value. Dispose() # No return value. ExecuteByID(id) # Arguments id number Returns a boolean value. InitContext(handle_list) # Arguments handle_list IMetadbHandleList No return value. InitContextPlaylist() # No return value. Shows playlist specific options that aren't available when passing a handle list to InitContext . InitNowPlaying() # No return value. Example // click panel to see context menu for playing track function on_mouse_lbtn_up ( x , y ) { var menu = window . CreatePopupMenu (); var context = fb . CreateContextMenuManager (); if ( fb . IsPlaying ) { context . InitNowPlaying (); context . BuildMenu ( menu , 1 ); } var idx = menu . TrackPopupMenu ( x , y ); if ( idx > 0 ) { context . ExecuteByID ( idx - 1 ); } menu . Dispose (); context . Dispose (); }","title":"IContextMenuManager"},{"location":"docs/interfaces/IContextMenuManager/#buildmenumenu-base_id","text":"Arguments menu IMenuObj base_id number No return value.","title":"BuildMenu(menu, base_id)"},{"location":"docs/interfaces/IContextMenuManager/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IContextMenuManager/#executebyidid","text":"Arguments id number Returns a boolean value.","title":"ExecuteByID(id)"},{"location":"docs/interfaces/IContextMenuManager/#initcontexthandle_list","text":"Arguments handle_list IMetadbHandleList No return value.","title":"InitContext(handle_list)"},{"location":"docs/interfaces/IContextMenuManager/#initcontextplaylist","text":"No return value. Shows playlist specific options that aren't available when passing a handle list to InitContext .","title":"InitContextPlaylist()"},{"location":"docs/interfaces/IContextMenuManager/#initnowplaying","text":"No return value. Example // click panel to see context menu for playing track function on_mouse_lbtn_up ( x , y ) { var menu = window . CreatePopupMenu (); var context = fb . CreateContextMenuManager (); if ( fb . IsPlaying ) { context . InitNowPlaying (); context . BuildMenu ( menu , 1 ); } var idx = menu . TrackPopupMenu ( x , y ); if ( idx > 0 ) { context . ExecuteByID ( idx - 1 ); } menu . Dispose (); context . Dispose (); }","title":"InitNowPlaying()"},{"location":"docs/interfaces/IDropAction/","text":"Properties Base number write Effect number read,write Playlist number write ToSelect boolean write To handle incoming files from other panels or Windows Explorer, there are 4 callbacks. function on_drag_drop ( action , x , y , mask ) {} function on_drag_enter ( action , x , y , mask ) {} function on_drag_leave () {} function on_drag_over ( action , x , y , mask ) {} First we'll look at the action.Effect property which is documented here. https://docs.microsoft.com/en-gb/windows/win32/com/dropeffect-constants Rather than set variables for DROPEFFECT_NONE and DROPEFFECT_COPY , I'll just use 0 and 1 in the examples below. When used inside the on_drag_over callback, it can be used to provide feedback to the user as to whether you can drop files there or not. If you set the value to 0 , the mouse pointer will change to show that dropping files is prohibited. To show that dropping files is allowed, we would use the value of 1 . If you had a playlist viewer script, usage could be as simple as this: Example function on_drag_over ( action , x , y , mask ) { var ap = plman . ActivePlaylist ; if ( plman . PlaylistCount == 0 || ap == - 1 ) { // no playlists or active playlist not set action . Effect = 0 ; } else if ( plman . IsAutoPlaylist ( ap )) { // autoplaylist, can't drop. action . Effect = 0 ; } else { // ok, we can drop here. action . Effect = 1 ; } } When it comes to handling the dropped files inside on_drag_drop , we make use of the Base , Playlist and ToSelect properties listed above. We can use the exact same logic as before to set action.Effect as we need to do this so the source of our files gets notified of our intent. We should only ever use values of 0 or 1 . Example function on_drag_drop ( action , x , y , mask ) { var ap = plman . ActivePlaylist ; if ( plman . PlaylistCount == 0 || ap == - 1 ) { // no playlists or active playlist not set action . Effect = 0 ; } else if ( plman . IsAutoPlaylist ( ap )) { // autoplaylist, can't drop. action . Effect = 0 ; } else { // use extra properties here action . Playlist = ap ; // append to end action . Base = plman . GetPlaylistItemCount ( ap ); action . ToSelect = true ; action . Effect = 1 ; } }","title":"IDropAction"},{"location":"docs/interfaces/IFileInfo/","text":"This lets you iterate every available tag in a handle without knowing their name in advance. Example var handle = fb . GetFocusItem (); var obj = {}; var f = handle . GetFileInfo (); for ( var i = 0 ; i < f . MetaCount ; i ++ ) { var name = f . MetaName ( i ). toUpperCase (); obj [ name ] = []; var num = f . MetaValueCount ( i ); for ( var j = 0 ; j < num ; j ++ ) { obj [ name ]. push ( f . MetaValue ( i , j )); } } console . log ( JSON . stringify ( obj , null , 4 )); Example output { \"ALBUM\": [ \"Chairlift at 6:15\" ], \"ARTIST\": [ \"Chairlift\" ], \"DATE\": [ \"2012-10-28\" ], \"MUSICBRAINZ_ALBUMID\": [ \"bc96af2e-11e9-4abe-a75b-2b91a5eff027\" ], \"MUSICBRAINZ_ARTISTID\": [ \"a3cd61ef-7fd4-44af-a27f-99641a82b22b\" ], \"MUSICBRAINZ_RELEASEGROUPID\": [ \"cb2114a7-87fb-44ea-8931-766b75840683\" ], \"MUSICBRAINZ_RELEASETRACKID\": [ \"008578a0-3188-31e5-887a-27194cecb069\" ], \"MUSICBRAINZ_TRACKID\": [ \"57632bd4-185d-40be-9c95-c3d690c697af\" ], \"RELEASETYPE\": [ \"EP\" ], \"TITLE\": [ \"I Belong in Your Arms (Japanese version)\" ], \"TOTALTRACKS\": [ \"6\" ], \"TRACKNUMBER\": [ \"6\" ] } Properties MetaCount number read InfoCount number read Example console . log ( f . MetaCount ); console . log ( f . InfoCount ); Methods Dispose() # No return value. InfoFind(name) # Arguments name string Returns a number to indicate the info index or -1 on failure. InfoName(idx) # Arguments idx number Returns a string . InfoValue(idx) # Arguments idx number Returns a string . MetaFind(name) # Arguments name string Returns a number to indicate the metadata index or -1 on failure. MetaName(idx) # Arguments idx number Returns a string . Note The case of the tag name returned can be different depending on tag type so using toLowerCase() or toUpperCase() on the result is recommended. MetaValue(idx, vidx) # Arguments idx number vidx number Returns a string . MetaValueCount(idx) # Arguments idx number Returns a number .","title":"IFileInfo"},{"location":"docs/interfaces/IFileInfo/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IFileInfo/#infofindname","text":"Arguments name string Returns a number to indicate the info index or -1 on failure.","title":"InfoFind(name)"},{"location":"docs/interfaces/IFileInfo/#infonameidx","text":"Arguments idx number Returns a string .","title":"InfoName(idx)"},{"location":"docs/interfaces/IFileInfo/#infovalueidx","text":"Arguments idx number Returns a string .","title":"InfoValue(idx)"},{"location":"docs/interfaces/IFileInfo/#metafindname","text":"Arguments name string Returns a number to indicate the metadata index or -1 on failure.","title":"MetaFind(name)"},{"location":"docs/interfaces/IFileInfo/#metanameidx","text":"Arguments idx number Returns a string . Note The case of the tag name returned can be different depending on tag type so using toLowerCase() or toUpperCase() on the result is recommended.","title":"MetaName(idx)"},{"location":"docs/interfaces/IFileInfo/#metavalueidx-vidx","text":"Arguments idx number vidx number Returns a string .","title":"MetaValue(idx, vidx)"},{"location":"docs/interfaces/IFileInfo/#metavaluecountidx","text":"Arguments idx number Returns a number .","title":"MetaValueCount(idx)"},{"location":"docs/interfaces/IJSGraphics/","text":"This example covers a few of the more basic ellipse/rounded rectangle methods which are different from previous versions. Example // ==PREPROCESSOR== // @name \"Rectangle + Ellipse\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var colour = RGB ( 255 , 0 , 0 ); function on_paint ( gr ) { gr . DrawRectangle ( 0 , 0 , 200 , 200 , 1 , colour ); // first 2 values are the centre of the shape gr . DrawEllipse ( 100 , 100 , 50 , 50 , 1 , colour ); // first 2 values are the centre of the shape gr . FillEllipse ( 500 , 100 , 50 , 50 , colour ); gr . FillRoundedRectangle ( 0 , window . Height - 201 , 200 , 200 , 50 , 50 , colour ); gr . DrawRoundedRectangle ( window . Width - 200 , window . Height - 201 , 200 , 200 , 50 , 50 , 1 , colour ); } Methods DrawEllipse(centreX, centreY, radiusX, radiusY, line_width, colour) # Arguments centreX number centreY number radiusX number radiusY number line_width number colour number No return value. DrawImage(image, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH[, opacity, angle]) # Arguments image IJSImage dstX number dstY number dstW number dstH number srcX number srcY number srcW number srcH number opacity number Floating point number between 0 and 1 . Default 1 . angle number Default 0 . No return value. Note This differs from previous versions where alpha has been replaced with opacity . Also, angle is now the last argument. DrawImageWithMask(image, mask_image, x, y, w, h) # Arguments image IJSImage mask_image IJSImage x number y number w number h number Example Because this method does not support src co-ords, this sample makes the original image square first which is more suitable for a circular mask. Also included is a text mask example. Unlike the previous ApplyMask , there should be no white background. Just draw black for where you want to keep. Mask images don't have to have the same width/height. // ==PREPROCESSOR== // @name \"DrawImageWithMask\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var temp_gr ; var circular_mask = utils . CreateImage ( 512 , 512 ); temp_gr = circular_mask . GetGraphics (); temp_gr . FillEllipse ( 256 , 256 , 256 , 256 , RGB ( 0 , 0 , 0 )); circular_mask . ReleaseGraphics (); temp_gr = null ; var text_mask = utils . CreateImage ( 512 , 512 ); temp_gr = text_mask . GetGraphics (); temp_gr . DrawRectangle ( 0 , 0 , 512 , 512 , 10 , RGB ( 0 , 0 , 0 )); temp_gr . WriteText ( \"MASK\" , JSON . stringify ({ Size : 160 , Weight : 900 }), RGB ( 0 , 0 , 0 ), 0 , 0 , 512 , 512 , 2 , 2 ); text_mask . ReleaseGraphics (); temp_gr = null ; var img = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var square = make_square ( img , 300 ); function make_square ( img , size ) { if ( ! img ) return null ; if ( img . Width < img . Height ) { var src_x = 0 ; var src_w = img . Width ; var src_h = img . Width ; var src_y = Math . round (( img . Height - src_h ) / 4 ); } else { var src_y = 0 ; var src_w = img . Height ; var src_h = img . Height ; var src_x = Math . round (( img . Width - src_w ) / 2 ); } var square = utils . CreateImage ( size , size ); var temp_gr = square . GetGraphics (); temp_gr . DrawImage ( img , 0 , 0 , size , size , src_x , src_y , src_w , src_h ); square . ReleaseGraphics (); return square ; } function on_paint ( gr ) { gr . FillRectangle ( 0 , 0 , window . Width , window . Height , RGB ( 255 , 0 , 0 )); // original image as-is gr . DrawImage ( img , 0 , 0 , img . Width , img . Height , 0 , 0 , img . Width , img . Height ); // squared image, no mask gr . DrawImage ( square , 0 , img . Height , square . Width , square . Height , 0 , 0 , square . Width , square . Height ) // squared image, circular mask gr . DrawImageWithMask ( square , circular_mask , 300 , img . Height , square . Width , square . Height ); // squared image, text mask gr . DrawImageWithMask ( square , text_mask , 600 , img . Height , square . Width , square . Height ); } DrawLine(x1, y1, x2, y2, line_width, colour) # Arguments x1 number y1 number x2 number y2 number line_width number colour number No return value. DrawRectangle(x, y, w, h, line_width, colour) # Arguments x number y number w number h number line_width number colour number No return value. DrawRoundedRectangle(x, y, w, h, radiusX, radiusY, line_width, colour) # Arguments x number y number w number h number radiusX number radiusY number line_width number colour number No return value. FillEllipse(centreX, centreY, radiusX, radiusY, colour) # Arguments centreX number centreY number radiusX number radiusY number colour number No return value. FillGradientRectangle(x, y, w, h, direction, colour1, colour2) # Arguments x number y number w number h number direction number 0 vertical, 1 horizontal colour1 number colour2 number No return value. FillGradientRectangleAdvanced(x, y, w, h, str) # Arguments x number y number w number h number str string A brush object that needs to be stringifed. See examples below. No return value. This allows you to create D2D Linear and Radial brushes. Example Linear Brush Radial Brush // ==PREPROCESSOR== // @name \"FillGradientRectangleAdvanced (Linear)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var brush = { start : [ 0 , 0 ], // x and y values end : [ 0 , 0 ], // x and y values stops : [ [ 0.0 , RGB ( 227 , 9 , 64 , 1 ) ], [ 0.33 , RGB ( 231 , 215 , 2 ) ], [ 0.66 , RGB ( 15 , 168 , 149 ) ], [ 1.0 , RGB ( 19 , 115 , 232 ) ] ] }; function on_paint ( gr ) { // Vertical effect brush . end = [ 0 , window . Height ]; // If you wanted a horizontal effect, you'd use // brush.end = [window.Width, 0] var str = JSON . stringify ( brush ); gr . FillGradientRectangleAdvanced ( 0 , 0 , window . Width , window . Height , str ); } // ==PREPROCESSOR== // @name \"FillGradientRectangleAdvanced (Radial)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var brush = { centre : [ 0 , 0 ], // x and y values radius : [ 0 , 0 ], // x and y values stops : [ [ 0.0 , RGB ( 227 , 9 , 64 , 1 ) ], [ 0.33 , RGB ( 231 , 215 , 2 ) ], [ 0.66 , RGB ( 15 , 168 , 149 ) ], [ 1.0 , RGB ( 19 , 115 , 232 ) ] ] }; function on_paint ( gr ) { brush . centre = [ window . Width / 2 , window . Height / 2 ]; brush . radius = [ window . Width / 2 , window . Height / 2 ]; var str = JSON . stringify ( brush ); gr . FillGradientRectangleAdvanced ( 0 , 0 , window . Width , window . Height , str ); } FillRectangle(x, y, w, h, colour) # Arguments x number y number w number h number colour number No return value. FillRoundedRectangle(x, y, w, h, radiusX, radiusY, colour) # Arguments x number y number w number h number radiusX number radiusY number colour number No return value. WriteText(text, font, colour, x, y, w, h[, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity]) # Arguments text string font string colour number x number y number w number h number text_aligment DWRITE_TEXT_ALIGNMENT Default 0 . paragraph_aligment DWRITE_PARAGRAPH_ALIGNMENT Default 0 . word_wrapping DWRITE_WORD_WRAPPING Default 0 . trimming_granularity DWRITE_TRIMMING_GRANULARITY Default 0 . No return value. The font must be in string form and this can come directly from using window.GetFontCUI / window.GetFontDUI . If you prefer, you can create your own from scratch. Example var obj = { Name : \"Segoe UI\" , Size : 16 , Weight : 400 , Style : 0 , Stretch : 5 , } var font = JSON . stringify ( obj ); See Flags for all available options. None are mandatory. You can even supply an empty string and defaults of Segoe UI and a font size of 16px will be used. It's also possible to style ranges of text with different fonts/properties/colours using an array. Example // ==PREPROCESSOR== // @name \"WriteTextStyles\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== /* This sample splits a string in to whole words and then randomly styles each one and updates itself twice a second. Every element of the array which is used for styling must have a valid start/length value. You can see how the start value is incremented for each word. */ var fonts = utils . ListFonts (). toArray (); var text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.' ; // split text in to whole words for styling var arr = text . split ( ' ' ); var styles = []; refresh (); window . SetInterval ( function () { refresh (); window . Repaint (); }, 500 ); function refresh () { styles = []; var start = 0 ; arr . forEach ( function ( item , i ) { styles . push ({ // when using an array of styles, Start and Length are mandatory Start : start , Length : item . length + 1 , // the following are all optional and may be omitted. Segoe UI/16px will be used if Name/Size are not specified. Name : fonts [ Math . floor ( Math . random () * fonts . length )], Size : 12 + Math . floor ( Math . random () * 20 ), Weight : Math . round ( Math . random () * 800 ) + 100 , // values between 100-900 Underline : Math . random () < 0.1 , Strikethrough : Math . random () < 0.1 , Colour : RGB ( Math . random () * 200 , Math . random () * 200 , Math . random () * 200 ), }); start += item . length + 1 ; }); } function on_paint ( gr ) { gr . WriteText ( text , JSON . stringify ( styles ), 0 , 10 , 10 , window . Width - 20 , window . Height - 20 ); } WriteTextLayout(text_layout, colour, x, y, w, h, vertical_offset) # Arguments text_layout ITextLayout colour number x number y number w number h number vertical_offset number Default 0 . See utils.CreateTextLayout for an example.","title":"IJSGraphics"},{"location":"docs/interfaces/IJSGraphics/#drawellipsecentrex-centrey-radiusx-radiusy-line_width-colour","text":"Arguments centreX number centreY number radiusX number radiusY number line_width number colour number No return value.","title":"DrawEllipse(centreX, centreY, radiusX, radiusY, line_width, colour)"},{"location":"docs/interfaces/IJSGraphics/#drawimageimage-dstx-dsty-dstw-dsth-srcx-srcy-srcw-srch-opacity-angle","text":"Arguments image IJSImage dstX number dstY number dstW number dstH number srcX number srcY number srcW number srcH number opacity number Floating point number between 0 and 1 . Default 1 . angle number Default 0 . No return value. Note This differs from previous versions where alpha has been replaced with opacity . Also, angle is now the last argument.","title":"DrawImage(image, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH[, opacity, angle])"},{"location":"docs/interfaces/IJSGraphics/#drawimagewithmaskimage-mask_image-x-y-w-h","text":"Arguments image IJSImage mask_image IJSImage x number y number w number h number Example Because this method does not support src co-ords, this sample makes the original image square first which is more suitable for a circular mask. Also included is a text mask example. Unlike the previous ApplyMask , there should be no white background. Just draw black for where you want to keep. Mask images don't have to have the same width/height. // ==PREPROCESSOR== // @name \"DrawImageWithMask\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var temp_gr ; var circular_mask = utils . CreateImage ( 512 , 512 ); temp_gr = circular_mask . GetGraphics (); temp_gr . FillEllipse ( 256 , 256 , 256 , 256 , RGB ( 0 , 0 , 0 )); circular_mask . ReleaseGraphics (); temp_gr = null ; var text_mask = utils . CreateImage ( 512 , 512 ); temp_gr = text_mask . GetGraphics (); temp_gr . DrawRectangle ( 0 , 0 , 512 , 512 , 10 , RGB ( 0 , 0 , 0 )); temp_gr . WriteText ( \"MASK\" , JSON . stringify ({ Size : 160 , Weight : 900 }), RGB ( 0 , 0 , 0 ), 0 , 0 , 512 , 512 , 2 , 2 ); text_mask . ReleaseGraphics (); temp_gr = null ; var img = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var square = make_square ( img , 300 ); function make_square ( img , size ) { if ( ! img ) return null ; if ( img . Width < img . Height ) { var src_x = 0 ; var src_w = img . Width ; var src_h = img . Width ; var src_y = Math . round (( img . Height - src_h ) / 4 ); } else { var src_y = 0 ; var src_w = img . Height ; var src_h = img . Height ; var src_x = Math . round (( img . Width - src_w ) / 2 ); } var square = utils . CreateImage ( size , size ); var temp_gr = square . GetGraphics (); temp_gr . DrawImage ( img , 0 , 0 , size , size , src_x , src_y , src_w , src_h ); square . ReleaseGraphics (); return square ; } function on_paint ( gr ) { gr . FillRectangle ( 0 , 0 , window . Width , window . Height , RGB ( 255 , 0 , 0 )); // original image as-is gr . DrawImage ( img , 0 , 0 , img . Width , img . Height , 0 , 0 , img . Width , img . Height ); // squared image, no mask gr . DrawImage ( square , 0 , img . Height , square . Width , square . Height , 0 , 0 , square . Width , square . Height ) // squared image, circular mask gr . DrawImageWithMask ( square , circular_mask , 300 , img . Height , square . Width , square . Height ); // squared image, text mask gr . DrawImageWithMask ( square , text_mask , 600 , img . Height , square . Width , square . Height ); }","title":"DrawImageWithMask(image, mask_image, x, y, w, h)"},{"location":"docs/interfaces/IJSGraphics/#drawlinex1-y1-x2-y2-line_width-colour","text":"Arguments x1 number y1 number x2 number y2 number line_width number colour number No return value.","title":"DrawLine(x1, y1, x2, y2, line_width, colour)"},{"location":"docs/interfaces/IJSGraphics/#drawrectanglex-y-w-h-line_width-colour","text":"Arguments x number y number w number h number line_width number colour number No return value.","title":"DrawRectangle(x, y, w, h, line_width, colour)"},{"location":"docs/interfaces/IJSGraphics/#drawroundedrectanglex-y-w-h-radiusx-radiusy-line_width-colour","text":"Arguments x number y number w number h number radiusX number radiusY number line_width number colour number No return value.","title":"DrawRoundedRectangle(x, y, w, h, radiusX, radiusY, line_width, colour)"},{"location":"docs/interfaces/IJSGraphics/#fillellipsecentrex-centrey-radiusx-radiusy-colour","text":"Arguments centreX number centreY number radiusX number radiusY number colour number No return value.","title":"FillEllipse(centreX, centreY, radiusX, radiusY, colour)"},{"location":"docs/interfaces/IJSGraphics/#fillgradientrectanglex-y-w-h-direction-colour1-colour2","text":"Arguments x number y number w number h number direction number 0 vertical, 1 horizontal colour1 number colour2 number No return value.","title":"FillGradientRectangle(x, y, w, h, direction, colour1, colour2)"},{"location":"docs/interfaces/IJSGraphics/#fillgradientrectangleadvancedx-y-w-h-str","text":"Arguments x number y number w number h number str string A brush object that needs to be stringifed. See examples below. No return value. This allows you to create D2D Linear and Radial brushes. Example Linear Brush Radial Brush // ==PREPROCESSOR== // @name \"FillGradientRectangleAdvanced (Linear)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var brush = { start : [ 0 , 0 ], // x and y values end : [ 0 , 0 ], // x and y values stops : [ [ 0.0 , RGB ( 227 , 9 , 64 , 1 ) ], [ 0.33 , RGB ( 231 , 215 , 2 ) ], [ 0.66 , RGB ( 15 , 168 , 149 ) ], [ 1.0 , RGB ( 19 , 115 , 232 ) ] ] }; function on_paint ( gr ) { // Vertical effect brush . end = [ 0 , window . Height ]; // If you wanted a horizontal effect, you'd use // brush.end = [window.Width, 0] var str = JSON . stringify ( brush ); gr . FillGradientRectangleAdvanced ( 0 , 0 , window . Width , window . Height , str ); } // ==PREPROCESSOR== // @name \"FillGradientRectangleAdvanced (Radial)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var brush = { centre : [ 0 , 0 ], // x and y values radius : [ 0 , 0 ], // x and y values stops : [ [ 0.0 , RGB ( 227 , 9 , 64 , 1 ) ], [ 0.33 , RGB ( 231 , 215 , 2 ) ], [ 0.66 , RGB ( 15 , 168 , 149 ) ], [ 1.0 , RGB ( 19 , 115 , 232 ) ] ] }; function on_paint ( gr ) { brush . centre = [ window . Width / 2 , window . Height / 2 ]; brush . radius = [ window . Width / 2 , window . Height / 2 ]; var str = JSON . stringify ( brush ); gr . FillGradientRectangleAdvanced ( 0 , 0 , window . Width , window . Height , str ); }","title":"FillGradientRectangleAdvanced(x, y, w, h, str)"},{"location":"docs/interfaces/IJSGraphics/#fillrectanglex-y-w-h-colour","text":"Arguments x number y number w number h number colour number No return value.","title":"FillRectangle(x, y, w, h, colour)"},{"location":"docs/interfaces/IJSGraphics/#fillroundedrectanglex-y-w-h-radiusx-radiusy-colour","text":"Arguments x number y number w number h number radiusX number radiusY number colour number No return value.","title":"FillRoundedRectangle(x, y, w, h, radiusX, radiusY, colour)"},{"location":"docs/interfaces/IJSGraphics/#writetexttext-font-colour-x-y-w-h-text_alignment-paragraph_alignment-word_wrapping-trimming_granularity","text":"Arguments text string font string colour number x number y number w number h number text_aligment DWRITE_TEXT_ALIGNMENT Default 0 . paragraph_aligment DWRITE_PARAGRAPH_ALIGNMENT Default 0 . word_wrapping DWRITE_WORD_WRAPPING Default 0 . trimming_granularity DWRITE_TRIMMING_GRANULARITY Default 0 . No return value. The font must be in string form and this can come directly from using window.GetFontCUI / window.GetFontDUI . If you prefer, you can create your own from scratch. Example var obj = { Name : \"Segoe UI\" , Size : 16 , Weight : 400 , Style : 0 , Stretch : 5 , } var font = JSON . stringify ( obj ); See Flags for all available options. None are mandatory. You can even supply an empty string and defaults of Segoe UI and a font size of 16px will be used. It's also possible to style ranges of text with different fonts/properties/colours using an array. Example // ==PREPROCESSOR== // @name \"WriteTextStyles\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== /* This sample splits a string in to whole words and then randomly styles each one and updates itself twice a second. Every element of the array which is used for styling must have a valid start/length value. You can see how the start value is incremented for each word. */ var fonts = utils . ListFonts (). toArray (); var text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.' ; // split text in to whole words for styling var arr = text . split ( ' ' ); var styles = []; refresh (); window . SetInterval ( function () { refresh (); window . Repaint (); }, 500 ); function refresh () { styles = []; var start = 0 ; arr . forEach ( function ( item , i ) { styles . push ({ // when using an array of styles, Start and Length are mandatory Start : start , Length : item . length + 1 , // the following are all optional and may be omitted. Segoe UI/16px will be used if Name/Size are not specified. Name : fonts [ Math . floor ( Math . random () * fonts . length )], Size : 12 + Math . floor ( Math . random () * 20 ), Weight : Math . round ( Math . random () * 800 ) + 100 , // values between 100-900 Underline : Math . random () < 0.1 , Strikethrough : Math . random () < 0.1 , Colour : RGB ( Math . random () * 200 , Math . random () * 200 , Math . random () * 200 ), }); start += item . length + 1 ; }); } function on_paint ( gr ) { gr . WriteText ( text , JSON . stringify ( styles ), 0 , 10 , 10 , window . Width - 20 , window . Height - 20 ); }","title":"WriteText(text, font, colour, x, y, w, h[, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity])"},{"location":"docs/interfaces/IJSGraphics/#writetextlayouttext_layout-colour-x-y-w-h-vertical_offset","text":"Arguments text_layout ITextLayout colour number x number y number w number h number vertical_offset number Default 0 . See utils.CreateTextLayout for an example.","title":"WriteTextLayout(text_layout, colour, x, y, w, h, vertical_offset)"},{"location":"docs/interfaces/IJSImage/","text":"Properties Height number read Path string read This will the source path of the image when created from the various album art methods and utils.LoadImage . Will be empty if image is cloned or created with utils.CreateImage or utils.LoadSVG . Width number read Methods ApplyEffect(effect) # Arguments effect ImageEffect No return value. Note This method requires Windows 10 or later. If used on earlier versions, a script error will be thrown. Example var original = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var grayscale = original . Clone (); var invert = original . Clone (); var sepia = original . Clone (); grayscale . ApplyEffect ( 0 ); invert . ApplyEffect ( 1 ); sepia . ApplyEffect ( 2 ); function on_mouse_lbtn_dblclk () { original . SaveAs ( \"z:\\\\original.jpg\" ); grayscale . SaveAs ( \"z:\\\\grayscale.jpg\" ); invert . SaveAs ( \"z:\\\\invert.jpg\" ); sepia . SaveAs ( \"z:\\\\sepia.jpg\" ); } Original Grayscale Invert Sepia Clone() # Returns an IJSImage instance. Dispose() # No return value. FlipRotate(options) # Arguments options WICBitmapTransform No return value. GetColourScheme(count) # Arguments count number Returns a VBArray so you need to use .toArray() on the result. Example // Tracks playlist selection var img = null ; var arr = []; on_item_focus_change (); function on_item_focus_change () { if ( img ) { img . Dispose (); img = null ; } arr = []; var metadb = fb . GetFocusItem (); if ( metadb ) { img = metadb . GetAlbumArt (); if ( img ) { arr = img . GetColourScheme ( 10 ). toArray (); } } window . Repaint (); } function on_paint ( gr ) { if ( img && arr . length ) { gr . DrawImage ( img , 0 , 0 , 300 , 300 , 0 , 0 , img . Width , img . Height ); for ( var i = 0 ; i < arr . length ; i ++ ) { gr . FillRectangle ( 300 , i * 30 , window . Width - 300 , 30 , arr [ i ]); } } } function on_playlist_switch () { on_item_focus_change (); } GetGraphics() # Return an IJSGraphics instance. ReleaseGraphics() # No return value. Resize(width, height) # Arguments width number height number No return value. SaveAs(path) # Arguments path string The parent folder must already exist. The image is saved as JPG so you should use that as the file extension. Returns a boolean value to indicate success. StackBlur(radius) # Arguments radius number Valid values 2 - 254 . No return value. Example // ==PREPROCESSOR== // @name \"StackBlur (image)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var img = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var blur_img = null ; var radius = 20 ; StackBlur ( radius ); function StackBlur ( radius ) { if ( blur_img ) blur_img . Dispose (); blur_img = img . Clone (); blur_img . StackBlur ( radius ); } function on_paint ( gr ) { gr . DrawImage ( img , 0 , 0 , 550 , 368 , 0 , 0 , 550 , 368 ); gr . DrawImage ( blur_img , 0 , 368 , 550 , 368 , 0 , 0 , 550 , 368 ); gr . FillRectangle ( 0 , 0 , window . Width , 24 , RGB ( 0 , 0 , 0 )); gr . WriteText ( 'Scroll mouse to change radius: ' + radius , '' , RGB ( 255 , 255 , 255 ), 0 , 0 , window . Width , 24 , 2 , 0 ); } function on_mouse_wheel ( step ) { radius += step * 5 ; if ( radius < 2 ) radius = 2 ; if ( radius > 254 ) radius = 254 ; StackBlur ( radius ); window . Repaint (); }","title":"IJSImage"},{"location":"docs/interfaces/IJSImage/#applyeffecteffect","text":"Arguments effect ImageEffect No return value. Note This method requires Windows 10 or later. If used on earlier versions, a script error will be thrown. Example var original = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var grayscale = original . Clone (); var invert = original . Clone (); var sepia = original . Clone (); grayscale . ApplyEffect ( 0 ); invert . ApplyEffect ( 1 ); sepia . ApplyEffect ( 2 ); function on_mouse_lbtn_dblclk () { original . SaveAs ( \"z:\\\\original.jpg\" ); grayscale . SaveAs ( \"z:\\\\grayscale.jpg\" ); invert . SaveAs ( \"z:\\\\invert.jpg\" ); sepia . SaveAs ( \"z:\\\\sepia.jpg\" ); } Original Grayscale Invert Sepia","title":"ApplyEffect(effect)"},{"location":"docs/interfaces/IJSImage/#clone","text":"Returns an IJSImage instance.","title":"Clone()"},{"location":"docs/interfaces/IJSImage/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IJSImage/#fliprotateoptions","text":"Arguments options WICBitmapTransform No return value.","title":"FlipRotate(options)"},{"location":"docs/interfaces/IJSImage/#getcolourschemecount","text":"Arguments count number Returns a VBArray so you need to use .toArray() on the result. Example // Tracks playlist selection var img = null ; var arr = []; on_item_focus_change (); function on_item_focus_change () { if ( img ) { img . Dispose (); img = null ; } arr = []; var metadb = fb . GetFocusItem (); if ( metadb ) { img = metadb . GetAlbumArt (); if ( img ) { arr = img . GetColourScheme ( 10 ). toArray (); } } window . Repaint (); } function on_paint ( gr ) { if ( img && arr . length ) { gr . DrawImage ( img , 0 , 0 , 300 , 300 , 0 , 0 , img . Width , img . Height ); for ( var i = 0 ; i < arr . length ; i ++ ) { gr . FillRectangle ( 300 , i * 30 , window . Width - 300 , 30 , arr [ i ]); } } } function on_playlist_switch () { on_item_focus_change (); }","title":"GetColourScheme(count)"},{"location":"docs/interfaces/IJSImage/#getgraphics","text":"Return an IJSGraphics instance.","title":"GetGraphics()"},{"location":"docs/interfaces/IJSImage/#releasegraphics","text":"No return value.","title":"ReleaseGraphics()"},{"location":"docs/interfaces/IJSImage/#resizewidth-height","text":"Arguments width number height number No return value.","title":"Resize(width, height)"},{"location":"docs/interfaces/IJSImage/#saveaspath","text":"Arguments path string The parent folder must already exist. The image is saved as JPG so you should use that as the file extension. Returns a boolean value to indicate success.","title":"SaveAs(path)"},{"location":"docs/interfaces/IJSImage/#stackblurradius","text":"Arguments radius number Valid values 2 - 254 . No return value. Example // ==PREPROCESSOR== // @name \"StackBlur (image)\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var img = utils . LoadImage ( fb . ComponentPath + 'samples\\\\images\\\\1.webp' ); var blur_img = null ; var radius = 20 ; StackBlur ( radius ); function StackBlur ( radius ) { if ( blur_img ) blur_img . Dispose (); blur_img = img . Clone (); blur_img . StackBlur ( radius ); } function on_paint ( gr ) { gr . DrawImage ( img , 0 , 0 , 550 , 368 , 0 , 0 , 550 , 368 ); gr . DrawImage ( blur_img , 0 , 368 , 550 , 368 , 0 , 0 , 550 , 368 ); gr . FillRectangle ( 0 , 0 , window . Width , 24 , RGB ( 0 , 0 , 0 )); gr . WriteText ( 'Scroll mouse to change radius: ' + radius , '' , RGB ( 255 , 255 , 255 ), 0 , 0 , window . Width , 24 , 2 , 0 ); } function on_mouse_wheel ( step ) { radius += step * 5 ; if ( radius < 2 ) radius = 2 ; if ( radius > 254 ) radius = 254 ; StackBlur ( radius ); window . Repaint (); }","title":"StackBlur(radius)"},{"location":"docs/interfaces/IMainMenuManager/","text":"BuildMenu(parentMenu, base_id) # Arguments parentMenu IMenuObj base_id number No return value. Dispose() # No return value. ExecuteByID(id) # Arguments id number Returns a boolean value.","title":"IMainMenuManager"},{"location":"docs/interfaces/IMainMenuManager/#buildmenuparentmenu-base_id","text":"Arguments parentMenu IMenuObj base_id number No return value.","title":"BuildMenu(parentMenu, base_id)"},{"location":"docs/interfaces/IMainMenuManager/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IMainMenuManager/#executebyidid","text":"Arguments id number Returns a boolean value.","title":"ExecuteByID(id)"},{"location":"docs/interfaces/IMenuObj/","text":"Methods AppendMenuItem(flags, item_id, text) # Arguments flags AppendMenuItem Flags item_id number Must not be zero. Each id must be unique. text string No return value. AppendMenuSeparator() # No return value. AppendTo(parentMenu, flags, text) # Arguments parentMenu IMenuObj flags AppendMenuItem Flags text string No return value. CheckMenuItem(item_id, check) # Arguments item_id number check boolean No return value. CheckMenuRadioItem(first_item_id, last_item_id, selected_item_id) # Arguments first_item_id number last_item_id number selected_item_id number No return value. Dispose() # No return value. TrackPopupMenu(x, y[, flags]) # Arguments x number y number flags TrackPopupMenu Flags Default 0 . Returns a number .","title":"IMenuObj"},{"location":"docs/interfaces/IMenuObj/#appendmenuitemflags-item_id-text","text":"Arguments flags AppendMenuItem Flags item_id number Must not be zero. Each id must be unique. text string No return value.","title":"AppendMenuItem(flags, item_id, text)"},{"location":"docs/interfaces/IMenuObj/#appendmenuseparator","text":"No return value.","title":"AppendMenuSeparator()"},{"location":"docs/interfaces/IMenuObj/#appendtoparentmenu-flags-text","text":"Arguments parentMenu IMenuObj flags AppendMenuItem Flags text string No return value.","title":"AppendTo(parentMenu, flags, text)"},{"location":"docs/interfaces/IMenuObj/#checkmenuitemitem_id-check","text":"Arguments item_id number check boolean No return value.","title":"CheckMenuItem(item_id, check)"},{"location":"docs/interfaces/IMenuObj/#checkmenuradioitemfirst_item_id-last_item_id-selected_item_id","text":"Arguments first_item_id number last_item_id number selected_item_id number No return value.","title":"CheckMenuRadioItem(first_item_id, last_item_id, selected_item_id)"},{"location":"docs/interfaces/IMenuObj/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IMenuObj/#trackpopupmenux-y-flags","text":"Arguments x number y number flags TrackPopupMenu Flags Default 0 . Returns a number .","title":"TrackPopupMenu(x, y[, flags])"},{"location":"docs/interfaces/IMetadbHandle/","text":"This will be used in the examples below: var handle = fb . GetFocusItem (); Note In real world code, you should alaways check the return values from methods like fb.GetFocusItem and fb.GetNowPlaying are not null . Properties FileSize number read Length number read Path string read RawPath string read SubSong number read Example console . log ( handle . Path ); // D:\\SomeSong.flac console . log ( handle . RawPath ); // file://D:\\SomeSong.flac Methods Compare(handle) # Arguments handle IMetadbHandle Returns a boolean value. Example if ( handle . Compare ( handle2 )) { // do something } Dispose() # No return value. GetAlbumArt([art_id, want_stub]) # Arguments art_id AlbumArtId Default 0 . want_stub boolean Default true . Returns an IJSImage instance or null on failure. Note If using foobar2000 v1.6.6 or later, this method can return album art from certain radio streams if the requested type is Front . Use on_playback_dynamic_info_track to get notified of stream artwork changes. Example var image = handle . GetAlbumArt (); if ( image != null ) { // The path is now a property of the image. console . log ( image . Path ); } GetAlbumArtAsync(window_id, art_id, want_stub) # Arguments window_id window.ID art_id AlbumArtId Default 0 . want_stub boolean Default true . Use in conjunction with on_get_album_art_done . GetAlbumArtEmbedded([art_id]) # Arguments art_id AlbumArtId Default 0 . Returns an IJSimage instance or null on failure. GetFileInfo([full_info]) # Arguments full_info boolean Default false . Returns an IFileInfo instance. If full_info is omitted or false , the return value is always a valid IFileInfo instance. If full_info is set to true , the file is opened for reading and this may fail and return null . Therefore, you you must always check the return value before using it. Typically you'd only use full_info when you wanted to access tags that contain large chunks of text such as LYRICS which are usually hidden behind the period character ever since foobar2000 v1.3 for performance reasons. Example Default Full Info var f = handle . GetFileInfo (); // No need to check f before using, we know it's valid console . log ( f . MetaCount ); var f = handle . GetFileInfo ( true ); var lyrics_text = \"\" ; // Must check. if ( f ) { var idx = f . MetaFind ( \"LYRICS\" ); if ( idx > - 1 ) { lyrics_text = f . MetaValue ( idx , 0 ); } } IsInLibrary() # Returns a boolean value. ShowAlbumArtViewer([art_id, want_stub]) # Arguments art_id AlbumArtId Default 0 . want_stub boolean Default true . No return value. Note Requires foobar2000 v1.6.2 or later. Displays a popup text dialog if not supported / album art not found.","title":"IMetadbHandle"},{"location":"docs/interfaces/IMetadbHandle/#comparehandle","text":"Arguments handle IMetadbHandle Returns a boolean value. Example if ( handle . Compare ( handle2 )) { // do something }","title":"Compare(handle)"},{"location":"docs/interfaces/IMetadbHandle/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IMetadbHandle/#getalbumartart_id-want_stub","text":"Arguments art_id AlbumArtId Default 0 . want_stub boolean Default true . Returns an IJSImage instance or null on failure. Note If using foobar2000 v1.6.6 or later, this method can return album art from certain radio streams if the requested type is Front . Use on_playback_dynamic_info_track to get notified of stream artwork changes. Example var image = handle . GetAlbumArt (); if ( image != null ) { // The path is now a property of the image. console . log ( image . Path ); }","title":"GetAlbumArt([art_id, want_stub])"},{"location":"docs/interfaces/IMetadbHandle/#getalbumartasyncwindow_id-art_id-want_stub","text":"Arguments window_id window.ID art_id AlbumArtId Default 0 . want_stub boolean Default true . Use in conjunction with on_get_album_art_done .","title":"GetAlbumArtAsync(window_id, art_id, want_stub)"},{"location":"docs/interfaces/IMetadbHandle/#getalbumartembeddedart_id","text":"Arguments art_id AlbumArtId Default 0 . Returns an IJSimage instance or null on failure.","title":"GetAlbumArtEmbedded([art_id])"},{"location":"docs/interfaces/IMetadbHandle/#getfileinfofull_info","text":"Arguments full_info boolean Default false . Returns an IFileInfo instance. If full_info is omitted or false , the return value is always a valid IFileInfo instance. If full_info is set to true , the file is opened for reading and this may fail and return null . Therefore, you you must always check the return value before using it. Typically you'd only use full_info when you wanted to access tags that contain large chunks of text such as LYRICS which are usually hidden behind the period character ever since foobar2000 v1.3 for performance reasons. Example Default Full Info var f = handle . GetFileInfo (); // No need to check f before using, we know it's valid console . log ( f . MetaCount ); var f = handle . GetFileInfo ( true ); var lyrics_text = \"\" ; // Must check. if ( f ) { var idx = f . MetaFind ( \"LYRICS\" ); if ( idx > - 1 ) { lyrics_text = f . MetaValue ( idx , 0 ); } }","title":"GetFileInfo([full_info])"},{"location":"docs/interfaces/IMetadbHandle/#isinlibrary","text":"Returns a boolean value.","title":"IsInLibrary()"},{"location":"docs/interfaces/IMetadbHandle/#showalbumartviewerart_id-want_stub","text":"Arguments art_id AlbumArtId Default 0 . want_stub boolean Default true . No return value. Note Requires foobar2000 v1.6.2 or later. Displays a popup text dialog if not supported / album art not found.","title":"ShowAlbumArtViewer([art_id, want_stub])"},{"location":"docs/interfaces/IMetadbHandleList/","text":"This will be used in the examples below: var handle_list = plman . GetPlaylistItems ( plman . ActivePlaylist ); You can create an empty handle list with fb.CreateHandleList . var handle_list = fb . CreateHandleList (); If you need to create a handle list from a single handle, you can do this... var handle = fb . GetFocusItem (); if ( handle ) { var handle_list = fb . CreateHandleList ( handle ); } Properties Count number read Methods AddItem(handle) # Arguments handle IMetadbHandle No return value. AddItems(handle_list) # Arguments handle_list IMetadbHandleList No return value. AttachImage(image_path[, art_id]) # Arguments image_path string art_id AlbumArtId Default 0 . No return value. Any errors such as invalid path, corrupt image, target file type not supporting embedded art, etc should all silently fail. A progress dialog will be shown for larger file selections. Any existing artwork of the specified type will be overwritten. There is no need to remove it first. Example var handle_list = plman . GetPlaylistItems ( plman . ActivePlaylist ); if ( handle_list . Count > 0 ) { var image_path = \"C:\\\\path\\\\to\\\\image.jpg\" ; handle_list . AttachImage ( image_path , 0 ); } handle_list . Dispose (); CalcTotalDuration() # Returns total in seconds. CalcTotalSize() # Returns total in bytes. Clone() # Returns an IMetadbHandleList instance. Example var handle_list2 = handle_list . Clone (); CopyToClipboard() # Returns a boolean value. Example Copy playlist items Cut playlist items var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); handle_list . CopyToClipboard (); handle_list . Dispose (); // To \"cut\" playlist items, we need to check there are // no locks in place preventing removal. var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 }; var ap = plman . ActivePlaylist ; var mask = plman . GetPlaylistLockFilterMask ( ap ); if ( ! ( mask & PlaylistLockFilterMask . filter_remove )) { var handle_list = plman . GetPlaylistSelectedItems ( ap ); if ( handle_list . CopyToClipboard ()) { plman . UndoBackup ( ap ); plman . RemovePlaylistSelection ( ap ); } handle_list . Dispose (); } DoDragDrop(effect) # Arguments effect number Returns a number . Dispose() # No return value. Find(handle) # Arguments handle IMetadbHandle Returns position of handle or -1 on failure. GetItem(index) # Arguments index number Returns an IMetadbHandle instance. Example var handle = handle_list . GetItem ( 0 ); GetLibraryRelativePaths() # Returns a VBArray so you need to use .toArray() on the result. This is useful for creating an Album List like script in folder structure mode where you'd like the monitored music folder removed from the path of each handle list item. Example If the foobar2000 Media Library is configured to watch D:\\Music\\ and the path of the first item in the handle list is D:\\Music\\Albums\\Artist\\Some Album\\Some Song.flac then... var handle_list = fb . GetLibraryItems (); handle_list . SortByRelativePath (); var relative_paths = handle_list . GetLibraryRelativePaths (). toArray (); console . log ( relative_paths [ 0 ]); // Albums\\Artist\\Some Album\\Some Song.flac GetOtherInfo() # This returns a JSON object in string form so you need to use JSON.parse on the result. It provides all the information viewable on the Details tab in the main Properties dialog. This can be technical/location info as well as database fields from 3rd party components if present. Example var handle_list = plman . GetPlaylistItems ( plman . ActivePlaylist ); var str = handle_list . GetOtherInfo (); console . log ( str ); Example output { \"General\": { \"Avg. bitrate\": \"259 kbps\", \"Channels\": \"2\", \"Codec\": \"MP3 (82.5%); AAC (17.5%)\", \"Codec profile\": \"MP3 VBR V0 (39.1%); MP3 CBR (24.3%); AAC LC (17.5%); MP3 VBR V2 (11.7%); MP3 VBR (3.9%); MP3 ABR (3.5%)\", \"Duration\": \"5:24:44.445 (859 264 046 samples)\", \"Encoding\": \"lossy\", \"Sample rate\": \"44100 Hz\", \"Tag type\": \"id3v2.4 (82.5%)\", \"Tool\": \"LAME3.97 (27.6%); LAME3.99r (13.7%); LAME3.90 (7.4%); LAME3.98r (5.5%); LAME3.99 (5.4%); Lavf (4.7%); LAME3.97b (3.8%); LAME3.98b (3.5%); LAME3.96r (1.2%); LAME3.100 (1.1%)\" }, \"Location\": { \"File names\": \"Bat For Lashes - Clouds.mp3, Bat For Lashes - Daphne.m4a, Bat For Lashes - Lumen.m4a, Bat For Lashes - Plan The Escape.mp3 ...\", \"Folder name\": \"E:\\\\Music\\\\Tracks\", \"Last modified\": \"2021-12-01 00:00:00\", \"Total size\": \"601 MB (631 125 587 bytes)\" } } GetQueryItems(query) # Arguments query string Returns an IMetadbHandleList instance. Note Errors will be thrown on invalid queries so if you're not using predefined safe queries and are accepting user input, you should use this inside a try/catch statement. An empty handle list will be returned if the query is valid but there are no results. InsertItem(index, handle) # Arguments index number handle IMetadbHandle No return value. Example var handle = ... handle_list . InsertItem ( 0 , handle ); InsertItems(index, handle_list) # Arguments index number handle_list IMetadbHandleList No return value. MakeDifference(handle_list) # Arguments handle_list IMetadbHandleList No return value. Example var one = plman . GetPlaylistItems ( 0 ); var two = plman . GetPlaylistItems ( 1 ); one . MakeDifference ( two ); one now only contains handles that were unique to one . Anything that also existed in two will have been removed. The order of items in one will be randomised. two should be untouched. MakeIntersection(handle_list) # Arguments handle_list IMetadbHandleList No return value. Example var one = plman . GetPlaylistItems ( 0 ); var two = plman . GetPlaylistItems ( 1 ); one . MakeIntersection ( two ); one now only contains handles that were in BOTH one AND two . The order of items in one will be randomised. two should be untouched. OptimiseFileLayout([minimise]) # Arguments minimise boolean Default false . No return value. With minimise set to false , provides the functionality of Utilities>Optimize file layout or if minimise is true then Utilities>Optimize file layout + minimize file size . Unlike the context menu versions, there is no prompt. Randomise() # No return value. RemoveAll() # No return value. RemoveAttachedImage([art_id]) # Arguments art_id AlbumArtId Default 0 . No return value. RemoveAttachedImages() # No return value. RemoveByIdx(idx) # Arguments idx number No return value. Example handle_list . RemoveByIdx ( 0 ); RemoveDuplicates() # No return value. RemoveDuplicatesByFormat(pattern) # Arguments pattern string No return value. Example // This ensures the handle list will // contain no more than 1 track by the same artist. var handle_list = fb . GetLibraryItems (); handle_list . Randomise (); handle_list . RemoveDuplicatesByFormat ( \"%artist%\" ); RemoveFromIdx(from, num) # Arguments from number num number No return value. ReplaceItem(index, handle) # Arguments index number handle IMetadbHandle No return value. RunContextCommand(command) # Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise. SaveAs(path) # Arguments path string No return value. Saves using native foobar2000 .fpl format so you should use that as the file extension. The parent folder must already exist. Example plman . GetPlaylistItems ( plman . ActivePlaylist ). SaveAs ( \"z:\\\\blah.fpl\" ); SortByFormat(pattern, direction) # Arguments pattern string direction number Ascending while > 0 . No return value. Example var handle_list = fb . GetLibraryItems (); var pattern = \"%album artist%|%date%|%album%|%discnumber%|%tracknumber%\" ; handle_list . SortByFormat ( pattern , 1 ); SortByPath() # No return value. SortByRelativePath() # No return value. Note This method should only be used on a handle list containing items that are monitored as part of the Media Library . UpdateFileInfoFromJSON(str) # Arguments str string This method takes either an array or an object as the argument and this must be ran through the JSON.stringify function before using. Example Array Object This example uses an array and its length must match the handle list count. A fail safe way of doing this is looping through the handle list and filling the array as you go. // assume we've selected one album var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); // an empty array var arr = []; for ( var i = 0 ; i < handle_list . Count ; i ++ ) { // Each element of the array must be an object // of key names/values, indicated by the curly braces. arr . push ({ \"tracknumber\" : i + 1 , \"totaltracks\" : handle_list . Count , \"album\" : \"Greatest Hits\" , // a simple string for a single value \"genre\" : [ \"Rock\" , \"Hard Rock\" ] // use an array for multi-value tags }); } var str = JSON . stringify ( arr ); handle_list . UpdateFileInfoFromJSON ( str ); handle_list . Dispose (); If you want to write the exact same tags to each and every track in the handle list , you can use an object instead. var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); var obj = { \"album\" : \"Greatest Hits\" , \"genre\" : [ \"Rock\" , \"Hard Rock\" ] }; var str = JSON . stringify ( obj ); handle_list . UpdateFileInfoFromJSON ( str ); handle_list . Dispose (); As before, you can use blank values to clear any existing tags. Example var obj = { \"album\" : \"\" }; Do not try using any method of using empty objects or blank tag names to avoid tagging any files. You should filter your handle list first to make sure it only contains files you really want to update.","title":"IMetadbHandleList"},{"location":"docs/interfaces/IMetadbHandleList/#additemhandle","text":"Arguments handle IMetadbHandle No return value.","title":"AddItem(handle)"},{"location":"docs/interfaces/IMetadbHandleList/#additemshandle_list","text":"Arguments handle_list IMetadbHandleList No return value.","title":"AddItems(handle_list)"},{"location":"docs/interfaces/IMetadbHandleList/#attachimageimage_path-art_id","text":"Arguments image_path string art_id AlbumArtId Default 0 . No return value. Any errors such as invalid path, corrupt image, target file type not supporting embedded art, etc should all silently fail. A progress dialog will be shown for larger file selections. Any existing artwork of the specified type will be overwritten. There is no need to remove it first. Example var handle_list = plman . GetPlaylistItems ( plman . ActivePlaylist ); if ( handle_list . Count > 0 ) { var image_path = \"C:\\\\path\\\\to\\\\image.jpg\" ; handle_list . AttachImage ( image_path , 0 ); } handle_list . Dispose ();","title":"AttachImage(image_path[, art_id])"},{"location":"docs/interfaces/IMetadbHandleList/#calctotalduration","text":"Returns total in seconds.","title":"CalcTotalDuration()"},{"location":"docs/interfaces/IMetadbHandleList/#calctotalsize","text":"Returns total in bytes.","title":"CalcTotalSize()"},{"location":"docs/interfaces/IMetadbHandleList/#clone","text":"Returns an IMetadbHandleList instance. Example var handle_list2 = handle_list . Clone ();","title":"Clone()"},{"location":"docs/interfaces/IMetadbHandleList/#copytoclipboard","text":"Returns a boolean value. Example Copy playlist items Cut playlist items var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); handle_list . CopyToClipboard (); handle_list . Dispose (); // To \"cut\" playlist items, we need to check there are // no locks in place preventing removal. var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 }; var ap = plman . ActivePlaylist ; var mask = plman . GetPlaylistLockFilterMask ( ap ); if ( ! ( mask & PlaylistLockFilterMask . filter_remove )) { var handle_list = plman . GetPlaylistSelectedItems ( ap ); if ( handle_list . CopyToClipboard ()) { plman . UndoBackup ( ap ); plman . RemovePlaylistSelection ( ap ); } handle_list . Dispose (); }","title":"CopyToClipboard()"},{"location":"docs/interfaces/IMetadbHandleList/#dodragdropeffect","text":"Arguments effect number Returns a number .","title":"DoDragDrop(effect)"},{"location":"docs/interfaces/IMetadbHandleList/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IMetadbHandleList/#findhandle","text":"Arguments handle IMetadbHandle Returns position of handle or -1 on failure.","title":"Find(handle)"},{"location":"docs/interfaces/IMetadbHandleList/#getitemindex","text":"Arguments index number Returns an IMetadbHandle instance. Example var handle = handle_list . GetItem ( 0 );","title":"GetItem(index)"},{"location":"docs/interfaces/IMetadbHandleList/#getlibraryrelativepaths","text":"Returns a VBArray so you need to use .toArray() on the result. This is useful for creating an Album List like script in folder structure mode where you'd like the monitored music folder removed from the path of each handle list item. Example If the foobar2000 Media Library is configured to watch D:\\Music\\ and the path of the first item in the handle list is D:\\Music\\Albums\\Artist\\Some Album\\Some Song.flac then... var handle_list = fb . GetLibraryItems (); handle_list . SortByRelativePath (); var relative_paths = handle_list . GetLibraryRelativePaths (). toArray (); console . log ( relative_paths [ 0 ]); // Albums\\Artist\\Some Album\\Some Song.flac","title":"GetLibraryRelativePaths()"},{"location":"docs/interfaces/IMetadbHandleList/#getotherinfo","text":"This returns a JSON object in string form so you need to use JSON.parse on the result. It provides all the information viewable on the Details tab in the main Properties dialog. This can be technical/location info as well as database fields from 3rd party components if present. Example var handle_list = plman . GetPlaylistItems ( plman . ActivePlaylist ); var str = handle_list . GetOtherInfo (); console . log ( str ); Example output { \"General\": { \"Avg. bitrate\": \"259 kbps\", \"Channels\": \"2\", \"Codec\": \"MP3 (82.5%); AAC (17.5%)\", \"Codec profile\": \"MP3 VBR V0 (39.1%); MP3 CBR (24.3%); AAC LC (17.5%); MP3 VBR V2 (11.7%); MP3 VBR (3.9%); MP3 ABR (3.5%)\", \"Duration\": \"5:24:44.445 (859 264 046 samples)\", \"Encoding\": \"lossy\", \"Sample rate\": \"44100 Hz\", \"Tag type\": \"id3v2.4 (82.5%)\", \"Tool\": \"LAME3.97 (27.6%); LAME3.99r (13.7%); LAME3.90 (7.4%); LAME3.98r (5.5%); LAME3.99 (5.4%); Lavf (4.7%); LAME3.97b (3.8%); LAME3.98b (3.5%); LAME3.96r (1.2%); LAME3.100 (1.1%)\" }, \"Location\": { \"File names\": \"Bat For Lashes - Clouds.mp3, Bat For Lashes - Daphne.m4a, Bat For Lashes - Lumen.m4a, Bat For Lashes - Plan The Escape.mp3 ...\", \"Folder name\": \"E:\\\\Music\\\\Tracks\", \"Last modified\": \"2021-12-01 00:00:00\", \"Total size\": \"601 MB (631 125 587 bytes)\" } }","title":"GetOtherInfo()"},{"location":"docs/interfaces/IMetadbHandleList/#getqueryitemsquery","text":"Arguments query string Returns an IMetadbHandleList instance. Note Errors will be thrown on invalid queries so if you're not using predefined safe queries and are accepting user input, you should use this inside a try/catch statement. An empty handle list will be returned if the query is valid but there are no results.","title":"GetQueryItems(query)"},{"location":"docs/interfaces/IMetadbHandleList/#insertitemindex-handle","text":"Arguments index number handle IMetadbHandle No return value. Example var handle = ... handle_list . InsertItem ( 0 , handle );","title":"InsertItem(index, handle)"},{"location":"docs/interfaces/IMetadbHandleList/#insertitemsindex-handle_list","text":"Arguments index number handle_list IMetadbHandleList No return value.","title":"InsertItems(index, handle_list)"},{"location":"docs/interfaces/IMetadbHandleList/#makedifferencehandle_list","text":"Arguments handle_list IMetadbHandleList No return value. Example var one = plman . GetPlaylistItems ( 0 ); var two = plman . GetPlaylistItems ( 1 ); one . MakeDifference ( two ); one now only contains handles that were unique to one . Anything that also existed in two will have been removed. The order of items in one will be randomised. two should be untouched.","title":"MakeDifference(handle_list)"},{"location":"docs/interfaces/IMetadbHandleList/#makeintersectionhandle_list","text":"Arguments handle_list IMetadbHandleList No return value. Example var one = plman . GetPlaylistItems ( 0 ); var two = plman . GetPlaylistItems ( 1 ); one . MakeIntersection ( two ); one now only contains handles that were in BOTH one AND two . The order of items in one will be randomised. two should be untouched.","title":"MakeIntersection(handle_list)"},{"location":"docs/interfaces/IMetadbHandleList/#optimisefilelayoutminimise","text":"Arguments minimise boolean Default false . No return value. With minimise set to false , provides the functionality of Utilities>Optimize file layout or if minimise is true then Utilities>Optimize file layout + minimize file size . Unlike the context menu versions, there is no prompt.","title":"OptimiseFileLayout([minimise])"},{"location":"docs/interfaces/IMetadbHandleList/#randomise","text":"No return value.","title":"Randomise()"},{"location":"docs/interfaces/IMetadbHandleList/#removeall","text":"No return value.","title":"RemoveAll()"},{"location":"docs/interfaces/IMetadbHandleList/#removeattachedimageart_id","text":"Arguments art_id AlbumArtId Default 0 . No return value.","title":"RemoveAttachedImage([art_id])"},{"location":"docs/interfaces/IMetadbHandleList/#removeattachedimages","text":"No return value.","title":"RemoveAttachedImages()"},{"location":"docs/interfaces/IMetadbHandleList/#removebyidxidx","text":"Arguments idx number No return value. Example handle_list . RemoveByIdx ( 0 );","title":"RemoveByIdx(idx)"},{"location":"docs/interfaces/IMetadbHandleList/#removeduplicates","text":"No return value.","title":"RemoveDuplicates()"},{"location":"docs/interfaces/IMetadbHandleList/#removeduplicatesbyformatpattern","text":"Arguments pattern string No return value. Example // This ensures the handle list will // contain no more than 1 track by the same artist. var handle_list = fb . GetLibraryItems (); handle_list . Randomise (); handle_list . RemoveDuplicatesByFormat ( \"%artist%\" );","title":"RemoveDuplicatesByFormat(pattern)"},{"location":"docs/interfaces/IMetadbHandleList/#removefromidxfrom-num","text":"Arguments from number num number No return value.","title":"RemoveFromIdx(from, num)"},{"location":"docs/interfaces/IMetadbHandleList/#replaceitemindex-handle","text":"Arguments index number handle IMetadbHandle No return value.","title":"ReplaceItem(index, handle)"},{"location":"docs/interfaces/IMetadbHandleList/#runcontextcommandcommand","text":"Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise.","title":"RunContextCommand(command)"},{"location":"docs/interfaces/IMetadbHandleList/#saveaspath","text":"Arguments path string No return value. Saves using native foobar2000 .fpl format so you should use that as the file extension. The parent folder must already exist. Example plman . GetPlaylistItems ( plman . ActivePlaylist ). SaveAs ( \"z:\\\\blah.fpl\" );","title":"SaveAs(path)"},{"location":"docs/interfaces/IMetadbHandleList/#sortbyformatpattern-direction","text":"Arguments pattern string direction number Ascending while > 0 . No return value. Example var handle_list = fb . GetLibraryItems (); var pattern = \"%album artist%|%date%|%album%|%discnumber%|%tracknumber%\" ; handle_list . SortByFormat ( pattern , 1 );","title":"SortByFormat(pattern, direction)"},{"location":"docs/interfaces/IMetadbHandleList/#sortbypath","text":"No return value.","title":"SortByPath()"},{"location":"docs/interfaces/IMetadbHandleList/#sortbyrelativepath","text":"No return value. Note This method should only be used on a handle list containing items that are monitored as part of the Media Library .","title":"SortByRelativePath()"},{"location":"docs/interfaces/IMetadbHandleList/#updatefileinfofromjsonstr","text":"Arguments str string This method takes either an array or an object as the argument and this must be ran through the JSON.stringify function before using. Example Array Object This example uses an array and its length must match the handle list count. A fail safe way of doing this is looping through the handle list and filling the array as you go. // assume we've selected one album var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); // an empty array var arr = []; for ( var i = 0 ; i < handle_list . Count ; i ++ ) { // Each element of the array must be an object // of key names/values, indicated by the curly braces. arr . push ({ \"tracknumber\" : i + 1 , \"totaltracks\" : handle_list . Count , \"album\" : \"Greatest Hits\" , // a simple string for a single value \"genre\" : [ \"Rock\" , \"Hard Rock\" ] // use an array for multi-value tags }); } var str = JSON . stringify ( arr ); handle_list . UpdateFileInfoFromJSON ( str ); handle_list . Dispose (); If you want to write the exact same tags to each and every track in the handle list , you can use an object instead. var handle_list = plman . GetPlaylistSelectedItems ( plman . ActivePlaylist ); var obj = { \"album\" : \"Greatest Hits\" , \"genre\" : [ \"Rock\" , \"Hard Rock\" ] }; var str = JSON . stringify ( obj ); handle_list . UpdateFileInfoFromJSON ( str ); handle_list . Dispose (); As before, you can use blank values to clear any existing tags. Example var obj = { \"album\" : \"\" }; Do not try using any method of using empty objects or blank tag names to avoid tagging any files. You should filter your handle list first to make sure it only contains files you really want to update.","title":"UpdateFileInfoFromJSON(str)"},{"location":"docs/interfaces/IPlayingItemLocation/","text":"Properties IsValid boolean read PlaylistIndex number read PlaylistItemIndex number read IsValid will always be false if foobar2000 isn't playing. It can also be false if the playing track has since been removed from the playlist it was on when playback was started. Example var playing_item_location = plman . GetPlayingItemLocation (); if ( playing_item_location . IsValid ) { console . log ( playing_item_location . PlaylistIndex ); console . log ( playing_item_location . PlaylistItemIndex ); }","title":"IPlayingItemLocation"},{"location":"docs/interfaces/IProfiler/","text":"Properties Time number milliseconds Methods Reset() # No return value. Print() # No return value. Example var test = utils . CreateProfiler ( \"test\" ); // do something time consuming console . log ( test . Time ); // 789 test . Print (); // Profiler (test): 789 ms","title":"IProfiler"},{"location":"docs/interfaces/IProfiler/#reset","text":"No return value.","title":"Reset()"},{"location":"docs/interfaces/IProfiler/#print","text":"No return value. Example var test = utils . CreateProfiler ( \"test\" ); // do something time consuming console . log ( test . Time ); // 789 test . Print (); // Profiler (test): 789 ms","title":"Print()"},{"location":"docs/interfaces/ISelectionHolder/","text":"Methods SetSelection(handle_list[, type]) # Arguments handle_list IMetadbHandleList type SelectionType Default 0 . No return value. SetPlaylistSelectionTracking() # No return value. Sets selected items to playlist selection and enables tracking. When the playlist selection changes, the stored selection is automatically updated. Tracking ends when a set method is called on any SelectionHolder or when the last reference to this SelectionHolder is released. SetPlaylistTracking() # No return value. Sets selected items to playlist contents and enables tracking. When the playlist selection changes, the stored selection is automatically updated. Tracking ends when a set method is called on any SelectionHolder or when the last reference to this SelectionHolder is released. The above methods are typically used to update the selection used by the Default UI artwork panel or any other panel that makes use of the Preferences under File>Preferences>Display>Selection viewers . Example Playlist Viewer Library Viewer var selection_holder = fb . AcquireSelectionHolder (); selection_holder . SetPlaylistSelectionTracking (); function on_focus ( is_focused ) { if ( is_focused ) { // Updates the selection when panel regains focus selection_holder . SetPlaylistSelectionTracking (); } } var selection_holder = fb . AcquireSelectionHolder (); var handle_list = null ; function on_mouse_lbtn_up ( x , y ) { // Presumably going to select something here... handle_list = ...; selection_holder . SetSelection ( handle_list , 6 ); }","title":"ISelectionHolder"},{"location":"docs/interfaces/ISelectionHolder/#setselectionhandle_list-type","text":"Arguments handle_list IMetadbHandleList type SelectionType Default 0 . No return value.","title":"SetSelection(handle_list[, type])"},{"location":"docs/interfaces/ISelectionHolder/#setplaylistselectiontracking","text":"No return value. Sets selected items to playlist selection and enables tracking. When the playlist selection changes, the stored selection is automatically updated. Tracking ends when a set method is called on any SelectionHolder or when the last reference to this SelectionHolder is released.","title":"SetPlaylistSelectionTracking()"},{"location":"docs/interfaces/ISelectionHolder/#setplaylisttracking","text":"No return value. Sets selected items to playlist contents and enables tracking. When the playlist selection changes, the stored selection is automatically updated. Tracking ends when a set method is called on any SelectionHolder or when the last reference to this SelectionHolder is released. The above methods are typically used to update the selection used by the Default UI artwork panel or any other panel that makes use of the Preferences under File>Preferences>Display>Selection viewers . Example Playlist Viewer Library Viewer var selection_holder = fb . AcquireSelectionHolder (); selection_holder . SetPlaylistSelectionTracking (); function on_focus ( is_focused ) { if ( is_focused ) { // Updates the selection when panel regains focus selection_holder . SetPlaylistSelectionTracking (); } } var selection_holder = fb . AcquireSelectionHolder (); var handle_list = null ; function on_mouse_lbtn_up ( x , y ) { // Presumably going to select something here... handle_list = ...; selection_holder . SetSelection ( handle_list , 6 ); }","title":"SetPlaylistTracking()"},{"location":"docs/interfaces/ITextLayout/","text":"See utils.CreateTextLayout for an example. Methods CalcTextHeight(max_width) # Arguments max_width number Returns a number . Dispose() # No return value.","title":"ITextLayout"},{"location":"docs/interfaces/ITextLayout/#calctextheightmax_width","text":"Arguments max_width number Returns a number .","title":"CalcTextHeight(max_width)"},{"location":"docs/interfaces/ITextLayout/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/IThemeManager/","text":"DrawThemeBackground(gr, x, y, w, h) # Arguments gr IJSGraphics x number y number w number h number No return value. GetThemeColour(propid) # Arguments propid number https://docs.microsoft.com/en-gb/windows/win32/controls/property-typedefs#property-ids Returns a number . IsThemePartDefined(partid) # Arguments partid number Returns a boolean value. SetPartAndStateID(partid[, stateid]) # Arguments partid number stateid number Default 0 . https://docs.microsoft.com/en-gb/windows/win32/controls/parts-and-states No return value.","title":"IThemeManager"},{"location":"docs/interfaces/IThemeManager/#drawthemebackgroundgr-x-y-w-h","text":"Arguments gr IJSGraphics x number y number w number h number No return value.","title":"DrawThemeBackground(gr, x, y, w, h)"},{"location":"docs/interfaces/IThemeManager/#getthemecolourpropid","text":"Arguments propid number https://docs.microsoft.com/en-gb/windows/win32/controls/property-typedefs#property-ids Returns a number .","title":"GetThemeColour(propid)"},{"location":"docs/interfaces/IThemeManager/#isthemepartdefinedpartid","text":"Arguments partid number Returns a boolean value.","title":"IsThemePartDefined(partid)"},{"location":"docs/interfaces/IThemeManager/#setpartandstateidpartid-stateid","text":"Arguments partid number stateid number Default 0 . https://docs.microsoft.com/en-gb/windows/win32/controls/parts-and-states No return value.","title":"SetPartAndStateID(partid[, stateid])"},{"location":"docs/interfaces/ITitleFormat/","text":"This will be used in the examples below: var tfo = fb . TitleFormat ( \"%artist%\" ); Methods Dispose() # No return value. Eval() # Returns a string . It will be empty if foobar2000 is not playing. EvalActivePlaylistItem(playlistItemIndex) # Arguments playlistItemIndex number Returns a string . Use if you want access to playlist specific fields such as %list_index% , %list_total% , %isplaying% etc. Full details here . EvalWithMetadb(handle) # Arguments handle IMetadbHandle Returns a string . Example var artist = tfo . EvalWithMetadb ( fb . GetFocusItem ()); EvalWithMetadbs(handle_list) # Arguments handle_list IMetadbHandleList Returns a VBArray so you need to use .toArray() on the result. Example var handle_list = fb . GetLibraryItems (); var artists = tfo . EvalWithMetadbs ( handle_list ). toArray (); console . log ( handle_list . Count === artists . length ); // True","title":"ITitleFormat"},{"location":"docs/interfaces/ITitleFormat/#dispose","text":"No return value.","title":"Dispose()"},{"location":"docs/interfaces/ITitleFormat/#eval","text":"Returns a string . It will be empty if foobar2000 is not playing.","title":"Eval()"},{"location":"docs/interfaces/ITitleFormat/#evalactiveplaylistitemplaylistitemindex","text":"Arguments playlistItemIndex number Returns a string . Use if you want access to playlist specific fields such as %list_index% , %list_total% , %isplaying% etc. Full details here .","title":"EvalActivePlaylistItem(playlistItemIndex)"},{"location":"docs/interfaces/ITitleFormat/#evalwithmetadbhandle","text":"Arguments handle IMetadbHandle Returns a string . Example var artist = tfo . EvalWithMetadb ( fb . GetFocusItem ());","title":"EvalWithMetadb(handle)"},{"location":"docs/interfaces/ITitleFormat/#evalwithmetadbshandle_list","text":"Arguments handle_list IMetadbHandleList Returns a VBArray so you need to use .toArray() on the result. Example var handle_list = fb . GetLibraryItems (); var artists = tfo . EvalWithMetadbs ( handle_list ). toArray (); console . log ( handle_list . Count === artists . length ); // True","title":"EvalWithMetadbs(handle_list)"},{"location":"docs/interfaces/ITooltip/","text":"This will be used in the examples below: var tooltip = window . CreateTooltip (); Properties Text string read, write TrackActivate boolean write Example tooltip . Text = \"Whoop\" ; Methods Activate() # No return value. Note Only call this when text has changed otherwise it will flicker. Example var text = \"...\" ; if ( tooltip . Text != text ) { tooltip . Text = text ; tooltip . Activate (); } Deactivate() # No return value. SetMaxWidth(width) # Arguments width number No return value. Use if you want multi-line tooltips. Example tooltip . SetMaxWidth ( 800 ); // Use \\n as a new line separator. tooltip . Text = \"Line1\\nLine2\" ; TrackPosition(x, y) # Arguments x number y number No return value. Note Check x, y positions have changed from last time otherwise it will flicker. If making the tooltip text relative to the mouse position, you must add offsets so there is no danger of it being behind the mouse pointer. Example var g_tooltip = window . CreateTooltip (); var g_trackingMouse = false ; var g_oldX , g_oldY ; function on_mouse_move ( x , y ) { if ( ! g_trackingMouse ) { g_tooltip . Activate (); g_tooltip . TrackActivate = true ; g_trackingMouse = true ; } // Make sure the position is changed if ( g_oldX != x || g_oldY != y ) { g_tooltip . Text = \"x:\" + x + \", y:\" + y ; // add offsets here g_tooltip . TrackPosition ( x + 20 , y + 20 ); g_oldX = x ; g_oldY = y ; } } function on_mouse_leave () { g_trackingMouse = false ; g_tooltip . TrackActivate = false ; }","title":"ITooltip"},{"location":"docs/interfaces/ITooltip/#activate","text":"No return value. Note Only call this when text has changed otherwise it will flicker. Example var text = \"...\" ; if ( tooltip . Text != text ) { tooltip . Text = text ; tooltip . Activate (); }","title":"Activate()"},{"location":"docs/interfaces/ITooltip/#deactivate","text":"No return value.","title":"Deactivate()"},{"location":"docs/interfaces/ITooltip/#setmaxwidthwidth","text":"Arguments width number No return value. Use if you want multi-line tooltips. Example tooltip . SetMaxWidth ( 800 ); // Use \\n as a new line separator. tooltip . Text = \"Line1\\nLine2\" ;","title":"SetMaxWidth(width)"},{"location":"docs/interfaces/ITooltip/#trackpositionx-y","text":"Arguments x number y number No return value. Note Check x, y positions have changed from last time otherwise it will flicker. If making the tooltip text relative to the mouse position, you must add offsets so there is no danger of it being behind the mouse pointer. Example var g_tooltip = window . CreateTooltip (); var g_trackingMouse = false ; var g_oldX , g_oldY ; function on_mouse_move ( x , y ) { if ( ! g_trackingMouse ) { g_tooltip . Activate (); g_tooltip . TrackActivate = true ; g_trackingMouse = true ; } // Make sure the position is changed if ( g_oldX != x || g_oldY != y ) { g_tooltip . Text = \"x:\" + x + \", y:\" + y ; // add offsets here g_tooltip . TrackPosition ( x + 20 , y + 20 ); g_oldX = x ; g_oldY = y ; } } function on_mouse_leave () { g_trackingMouse = false ; g_tooltip . TrackActivate = false ; }","title":"TrackPosition(x, y)"},{"location":"docs/namespaces/console/","text":"Methods console.log(message) # Arguments message string , number , boolean , array , object No return value. Example console . log ( \"blah\" ); // blah console . log ( 2 < 3 ); // True console . log ( 2 > 3 ); // False console . log ( 1 , 2 , 3 ); // 1 2 3 console . log ([ 1 , 2 , 3 ]); // 1,2,3 var obj = { a : 1 }; console . log ( obj ); // [object Object] console . log ( JSON . stringify ( obj )); // {\"a\":1} // multiple args are split by single spaces console . log ( \"put\" , \"a\" , \"donk\" , \"on\" , \"it\" ); // put a donk on it console . log ( \"a\" , 2 , 3.5 ); // a 2 3.5","title":"console"},{"location":"docs/namespaces/console/#consolelogmessage","text":"Arguments message string , number , boolean , array , object No return value. Example console . log ( \"blah\" ); // blah console . log ( 2 < 3 ); // True console . log ( 2 > 3 ); // False console . log ( 1 , 2 , 3 ); // 1 2 3 console . log ([ 1 , 2 , 3 ]); // 1,2,3 var obj = { a : 1 }; console . log ( obj ); // [object Object] console . log ( JSON . stringify ( obj )); // {\"a\":1} // multiple args are split by single spaces console . log ( \"put\" , \"a\" , \"donk\" , \"on\" , \"it\" ); // put a donk on it console . log ( \"a\" , 2 , 3.5 ); // a 2 3.5","title":"console.log(message)"},{"location":"docs/namespaces/fb/","text":"Properties fb.AlwaysOnTop boolean read, write fb.ComponentPath string read fb.CursorFollowPlayback boolean read, write fb.FoobarPath string read fb.IsPaused boolean read fb.IsPlaying boolean read fb.PlaybackFollowCursor boolean read, write fb.PlaybackLength number read fb.PlaybackTime number read, write fb.ProfilePath string read fb.ReplaygainMode ReplaygainMode read, write fb.StopAfterCurrent boolean read, write fb.Volume number read, write Example fb . AlwaysOnTop = ! fb . AlwaysOnTop ; // toggles the current value console . log ( fb . FoobarPath ); // Z:\\foobar2000\\ fb . PlaybackTime = 60 ; // jump to the one minute mark Methods Shortcuts to main menu commands # fb.AddDirectory() # fb.AddFiles() # fb.Exit() # fb.LoadPlaylist() # fb.Next() # fb.Pause() # fb.Play() # fb.PlayOrPause() # fb.Prev() # fb.Random() # fb.SavePlaylist() # fb.ShowConsole() # fb.ShowPreferences() # fb.Stop() # fb.VolumeDown() # fb.VolumeMute() # fb.VolumeUp() # The above methods have no return value. fb.AcquireSelectionHolder() # Returns an ISelectionHolder instance. Check the link for an example. fb.AddLocationsAsync(window_id, paths) # Arguments window_id window.ID paths array An array of strings which could be files, urls, playlists. Returns a unique task_id . Similar to plman.AddLocations except rather than specifiying a target playlist, you get a handle list generated from the supplied paths/urls which are sent to a new on_locations_added callback. Example var files = [ \"z:\\\\1.mp3\" , \"z:\\\\2.flac\" ]; function on_mouse_lbtn_dblclk () { var task_id = fb . AddLocationsAsync ( window . ID , files ); console . log ( \"got task_id\" , task_id ); } function on_locations_added ( task_id , handle_list ) { console . log ( \"callback task_id\" , task_id ); console . log ( handle_list . Count ); } fb.CheckClipboardContents() # Returns a boolean value. Checks clipboard contents are handles or a file selection from Windows Explorer . Use in conjunction with fb.GetClipboardContents . fb.ClearPlaylist() # No return value. Clears active playlist. If you wish to clear a specific playlist, use plman.ClearPlaylist . fb.CreateContextMenuManager() # Returns an IContextMenuManager instance. fb.CreateHandleList([handle]) # Arguments handle IMetadbHandle , optional Returns an IMetadbHandleList instance. Example var handle = fb . GetFocusItem (); var handle_list = fb . CreateHandleList ( handle ); var image_path = ... handle_list . AttachImage ( image_path , 0 ); handle_list . Dispose (); fb.CreateMainMenuManager(root_name) # Arguments root_name string Must be one of File , Edit , View , Playback , Library , Help . Returns an IMainMenuManager instance. fb.GetClipboardContents() # Returns an IMetadbHandleList instance. Clipboard contents can be handles copied to the clipboard in other components, a file selection from Explorer, etc. Example var MF_STRING = 0x00000000 ; var MF_GRAYED = 0x00000001 ; function on_mouse_rbtn_up ( x , y ) { var ap = plman . ActivePlaylist ; var menu = window . CreatePopupMenu (); // You may consider using plman.GetPlaylistLockFilterMask // for more advanced checks to see if the playlist will accept the files being added. menu . AppendMenuItem ( fb . CheckClipboardContents () ? MF_STRING : MF_GRAYED , 1 , \"Paste\" ); var idx = menu . TrackPopupMenu ( x , y ); if ( idx == 1 ) { var handle_list = fb . GetClipboardContents (); plman . InsertPlaylistItems ( ap , plman . GetPlaylistItemCount ( ap ), handle_list ); handle_list . Dispose (); } menu . Dispose (); return true ; } fb.GetDSPPresets() # Returns a JSON array in string form so you need to use JSON.parse on the result. Example var str = fb . GetDSPPresets (); console . log ( str ); Example output [ { \"active\": true, \"name\": \"two\" }, { \"active\": false, \"name\": \"three\" } ] var arr = JSON . parse ( str ); console . log ( arr . length ); // number of presets for ( var i = 0 ; i < arr . length ; i ++ ) { if ( arr [ i ]. active ) { // this is the active preset, do something with the name?? } } fb.GetFocusItem() # Returns an IMetadbHandle instance. Handle of the currently selected active playlist item or null on failure. fb.GetLibraryItems() # Returns an IMetadbHandleList instance. Returns all handles monitored as part of the Media Library . fb.GetNowPlaying() # Returns an IMetadbHandle instance. Now playing item or null if foobar2000 isn't playing. fb.GetOutputDevices() # Returns a JSON array in string form so you need to use JSON.parse on the result. Example var str = fb . GetOutputDevices (); console . log ( str ); Example output [ { \"active\": false, \"device_id\": \"{5243F9AD-C84F-4723-8194-0788FC021BCC}\", \"name\": \"Null Output\", \"output_id\": \"{EEEB07DE-C2C8-44C2-985C-C85856D96DA1}\" }, { \"active\": true, \"device_id\": \"{00000000-0000-0000-0000-000000000000}\", \"name\": \"Primary Sound Driver\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{1C4EC038-97DB-48E7-9C9A-05FDED46847B}\", \"name\": \"Speakers (Sound Blaster Z)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{41B86272-3D6C-4A5A-8907-4FE7EBE39E7E}\", \"name\": \"SPDIF-Out (Sound Blaster Z)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{9CDC0FAE-2870-4AFA-8287-E86099D69076}\", \"name\": \"3 - BenQ BL3200 (AMD High Definition Audio Device)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" } ] var arr = JSON . parse ( str ); console . log ( arr . length ); // number of devices As you can see, only one of the items in the array has active set to true so that is the device you'd want to display the name of or mark as selected in a menu. To change device you can use fb.RunMainMenuCommand with the device name or use fb.SetOutputDevice with the device_id / output_id . Example RunMainMenuCommand SetOutputDevice var str = fb . GetOutputDevices (); var arr = JSON . parse ( str ); // Assuming same list from above, switch output to the last device. fb . RunMainMenuCommand ( \"Playback/Device/\" + arr [ 4 ]. name ); var str = fb . GetOutputDevices (); var arr = JSON . parse ( str ); // Assuming same list from above, switch output to the last device. fb . SetOutputDevice ( arr [ 4 ]. output_id , arr [ 4 ]. device_id ); fb.GetSelection([flags]) # Arguments flags number Default 0 , 1 no now playing Returns an IMetadbHandleList instance. fb.GetSelectionType() # Returns a SelectionType fb.IsLibraryEnabled() # Returns a boolean value. fb.RunContextCommand(command) # Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise. Note This method is for the currently playing file only. See also: IMetadbHandleList RunContextCommand . fb.RunMainMenuCommand(command) # Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise. fb.SetDSPPreset(idx) # Arguments idx number No return value. See fb.GetDSPPresets . fb.SetOutputDevice(output_id, device_id) # Arguments output_id string device_id string No return value. See fb.GetOutputDevices . fb.ShowLibrarySearchUI(query) # Arguments query string No return value. Opens the Library>Search window populated with the query you set. fb.TitleFormat(pattern) # Arguments pattern string Returns an ITitleFormat instance.","title":"fb"},{"location":"docs/namespaces/fb/#shortcuts-to-main-menu-commands","text":"","title":"Shortcuts to main menu commands"},{"location":"docs/namespaces/fb/#fbadddirectory","text":"","title":"fb.AddDirectory()"},{"location":"docs/namespaces/fb/#fbaddfiles","text":"","title":"fb.AddFiles()"},{"location":"docs/namespaces/fb/#fbexit","text":"","title":"fb.Exit()"},{"location":"docs/namespaces/fb/#fbloadplaylist","text":"","title":"fb.LoadPlaylist()"},{"location":"docs/namespaces/fb/#fbnext","text":"","title":"fb.Next()"},{"location":"docs/namespaces/fb/#fbpause","text":"","title":"fb.Pause()"},{"location":"docs/namespaces/fb/#fbplay","text":"","title":"fb.Play()"},{"location":"docs/namespaces/fb/#fbplayorpause","text":"","title":"fb.PlayOrPause()"},{"location":"docs/namespaces/fb/#fbprev","text":"","title":"fb.Prev()"},{"location":"docs/namespaces/fb/#fbrandom","text":"","title":"fb.Random()"},{"location":"docs/namespaces/fb/#fbsaveplaylist","text":"","title":"fb.SavePlaylist()"},{"location":"docs/namespaces/fb/#fbshowconsole","text":"","title":"fb.ShowConsole()"},{"location":"docs/namespaces/fb/#fbshowpreferences","text":"","title":"fb.ShowPreferences()"},{"location":"docs/namespaces/fb/#fbstop","text":"","title":"fb.Stop()"},{"location":"docs/namespaces/fb/#fbvolumedown","text":"","title":"fb.VolumeDown()"},{"location":"docs/namespaces/fb/#fbvolumemute","text":"","title":"fb.VolumeMute()"},{"location":"docs/namespaces/fb/#fbvolumeup","text":"The above methods have no return value.","title":"fb.VolumeUp()"},{"location":"docs/namespaces/fb/#fbacquireselectionholder","text":"Returns an ISelectionHolder instance. Check the link for an example.","title":"fb.AcquireSelectionHolder()"},{"location":"docs/namespaces/fb/#fbaddlocationsasyncwindow_id-paths","text":"Arguments window_id window.ID paths array An array of strings which could be files, urls, playlists. Returns a unique task_id . Similar to plman.AddLocations except rather than specifiying a target playlist, you get a handle list generated from the supplied paths/urls which are sent to a new on_locations_added callback. Example var files = [ \"z:\\\\1.mp3\" , \"z:\\\\2.flac\" ]; function on_mouse_lbtn_dblclk () { var task_id = fb . AddLocationsAsync ( window . ID , files ); console . log ( \"got task_id\" , task_id ); } function on_locations_added ( task_id , handle_list ) { console . log ( \"callback task_id\" , task_id ); console . log ( handle_list . Count ); }","title":"fb.AddLocationsAsync(window_id, paths)"},{"location":"docs/namespaces/fb/#fbcheckclipboardcontents","text":"Returns a boolean value. Checks clipboard contents are handles or a file selection from Windows Explorer . Use in conjunction with fb.GetClipboardContents .","title":"fb.CheckClipboardContents()"},{"location":"docs/namespaces/fb/#fbclearplaylist","text":"No return value. Clears active playlist. If you wish to clear a specific playlist, use plman.ClearPlaylist .","title":"fb.ClearPlaylist()"},{"location":"docs/namespaces/fb/#fbcreatecontextmenumanager","text":"Returns an IContextMenuManager instance.","title":"fb.CreateContextMenuManager()"},{"location":"docs/namespaces/fb/#fbcreatehandlelisthandle","text":"Arguments handle IMetadbHandle , optional Returns an IMetadbHandleList instance. Example var handle = fb . GetFocusItem (); var handle_list = fb . CreateHandleList ( handle ); var image_path = ... handle_list . AttachImage ( image_path , 0 ); handle_list . Dispose ();","title":"fb.CreateHandleList([handle])"},{"location":"docs/namespaces/fb/#fbcreatemainmenumanagerroot_name","text":"Arguments root_name string Must be one of File , Edit , View , Playback , Library , Help . Returns an IMainMenuManager instance.","title":"fb.CreateMainMenuManager(root_name)"},{"location":"docs/namespaces/fb/#fbgetclipboardcontents","text":"Returns an IMetadbHandleList instance. Clipboard contents can be handles copied to the clipboard in other components, a file selection from Explorer, etc. Example var MF_STRING = 0x00000000 ; var MF_GRAYED = 0x00000001 ; function on_mouse_rbtn_up ( x , y ) { var ap = plman . ActivePlaylist ; var menu = window . CreatePopupMenu (); // You may consider using plman.GetPlaylistLockFilterMask // for more advanced checks to see if the playlist will accept the files being added. menu . AppendMenuItem ( fb . CheckClipboardContents () ? MF_STRING : MF_GRAYED , 1 , \"Paste\" ); var idx = menu . TrackPopupMenu ( x , y ); if ( idx == 1 ) { var handle_list = fb . GetClipboardContents (); plman . InsertPlaylistItems ( ap , plman . GetPlaylistItemCount ( ap ), handle_list ); handle_list . Dispose (); } menu . Dispose (); return true ; }","title":"fb.GetClipboardContents()"},{"location":"docs/namespaces/fb/#fbgetdsppresets","text":"Returns a JSON array in string form so you need to use JSON.parse on the result. Example var str = fb . GetDSPPresets (); console . log ( str ); Example output [ { \"active\": true, \"name\": \"two\" }, { \"active\": false, \"name\": \"three\" } ] var arr = JSON . parse ( str ); console . log ( arr . length ); // number of presets for ( var i = 0 ; i < arr . length ; i ++ ) { if ( arr [ i ]. active ) { // this is the active preset, do something with the name?? } }","title":"fb.GetDSPPresets()"},{"location":"docs/namespaces/fb/#fbgetfocusitem","text":"Returns an IMetadbHandle instance. Handle of the currently selected active playlist item or null on failure.","title":"fb.GetFocusItem()"},{"location":"docs/namespaces/fb/#fbgetlibraryitems","text":"Returns an IMetadbHandleList instance. Returns all handles monitored as part of the Media Library .","title":"fb.GetLibraryItems()"},{"location":"docs/namespaces/fb/#fbgetnowplaying","text":"Returns an IMetadbHandle instance. Now playing item or null if foobar2000 isn't playing.","title":"fb.GetNowPlaying()"},{"location":"docs/namespaces/fb/#fbgetoutputdevices","text":"Returns a JSON array in string form so you need to use JSON.parse on the result. Example var str = fb . GetOutputDevices (); console . log ( str ); Example output [ { \"active\": false, \"device_id\": \"{5243F9AD-C84F-4723-8194-0788FC021BCC}\", \"name\": \"Null Output\", \"output_id\": \"{EEEB07DE-C2C8-44C2-985C-C85856D96DA1}\" }, { \"active\": true, \"device_id\": \"{00000000-0000-0000-0000-000000000000}\", \"name\": \"Primary Sound Driver\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{1C4EC038-97DB-48E7-9C9A-05FDED46847B}\", \"name\": \"Speakers (Sound Blaster Z)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{41B86272-3D6C-4A5A-8907-4FE7EBE39E7E}\", \"name\": \"SPDIF-Out (Sound Blaster Z)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" }, { \"active\": false, \"device_id\": \"{9CDC0FAE-2870-4AFA-8287-E86099D69076}\", \"name\": \"3 - BenQ BL3200 (AMD High Definition Audio Device)\", \"output_id\": \"{D41D2423-FBB0-4635-B233-7054F79814AB}\" } ] var arr = JSON . parse ( str ); console . log ( arr . length ); // number of devices As you can see, only one of the items in the array has active set to true so that is the device you'd want to display the name of or mark as selected in a menu. To change device you can use fb.RunMainMenuCommand with the device name or use fb.SetOutputDevice with the device_id / output_id . Example RunMainMenuCommand SetOutputDevice var str = fb . GetOutputDevices (); var arr = JSON . parse ( str ); // Assuming same list from above, switch output to the last device. fb . RunMainMenuCommand ( \"Playback/Device/\" + arr [ 4 ]. name ); var str = fb . GetOutputDevices (); var arr = JSON . parse ( str ); // Assuming same list from above, switch output to the last device. fb . SetOutputDevice ( arr [ 4 ]. output_id , arr [ 4 ]. device_id );","title":"fb.GetOutputDevices()"},{"location":"docs/namespaces/fb/#fbgetselectionflags","text":"Arguments flags number Default 0 , 1 no now playing Returns an IMetadbHandleList instance.","title":"fb.GetSelection([flags])"},{"location":"docs/namespaces/fb/#fbgetselectiontype","text":"Returns a SelectionType","title":"fb.GetSelectionType()"},{"location":"docs/namespaces/fb/#fbislibraryenabled","text":"Returns a boolean value.","title":"fb.IsLibraryEnabled()"},{"location":"docs/namespaces/fb/#fbruncontextcommandcommand","text":"Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise. Note This method is for the currently playing file only. See also: IMetadbHandleList RunContextCommand .","title":"fb.RunContextCommand(command)"},{"location":"docs/namespaces/fb/#fbrunmainmenucommandcommand","text":"Arguments command string The full path to the command must be supplied. Case is not important. Returns true if a matching command was found, false otherwise.","title":"fb.RunMainMenuCommand(command)"},{"location":"docs/namespaces/fb/#fbsetdsppresetidx","text":"Arguments idx number No return value. See fb.GetDSPPresets .","title":"fb.SetDSPPreset(idx)"},{"location":"docs/namespaces/fb/#fbsetoutputdeviceoutput_id-device_id","text":"Arguments output_id string device_id string No return value. See fb.GetOutputDevices .","title":"fb.SetOutputDevice(output_id, device_id)"},{"location":"docs/namespaces/fb/#fbshowlibrarysearchuiquery","text":"Arguments query string No return value. Opens the Library>Search window populated with the query you set.","title":"fb.ShowLibrarySearchUI(query)"},{"location":"docs/namespaces/fb/#fbtitleformatpattern","text":"Arguments pattern string Returns an ITitleFormat instance.","title":"fb.TitleFormat(pattern)"},{"location":"docs/namespaces/plman/","text":"Properties plman.ActivePlaylist number read, write Could be -1 if reading value and no playlist is active. plman.PlaybackOrder PlaybackOrder read, write plman.PlayingPlaylist number read Could be -1 if not playing or playing item doesn't belong to any playlist. plman.PlaylistCount number read plman.RecyclerCount number read Methods Note Most methods require that the playlistIndex argument is valid. That means not -1 and less than plman.PlaylistCount . plman.AddLocations(playlistIndex, paths[, select]) # Arguments playlistIndex number Must be valid. Also, it must not be an autoplaylist or have a lock in place preventing the addition of new files. paths array Can be file paths/urls/playlists. select boolean Default false . If true , the active playlist will be set to the playlistIndex , the items will be selected and focus will be set to the first new item. No return value. Note This operation is asynchronous and may take some time to complete if it's a large array. Example var arr = [ \"e:\\\\1.mp3\" ]; plman . AddLocations ( plman . ActivePlaylist , arr ); plman.AddPlaylistLock(playlistIndex, flags) # Arguments playlistIndex number Must be valid. flags PlaylistLockFilterMask Returns true on success, false if playlist already locked. See plman.ShowPlaylistLockUI first as that provides a dialog and is much more user friendly! Note Before you can add a playlist lock, you must check there is no lock present already. If another component owns the lock, you have to use that component to remove it. If the lock is owned by JScript Panel 3 then you must remove it first. This is because locks cannot be edited. You have to remove it and then add a new one with a new mask value. Example function add_playlist_lock ( playlistIndex , flags ) { // check if playlistIndex is valid if ( playlistIndex >= 0 && playlistIndex < plman . PlaylistCount ) { if ( plman . IsPlaylistLocked ( playlistIndex )) { if ( plman . GetPlaylistLockName ( playlistIndex ) == 'JScript Panel 3' ) { // We own this lock so we can remove it. plman . RemovePlaylistLock ( playlistIndex ); } else { // Locked but not ours. Nothing we can do. return false ; } } return plman . AddPlaylistLock ( playlistIndex , flags ); } return false ; } // Available mask values var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 }; // Setting a single value: var flags = PlaylistLockFilterMask . filter_add ; // To set multiple values at once, use | like this: var flags2 = PlaylistLockFilterMask . filter_add | PlaylistLockFilterMask . filter_remove ; // You may add a value to existing flags using a bitwise operator like this: flags |= PlaylistLockFilterMask . filter_replace ; //To remove a value, use &= and ~ like this: flags &= ~ PlaylistLockFilterMask . filter_replace ; plman.ClearPlaylist(playlistIndex) # Arguments playlistIndex number Must be valid. No return value. plman.ClearPlaylistSelection(playlistIndex) # Arguments playlistIndex number Must be valid. No return value. plman.CreateAutoPlaylist(playlistIndex, name, query[, sort, flags]) # Arguments playlistIndex number name string query string flags number Default 0 . Use 1 to force sort. Returns the index of the newly created Autoplaylist or -1 on failure. The most likely cause of that would be an invalid query. plman.CreatePlaylist([playlistIndex, name]) # Arguments playlistIndex number Optional name string Optional Returns the index of the newly created playlist. Example /* Creates a new playlist last in the list and it will be named `New playlist` or have numbers appended if there are existing playlists with the same name. Using the return value, you can switch to it. */ var new_index = plman . CreatePlaylist (); plman . ActivePlaylist = new_index ; plman.DuplicatePlaylist(playlistIndex, name) # Arguments playlistIndex number Must be valid. name string If you supply an empty string, the name of the original playlist is used. Returns the index of the newly created playlist which will be directly after the original. Only the content is duplicated, not the properties. plman.ExecutePlaylistDefaultAction(playlistIndex, playlistItemIndex) # Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. Returns a boolean value. Starts playback by executing the default doubleclick action unless overridden by a lock to do something else. plman.FindOrCreatePlaylist(name, unlocked) # Arguments name string unlocked boolean If true , locked playlists are ignored when looking for existing playlists. Returns index of named playlist or newly created playlist. plman.FindPlaylist(name) # Arguments name string Not case senstive. Returns the found index or -1 on failure. plman.GetPlayingItemLocation() # Returns an IPlayingItemLocation instance. plman.GetPlaylistFocusItemIndex(playlistIndex) # Arguments playlistIndex number Returns index or -1 if nothing is selected. plman.GetPlaylistItemCount(playlistIndex) # Arguments playlistIndex number Returns a number . plman.GetPlaylistItems(playlistIndex) # Arguments playlistIndex number Returns an IMetadbHandleList instance. plman.GetPlaylistLockFilterMask(playlistIndex) # Arguments playlistIndex number Returns a PlaylistLockFilterMask or -1 if supplied with an invalid playlistIndex . Use this to determine the type(s) of locks applied to the specified playlist. Example var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 }; var mask = plman . GetPlaylistLockFilterMask ( plman . ActivePlaylist ) if ( mask & PlaylistLockFilterMask . filter_add ) { console . log ( \"Can't add files to this playlist\" ); } plman.GetPlaylistLockName(playlistIndex) # Arguments playlistIndex number Returns the name of the component that implemented the playlist lock or an empty string if the playlist is not locked. plman.GetPlaylistName(playlistIndex) # Arguments playlistIndex number Returns a string . plman.GetPlaylistSelectedItems(playlistIndex) # Arguments playlistIndex number Returns an IMetadbHandleList instance. plman.GetRecyclerItems(index) # Arguments index number Must be valid. Returns an IMetadbHandleList instance. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // retrieve handles from first deleted playlist var handle_list = plman . GetRecyclerItems ( 0 ); } plman.GetRecyclerName(index) # Arguments index number Must be valid. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // output name of first deleted playlist console . log ( plman . GetRecyclerName ( 0 )); } plman.InsertPlaylistItems(playlistIndex, base, handle_list[, select]) # Arguments playlistIndex number Must be valid. base number Position in playlist. handle_list IMetadbHandleList select boolean Default false . No return value. plman.InsertPlaylistItemsFilter(playlistIndex, base, handle_list[, select]) # Arguments playlistIndex number Must be valid. base number Position in playlist. handle_list IMetadbHandleList select boolean Default false . No return value. Same as above except any duplicates contained in handle_list are removed. plman.InvertSelection(playlistIndex) # Arguments playlistIndex number Must be valid. No return value. plman.IsAutoPlaylist(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. plman.IsPlaylistItemSelected(playlistIndex, playlistItemIndex) # Arguments playlistIndex number playlistItemIndex number Returns a boolean value. plman.IsPlaylistLocked(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. Note It's advisable to use plman.GetPlaylistLockFilterMask as this will let you determine what kind of locks are in place. For example, if a playlist only has a lock preventing you from deleting it, you can still add/remove files which you wouldn't be able determine from using plman.IsPlaylistLocked alone. plman.MovePlaylist(from, to) # Arguments from number Must be valid. to number Must be valid and not equal to from . Returns a boolean value. plman.MovePlaylistSelection(playlistIndex, delta) # Arguments playlistIndex number Must be valid. delta number Returns a boolean value. Note Only useful when the selection is contiguous. See the improved version just below. plman.MovePlaylistSelectionV2(playlistIndex, new_pos) # Arguments playlistIndex number Must be valid. new_pos number Returns a boolean value. Unlike plman.MovePlaylistSelection , this has full support for non-contiguous selections and all you have to do is supply the new position index. plman.RecyclerPurge(affectedItems) # Arguments affectedItems array No return value. Purges deleted playlists so they cannot be restored. Example // first only plman . RecyclerPurge ([ 0 ]); // first and third only plman . RecyclerPurge ([ 0 , 2 ]); // purges all deleted playlists var arr = []; var count = plman . RecyclerCount ; for ( var i = 0 ; i < count ; i ++ ) { arr . push ( i ); } plman . RecyclerPurge ( arr ); plman.RecyclerRestore(index) # Arguments index number Must be valid. No return value. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // restore first deleted playlist plman . RecyclerRestore ( 0 ); } plman.RemovePlaylist(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. Note If removing the active playlist, no playlist will be active after using this. You'll need to set it manually or use plman.RemovePlaylistSwitch instead. plman.RemovePlaylistLock(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. Note You can only remove a playlist lock if it's owned by JScript Panel 3 . You can check this with plman.GetPlaylistLockName . See plman.AddPlaylistLock for an example. plman.RemovePlaylists(playlistIndexes) # Arguments playlistIndexes array Returns a boolean value. Example // This would remove all empty playlists. var arr = []; for ( var i = 0 ; i < plman . PlaylistCount ; i ++ ) { if ( plman . GetPlaylistItemCount ( i ) == 0 ) arr . push ( i ); } if ( arr . length ) plman . RemovePlaylists ( arr ); plman.RemovePlaylistSelection(playlistIndex[, crop]) # Arguments playlistIndex number Must be valid. crop boolean Default false . No return value. Example // Removes selected items from playlist. plman . RemovePlaylistSelection ( plman . ActivePlaylist ); // Removes items that are NOT selected. plman . RemovePlaylistSelection ( plman . ActivePlaylist , true ); plman.RemovePlaylistSwitch(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. This automatically sets another playlist as active if removing the active playlist. plman.RenamePlaylist(playlistIndex, name) # Arguments playlistIndex number Must be valid. name string Returns a boolean value. plman.SetActivePlaylistContext() # No return value. Workaround so you can use the Edit menu when your panel has focus and a dedicated playlist viewer doesn't. Example // Once on startup. plman . SetActivePlaylistContext (); function on_focus ( is_focused ) { if ( is_focused ) { // When the panel gets focus but not on every click. plman . SetActivePlaylistContext (); } } plman.SetPlaylistFocusItem(playlistIndex, playlistItemIndex) # Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. No return value. plman.SetPlaylistSelection(playlistIndex, affectedItems, state) # Arguments playlistIndex number Must be valid. affectedItems array state boolean No return value. Example // Selects first, third and fifth tracks in playlist. // This does not affect other selected items. var arr = [ 0 , 2 , 4 ]; plman . SetPlaylistSelection ( plman . ActivePlaylist , arr , true ); plman.SetPlaylistSelectionSingle(playlistIndex, playlistItemIndex, state) # Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. state boolean No return value. Example // Deselects first playlist item. // Only works when it is already selected! plman . SetPlaylistSelectionSingle ( plman . ActivePlaylist , 0 , false ); Example // Selects last item in playlist. // This does not affect other selected items. var ap = plman . ActivePlaylist ; var count = plman . GetPlaylistItemCount ( ap ); plman . SetPlaylistSelectionSingle ( ap , count - 1 , true ); plman.ShowAutoPlaylistUI(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. It will be false if the playlist was not an Autoplaylist . plman.ShowPlaylistLockUI(playlistIndex) # Arguments playlistIndex number Must be valid. Returns a boolean value. The value will be false if the playlist is an Autoplaylist or the lock is owned by another component. The dialog is modal which means code directly after it will not run until it is dismissed. Shows popup window letting you toggle the various lock options on/off. plman.SortByFormat(playlistIndex, pattern[, selected_items_only]) # Arguments playlistIndex number Must be valid. pattern string Title formatting pattern to sort by. Use \"\" to randomise the order. selected_items_only boolean Default false . Returns a boolean value. plman.SortByFormatV2(playlistIndex, pattern[, direction]) # Arguments playlistIndex number Must be valid. pattern string Title formatting pattern to sort by. direction number Default 1 . Use 1 for ascending, -1 for descending. Returns a boolean value. plman.SortPlaylistsByName([direction]) # Arguments direction number Default 1 . Use 1 for ascending, -1 for descending. No return value. plman.UndoBackup(playlistIndex) # Arguments playlistIndex number Must be valid. No return value. Call before using other plman methods that add/remove/reorder playlist items so a history will be available from the Edit menu.","title":"plman"},{"location":"docs/namespaces/plman/#plmanaddlocationsplaylistindex-paths-select","text":"Arguments playlistIndex number Must be valid. Also, it must not be an autoplaylist or have a lock in place preventing the addition of new files. paths array Can be file paths/urls/playlists. select boolean Default false . If true , the active playlist will be set to the playlistIndex , the items will be selected and focus will be set to the first new item. No return value. Note This operation is asynchronous and may take some time to complete if it's a large array. Example var arr = [ \"e:\\\\1.mp3\" ]; plman . AddLocations ( plman . ActivePlaylist , arr );","title":"plman.AddLocations(playlistIndex, paths[, select])"},{"location":"docs/namespaces/plman/#plmanaddplaylistlockplaylistindex-flags","text":"Arguments playlistIndex number Must be valid. flags PlaylistLockFilterMask Returns true on success, false if playlist already locked. See plman.ShowPlaylistLockUI first as that provides a dialog and is much more user friendly! Note Before you can add a playlist lock, you must check there is no lock present already. If another component owns the lock, you have to use that component to remove it. If the lock is owned by JScript Panel 3 then you must remove it first. This is because locks cannot be edited. You have to remove it and then add a new one with a new mask value. Example function add_playlist_lock ( playlistIndex , flags ) { // check if playlistIndex is valid if ( playlistIndex >= 0 && playlistIndex < plman . PlaylistCount ) { if ( plman . IsPlaylistLocked ( playlistIndex )) { if ( plman . GetPlaylistLockName ( playlistIndex ) == 'JScript Panel 3' ) { // We own this lock so we can remove it. plman . RemovePlaylistLock ( playlistIndex ); } else { // Locked but not ours. Nothing we can do. return false ; } } return plman . AddPlaylistLock ( playlistIndex , flags ); } return false ; } // Available mask values var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 }; // Setting a single value: var flags = PlaylistLockFilterMask . filter_add ; // To set multiple values at once, use | like this: var flags2 = PlaylistLockFilterMask . filter_add | PlaylistLockFilterMask . filter_remove ; // You may add a value to existing flags using a bitwise operator like this: flags |= PlaylistLockFilterMask . filter_replace ; //To remove a value, use &= and ~ like this: flags &= ~ PlaylistLockFilterMask . filter_replace ;","title":"plman.AddPlaylistLock(playlistIndex, flags)"},{"location":"docs/namespaces/plman/#plmanclearplaylistplaylistindex","text":"Arguments playlistIndex number Must be valid. No return value.","title":"plman.ClearPlaylist(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanclearplaylistselectionplaylistindex","text":"Arguments playlistIndex number Must be valid. No return value.","title":"plman.ClearPlaylistSelection(playlistIndex)"},{"location":"docs/namespaces/plman/#plmancreateautoplaylistplaylistindex-name-query-sort-flags","text":"Arguments playlistIndex number name string query string flags number Default 0 . Use 1 to force sort. Returns the index of the newly created Autoplaylist or -1 on failure. The most likely cause of that would be an invalid query.","title":"plman.CreateAutoPlaylist(playlistIndex, name, query[, sort, flags])"},{"location":"docs/namespaces/plman/#plmancreateplaylistplaylistindex-name","text":"Arguments playlistIndex number Optional name string Optional Returns the index of the newly created playlist. Example /* Creates a new playlist last in the list and it will be named `New playlist` or have numbers appended if there are existing playlists with the same name. Using the return value, you can switch to it. */ var new_index = plman . CreatePlaylist (); plman . ActivePlaylist = new_index ;","title":"plman.CreatePlaylist([playlistIndex, name])"},{"location":"docs/namespaces/plman/#plmanduplicateplaylistplaylistindex-name","text":"Arguments playlistIndex number Must be valid. name string If you supply an empty string, the name of the original playlist is used. Returns the index of the newly created playlist which will be directly after the original. Only the content is duplicated, not the properties.","title":"plman.DuplicatePlaylist(playlistIndex, name)"},{"location":"docs/namespaces/plman/#plmanexecuteplaylistdefaultactionplaylistindex-playlistitemindex","text":"Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. Returns a boolean value. Starts playback by executing the default doubleclick action unless overridden by a lock to do something else.","title":"plman.ExecutePlaylistDefaultAction(playlistIndex, playlistItemIndex)"},{"location":"docs/namespaces/plman/#plmanfindorcreateplaylistname-unlocked","text":"Arguments name string unlocked boolean If true , locked playlists are ignored when looking for existing playlists. Returns index of named playlist or newly created playlist.","title":"plman.FindOrCreatePlaylist(name, unlocked)"},{"location":"docs/namespaces/plman/#plmanfindplaylistname","text":"Arguments name string Not case senstive. Returns the found index or -1 on failure.","title":"plman.FindPlaylist(name)"},{"location":"docs/namespaces/plman/#plmangetplayingitemlocation","text":"Returns an IPlayingItemLocation instance.","title":"plman.GetPlayingItemLocation()"},{"location":"docs/namespaces/plman/#plmangetplaylistfocusitemindexplaylistindex","text":"Arguments playlistIndex number Returns index or -1 if nothing is selected.","title":"plman.GetPlaylistFocusItemIndex(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistitemcountplaylistindex","text":"Arguments playlistIndex number Returns a number .","title":"plman.GetPlaylistItemCount(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistitemsplaylistindex","text":"Arguments playlistIndex number Returns an IMetadbHandleList instance.","title":"plman.GetPlaylistItems(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistlockfiltermaskplaylistindex","text":"Arguments playlistIndex number Returns a PlaylistLockFilterMask or -1 if supplied with an invalid playlistIndex . Use this to determine the type(s) of locks applied to the specified playlist. Example var PlaylistLockFilterMask = { filter_add : 1 , filter_remove : 2 , filter_reorder : 4 , filter_replace : 8 , filter_rename : 16 , filter_remove_playlist : 32 , filter_default_action : 64 }; var mask = plman . GetPlaylistLockFilterMask ( plman . ActivePlaylist ) if ( mask & PlaylistLockFilterMask . filter_add ) { console . log ( \"Can't add files to this playlist\" ); }","title":"plman.GetPlaylistLockFilterMask(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistlocknameplaylistindex","text":"Arguments playlistIndex number Returns the name of the component that implemented the playlist lock or an empty string if the playlist is not locked.","title":"plman.GetPlaylistLockName(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistnameplaylistindex","text":"Arguments playlistIndex number Returns a string .","title":"plman.GetPlaylistName(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetplaylistselecteditemsplaylistindex","text":"Arguments playlistIndex number Returns an IMetadbHandleList instance.","title":"plman.GetPlaylistSelectedItems(playlistIndex)"},{"location":"docs/namespaces/plman/#plmangetrecycleritemsindex","text":"Arguments index number Must be valid. Returns an IMetadbHandleList instance. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // retrieve handles from first deleted playlist var handle_list = plman . GetRecyclerItems ( 0 ); }","title":"plman.GetRecyclerItems(index)"},{"location":"docs/namespaces/plman/#plmangetrecyclernameindex","text":"Arguments index number Must be valid. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // output name of first deleted playlist console . log ( plman . GetRecyclerName ( 0 )); }","title":"plman.GetRecyclerName(index)"},{"location":"docs/namespaces/plman/#plmaninsertplaylistitemsplaylistindex-base-handle_list-select","text":"Arguments playlistIndex number Must be valid. base number Position in playlist. handle_list IMetadbHandleList select boolean Default false . No return value.","title":"plman.InsertPlaylistItems(playlistIndex, base, handle_list[, select])"},{"location":"docs/namespaces/plman/#plmaninsertplaylistitemsfilterplaylistindex-base-handle_list-select","text":"Arguments playlistIndex number Must be valid. base number Position in playlist. handle_list IMetadbHandleList select boolean Default false . No return value. Same as above except any duplicates contained in handle_list are removed.","title":"plman.InsertPlaylistItemsFilter(playlistIndex, base, handle_list[, select])"},{"location":"docs/namespaces/plman/#plmaninvertselectionplaylistindex","text":"Arguments playlistIndex number Must be valid. No return value.","title":"plman.InvertSelection(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanisautoplaylistplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value.","title":"plman.IsAutoPlaylist(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanisplaylistitemselectedplaylistindex-playlistitemindex","text":"Arguments playlistIndex number playlistItemIndex number Returns a boolean value.","title":"plman.IsPlaylistItemSelected(playlistIndex, playlistItemIndex)"},{"location":"docs/namespaces/plman/#plmanisplaylistlockedplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. Note It's advisable to use plman.GetPlaylistLockFilterMask as this will let you determine what kind of locks are in place. For example, if a playlist only has a lock preventing you from deleting it, you can still add/remove files which you wouldn't be able determine from using plman.IsPlaylistLocked alone.","title":"plman.IsPlaylistLocked(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanmoveplaylistfrom-to","text":"Arguments from number Must be valid. to number Must be valid and not equal to from . Returns a boolean value.","title":"plman.MovePlaylist(from, to)"},{"location":"docs/namespaces/plman/#plmanmoveplaylistselectionplaylistindex-delta","text":"Arguments playlistIndex number Must be valid. delta number Returns a boolean value. Note Only useful when the selection is contiguous. See the improved version just below.","title":"plman.MovePlaylistSelection(playlistIndex, delta)"},{"location":"docs/namespaces/plman/#plmanmoveplaylistselectionv2playlistindex-new_pos","text":"Arguments playlistIndex number Must be valid. new_pos number Returns a boolean value. Unlike plman.MovePlaylistSelection , this has full support for non-contiguous selections and all you have to do is supply the new position index.","title":"plman.MovePlaylistSelectionV2(playlistIndex, new_pos)"},{"location":"docs/namespaces/plman/#plmanrecyclerpurgeaffecteditems","text":"Arguments affectedItems array No return value. Purges deleted playlists so they cannot be restored. Example // first only plman . RecyclerPurge ([ 0 ]); // first and third only plman . RecyclerPurge ([ 0 , 2 ]); // purges all deleted playlists var arr = []; var count = plman . RecyclerCount ; for ( var i = 0 ; i < count ; i ++ ) { arr . push ( i ); } plman . RecyclerPurge ( arr );","title":"plman.RecyclerPurge(affectedItems)"},{"location":"docs/namespaces/plman/#plmanrecyclerrestoreindex","text":"Arguments index number Must be valid. No return value. Example var count = plman . RecyclerCount ; if ( count > 0 ) { // restore first deleted playlist plman . RecyclerRestore ( 0 ); }","title":"plman.RecyclerRestore(index)"},{"location":"docs/namespaces/plman/#plmanremoveplaylistplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. Note If removing the active playlist, no playlist will be active after using this. You'll need to set it manually or use plman.RemovePlaylistSwitch instead.","title":"plman.RemovePlaylist(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanremoveplaylistlockplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. Note You can only remove a playlist lock if it's owned by JScript Panel 3 . You can check this with plman.GetPlaylistLockName . See plman.AddPlaylistLock for an example.","title":"plman.RemovePlaylistLock(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanremoveplaylistsplaylistindexes","text":"Arguments playlistIndexes array Returns a boolean value. Example // This would remove all empty playlists. var arr = []; for ( var i = 0 ; i < plman . PlaylistCount ; i ++ ) { if ( plman . GetPlaylistItemCount ( i ) == 0 ) arr . push ( i ); } if ( arr . length ) plman . RemovePlaylists ( arr );","title":"plman.RemovePlaylists(playlistIndexes)"},{"location":"docs/namespaces/plman/#plmanremoveplaylistselectionplaylistindex-crop","text":"Arguments playlistIndex number Must be valid. crop boolean Default false . No return value. Example // Removes selected items from playlist. plman . RemovePlaylistSelection ( plman . ActivePlaylist ); // Removes items that are NOT selected. plman . RemovePlaylistSelection ( plman . ActivePlaylist , true );","title":"plman.RemovePlaylistSelection(playlistIndex[, crop])"},{"location":"docs/namespaces/plman/#plmanremoveplaylistswitchplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. This automatically sets another playlist as active if removing the active playlist.","title":"plman.RemovePlaylistSwitch(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanrenameplaylistplaylistindex-name","text":"Arguments playlistIndex number Must be valid. name string Returns a boolean value.","title":"plman.RenamePlaylist(playlistIndex, name)"},{"location":"docs/namespaces/plman/#plmansetactiveplaylistcontext","text":"No return value. Workaround so you can use the Edit menu when your panel has focus and a dedicated playlist viewer doesn't. Example // Once on startup. plman . SetActivePlaylistContext (); function on_focus ( is_focused ) { if ( is_focused ) { // When the panel gets focus but not on every click. plman . SetActivePlaylistContext (); } }","title":"plman.SetActivePlaylistContext()"},{"location":"docs/namespaces/plman/#plmansetplaylistfocusitemplaylistindex-playlistitemindex","text":"Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. No return value.","title":"plman.SetPlaylistFocusItem(playlistIndex, playlistItemIndex)"},{"location":"docs/namespaces/plman/#plmansetplaylistselectionplaylistindex-affecteditems-state","text":"Arguments playlistIndex number Must be valid. affectedItems array state boolean No return value. Example // Selects first, third and fifth tracks in playlist. // This does not affect other selected items. var arr = [ 0 , 2 , 4 ]; plman . SetPlaylistSelection ( plman . ActivePlaylist , arr , true );","title":"plman.SetPlaylistSelection(playlistIndex, affectedItems, state)"},{"location":"docs/namespaces/plman/#plmansetplaylistselectionsingleplaylistindex-playlistitemindex-state","text":"Arguments playlistIndex number Must be valid. playlistItemIndex number Must be valid. state boolean No return value. Example // Deselects first playlist item. // Only works when it is already selected! plman . SetPlaylistSelectionSingle ( plman . ActivePlaylist , 0 , false ); Example // Selects last item in playlist. // This does not affect other selected items. var ap = plman . ActivePlaylist ; var count = plman . GetPlaylistItemCount ( ap ); plman . SetPlaylistSelectionSingle ( ap , count - 1 , true );","title":"plman.SetPlaylistSelectionSingle(playlistIndex, playlistItemIndex, state)"},{"location":"docs/namespaces/plman/#plmanshowautoplaylistuiplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. It will be false if the playlist was not an Autoplaylist .","title":"plman.ShowAutoPlaylistUI(playlistIndex)"},{"location":"docs/namespaces/plman/#plmanshowplaylistlockuiplaylistindex","text":"Arguments playlistIndex number Must be valid. Returns a boolean value. The value will be false if the playlist is an Autoplaylist or the lock is owned by another component. The dialog is modal which means code directly after it will not run until it is dismissed. Shows popup window letting you toggle the various lock options on/off.","title":"plman.ShowPlaylistLockUI(playlistIndex)"},{"location":"docs/namespaces/plman/#plmansortbyformatplaylistindex-pattern-selected_items_only","text":"Arguments playlistIndex number Must be valid. pattern string Title formatting pattern to sort by. Use \"\" to randomise the order. selected_items_only boolean Default false . Returns a boolean value.","title":"plman.SortByFormat(playlistIndex, pattern[, selected_items_only])"},{"location":"docs/namespaces/plman/#plmansortbyformatv2playlistindex-pattern-direction","text":"Arguments playlistIndex number Must be valid. pattern string Title formatting pattern to sort by. direction number Default 1 . Use 1 for ascending, -1 for descending. Returns a boolean value.","title":"plman.SortByFormatV2(playlistIndex, pattern[, direction])"},{"location":"docs/namespaces/plman/#plmansortplaylistsbynamedirection","text":"Arguments direction number Default 1 . Use 1 for ascending, -1 for descending. No return value.","title":"plman.SortPlaylistsByName([direction])"},{"location":"docs/namespaces/plman/#plmanundobackupplaylistindex","text":"Arguments playlistIndex number Must be valid. No return value. Call before using other plman methods that add/remove/reorder playlist items so a history will be available from the Edit menu.","title":"plman.UndoBackup(playlistIndex)"},{"location":"docs/namespaces/utils/","text":"Properties utils.Version number read Returns a 5 digit number. v3.0.0 -> 30000 v3.4.1 -> 30401 v3.10.12 -> 31012 Example if ( utils . Version < 30000 ) { utils . ShowPopupMessage ( \"This script requires JScript Panel v3.0.0 or above.\" ); } Methods utils.CalcTextWidth(text, font_name, font_size[, font_weight, font_style, font_stretch]) # Arguments text string font_name string font_size number font_weight DWRITE_FONT_WEIGHT Default 400 . font_style DWRITE_FONT_STYLE Default 0 . font_stretch DWRITE_FONT_STRETCH Default 5 . Returns a number . utils.CheckComponent(name) # Arguments name string Returns a boolean value. utils.CheckFont(name) # Arguments name string Returns a boolean value. utils.ColourPicker(default_colour) # Arguments default_colour number Returns a number which can used as the colour in many methods. The dialog is modal which means code directly after it will not run until it is dismissed. utils.CreateFolder(path) # Returns true on success or if folder already exists. Returns false if operation fails. Parent folders are created if they don't exist. utils.CreateImage(width, height) # Arguments width number height number Returns an IJSImage instance. utils.CreateProfiler([name]) # Arguments name string Optional Returns an IProfiler instance. Check link for an example. utils.CreateTextLayout(text, font_name, font_size[, font_size, font_style, font_stretch, text_aligment, paragraph_aligment, word_wrapping]) # Arguments text string font_name string font_size number font_weight DWRITE_FONT_WEIGHT Default 400 . font_style DWRITE_FONT_STYLE Default 0 . font_stretch DWRITE_FONT_STRETCH Default 5 . text_aligment DWRITE_TEXT_ALIGNMENT Default 0 . paragraph_aligment DWRITE_PARAGRAPH_ALIGNMENT Default 0 . word_wrapping DWRITE_WORD_WRAPPING Default 0 . Returns an ITextLayout instance. You typically use this when you want to calculate the height of a long string or need scrolling. When passing to IJSGraphics WriteTextLayout , you can supply a vertical offset. Example // ==PREPROCESSOR== // @name \"SimpleScroll\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.' ; var layout = utils . CreateTextLayout ( text , 'Segoe UI' , 24 ); var offset = 0 ; var text_height = 0 ; var box = { x : 50 , y : 50 , w : 0 , h : 0 , } function on_paint ( gr ) { gr . DrawRectangle ( box . x , box . y , box . w , box . h , 1 , RGB ( 255 , 0 , 0 )); gr . WriteTextLayout ( layout , RGB ( 0 , 0 , 0 ), box . x , box . y , box . w , box . h , offset ); } function on_mouse_wheel ( step ) { if ( text_height < box . h ) return ; offset += step * 60 ; if ( offset > 0 ) offset = 0 ; else if ( offset < box . h - text_height ) offset = box . h - text_height ; window . Repaint (); } function on_size () { box . w = window . Width / 2 ; box . h = window . Height / 2 ; text_height = layout . CalcTextHeight ( box . w ); if ( text_height < box . h ) offset = 0 ; else if ( offset < box . h - text_height ) offset = box . h - text_height ; } utils.DateStringToTimestamp(str) # Arguments str string Must be in full YYYY-MM-DD HH:MM:SS format. The return value is seconds since 00:00:00 Thursday, 1 January 1970 UTC. It is expected date strings are timezone adjusted but timestamps are UTC (not adjusted). Example var last_played_string = \"2018-08-30 00:00:00\" ; var last_played_timestamp = utils . DateStringToTimestamp ( last_played_string ); // Divide by 1000 because JavaScript timestamps are in milliseconds. var now = Math . round ( new Date (). getTime () / 1000 ); // number of seconds in a day var day = 24 * 60 * 60 ; // number of days since last played console . log ( Math . floor (( now - last_played_timestamp ) / day )); utils.DetectCharset(path) # Arguments path string Path to a text file. Returns a number which can be supplied to utils.ReadTextFile . This may not be accurate and returns 0 if an error occurred. utils.DownloadFileAsync(window_id, url, path) # Arguments window_id window.ID url string The remote file you want to download. path string Full path including extension. The parent folder must already exist. Use in conjunction with on_download_file_done . utils.FormatDuration(seconds) # Arguments seconds number Returns a string . Example var playlist_items = plman . GetPlaylistItems ( plman . ActivePlaylist ); var playlist_length_seconds = playlist_items . CalcTotalDuration (); console . log ( utils . FormatDuration ( playlist_length_seconds )); // 5:24:44 utils.FormatFileSize(bytes) # Arguments bytes number Returns a string . Example var playlist_items = plman . GetPlaylistItems ( plman . ActivePlaylist ); var playlist_bytes = playlist_items . CalcTotalSize () console . log ( utils . FormatFileSize ( playlist_bytes )); // 601 MB utils.GetClipboardText() # Returns a string . It will be empty if the clipboard contents are not text. utils.GetFileSize(path) # Arguments path string Returns the size in bytes. utils.GetLastModified(path) # Arguments path string The return value is seconds since 00:00:00 Thursday, 1 January 1970 UTC. utils.GetSysColour(index) # Arguments index number https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-getsyscolor Returns a number which can used as the colour in many methods. Could be 0 if the index is invalid. Example var splitter_colour = utils . GetSysColour ( 15 ); utils.GetSystemMetrics(index) # Arguments index number https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-getsystemmetrics Returns a number . utils.Glob(pattern[, exc_mask, inc_mask]) # Arguments pattern string exc_mask FILE_ATTRIBUTE Default FILE_ATTRIBUTE_DIRECTORY . inc_mask FILE_ATTRIBUTE Default 0xffffffff . Returns a VBArray so you need to use .toArray() on the result. Example var arr = utils . Glob ( \"C:\\\\Pictures\\\\*.jpg\" ). toArray (); utils.HTTPRequestAsync(window_id, type, url, user_agent_or_headers, post_data, content_type) # Arguments window_id window.ID type number Use 0 for GET , 1 for POST . url string user_agent_or_headers string See examples below. post_data string Should be omitted for GET requests and will be ignored. It is required for POST requests. It could be form data or a stringified JSON object/array. content_type string Should be omitted for GET requests and will be ignored. It is required for POST requests. 2 examples of valid values are application/json or application/x-www-form-urlencoded . Returns a unique task_id which is used as the first argument in the on_http_request_done callback. Notes A user agent should not contain spaces. If they exist, they will be stripped automatically. When making a POST request, do not add a Content-Type header. It must be set via the content_type argument listed above. Example Empty User Agent Custom User Agent Custom Headers var url = ... // Defaults to \"JScriptPanel3\". var user_agent = \"\" ; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , user_agent ); var url = ... var user_agent = \"my_app/0.1\" ; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , user_agent ); var url = ... var headers = { \"User-Agent\" : \"my_app/0.1\" , \"Some other header\" : \"blah\" , }; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , JSON . stringify ( headers )); utils.InputBox(prompt, title[, default_value, error_on_cancel]) # Arguments prompt string title string default_value string Defaults to an empty string if omitted. error_on_cancel boolean Default false . If set to true , use try/catch to catch errors. Returns a string . The dialog is modal which means code directly after it will not run until it is dismissed. With error_on_cancel not set (or set to false ), cancelling the dialog will return default_value . Example var username = utils . InputBox ( \"Enter your username\" , \"JScript Panel\" , \"\" ); Using the above example, you can't tell if OK or Cancel was pressed if the return value is the same as default_value . If you need to know, set error_on_cancel to true which throws a script error when Cancel is pressed. Example try { var username = utils . InputBox ( \"Enter your name\" , \"JScript Panel\" , \"\" , true ); // OK was pressed. } catch ( e ) { // Dialog was closed by pressing Esc, Cancel or the Close button. } utils.IsFile(path) # Arguments path string Returns a boolean value. utils.IsFolder(folder) # Arguments folder string Returns a boolean value. utils.IsKeyPressed(vkey) # Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes Returns a boolean value. utils.ListFiles(folder[, recursive]) # Arguments folder string recursive boolean Default false . Returns a VBArray so you need to use .toArray() on the result. utils.ListFolders(folder[, recursive]) # Arguments folder string recursive boolean Default false . Returns a VBArray so you need to use .toArray() on the result. utils.ListFonts() # Returns a VBArray so you need to use .toArray() on the result. utils.LoadImage(path) # Arguments path string Returns an IJSImage instance or null on failure. utils.LoadImageAsync(window_id, path) # Arguments window_id window.ID path string No return value. Use in conjunction with on_load_image_done . utils.LoadSVG(path_or_xml[, max_width]) # Arguments path_or_xml string max_width number Default 0 . Original size is used if zero. Returns an IJSImage instance or null on failure. Example var svg_file = fb . ComponentPath + \"samples\\\\svg\\\\android.svg\" ; var svg_content = utils . ReadUTF8 ( svg_file ); var original = utils . LoadSVG ( svg_file ); // Maybe manipulate the XML??? That's for others, not me!! var large = utils . LoadSVG ( svg_content , 512 ); function on_paint ( gr ) { gr . DrawImage ( original , 0 , 0 , original . Width , original . Height , 0 , 0 , original . Width , original . Height ); gr . DrawImage ( large , original . Width , 0 , large . Width , large . Height , 0 , 0 , large . Width , large . Height ); } utils.MessageBox(prompt, title, flags) # Arguments prompt string title string flags MessageBox Buttons , MessageBox Icons Can be combined. Returns a MessageBox Return Value . The dialog is modal which means code directly after it will not run until it is dismissed. Example // ==PREPROCESSOR== // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var prompt = \"Do you really want to open the Preferences?\" ; var title = \"A very important question\" ; if ( utils . MessageBox ( prompt , title , MB_YESNO | MB_ICONQUESTION ) == IDYES ) { fb . ShowPreferences (); } utils.ReadINI(path, section, key[, default_value]) # Arguments path string section string key string default_value string This will be the return value if the key isn't found. Defaults to an empty string if omitted. Returns a string . The maximum length is limited to 255 characters. An INI file should look something like this: [section] key=val Example var username = utils . ReadINI ( \"e:\\\\my_file.ini\" , \"Last.fm\" , \"username\" ); utils.ReadTextFile(path[, codepage]) # Arguments path string codepage number Default 0 . See utils.DetectCharset . Returns a string . Will be empty if path doesn't exist or there was an error opening it. Note If the file is determined to be UCS2-LE or UTF8 , any supplied codepage will be ignored. Example Simple Using utils.DetectCharset var path = \"E:\\\\some text file.txt\" ; var text = utils . ReadTextFile ( path ); var path = \"E:\\\\some text file.txt\" ; var codepage = utils . DetectCharset ( path ); var text = utils . ReadTextFile ( path , codepage ); utils.ReadUTF8(path) # Arguments path string Returns a string . Will be empty if path doesn't exist or there was an error opening it. Note It's preferable to use this when you know the file is UTF8 . If you're unsure, continue to use utils.ReadTextFile utils.RemovePath(path) # Arguments path string Can be a file or folder. If it's a folder, it must be empty. Returns a boolean value. utils.ReplaceIllegalChars(str[, modern]) # Arguments str string modern boolean Default true . Returns a string . Example Legacy Modern var chars = '\"\\\\\\/*|:<>?' ; console . log ( utils . ReplaceIllegalChars ( chars , false )); Output ''--x_-__ var chars = '\"\\\\\\/*|:<>?' ; console . log ( utils . ReplaceIllegalChars ( chars , true )); Output ''\u29f5\u2044\u2217\u2223\u2236\u02c2\u02c3\uff1f Note These replacements should correspond with the settings available in the foobar2000 File Operations and Converter advanced preferences. utils.SetClipboardText(text) # Arguments text string No return value. utils.ShowPopupMessage(message[, title]) # Arguments message string title string Default JScript Panel 3 . No return value. utils.TimestampToDateString(ts) # Arguments ts number Should be the number of seconds since 00:00:00 Thursday, 1 January 1970 UTC. Returns a string . It will be adjusted to your local time zone. Example // Divide by 1000 because JavaScript timestamps are in milliseconds. var now = Math . round ( new Date (). getTime () / 1000 ); console . log ( utils . TimestampToDateString ( now )); utils.WriteINI(path, section, key, value) # Arguments path string The parent folder must already exist. section string key string value string Returns a boolean value. Example utils . WriteINI ( \"e:\\\\my_file.ini\" , \"Last.fm\" , \"username\" , \"Bob\" ); utils.WriteTextFile(path, content) # Arguments path string The parent folder must already exist. content string Returns a boolean value. Note Files are written as UTF8 without BOM .","title":"utils"},{"location":"docs/namespaces/utils/#utilscalctextwidthtext-font_name-font_size-font_weight-font_style-font_stretch","text":"Arguments text string font_name string font_size number font_weight DWRITE_FONT_WEIGHT Default 400 . font_style DWRITE_FONT_STYLE Default 0 . font_stretch DWRITE_FONT_STRETCH Default 5 . Returns a number .","title":"utils.CalcTextWidth(text, font_name, font_size[, font_weight, font_style, font_stretch])"},{"location":"docs/namespaces/utils/#utilscheckcomponentname","text":"Arguments name string Returns a boolean value.","title":"utils.CheckComponent(name)"},{"location":"docs/namespaces/utils/#utilscheckfontname","text":"Arguments name string Returns a boolean value.","title":"utils.CheckFont(name)"},{"location":"docs/namespaces/utils/#utilscolourpickerdefault_colour","text":"Arguments default_colour number Returns a number which can used as the colour in many methods. The dialog is modal which means code directly after it will not run until it is dismissed.","title":"utils.ColourPicker(default_colour)"},{"location":"docs/namespaces/utils/#utilscreatefolderpath","text":"Returns true on success or if folder already exists. Returns false if operation fails. Parent folders are created if they don't exist.","title":"utils.CreateFolder(path)"},{"location":"docs/namespaces/utils/#utilscreateimagewidth-height","text":"Arguments width number height number Returns an IJSImage instance.","title":"utils.CreateImage(width, height)"},{"location":"docs/namespaces/utils/#utilscreateprofilername","text":"Arguments name string Optional Returns an IProfiler instance. Check link for an example.","title":"utils.CreateProfiler([name])"},{"location":"docs/namespaces/utils/#utilscreatetextlayouttext-font_name-font_size-font_size-font_style-font_stretch-text_aligment-paragraph_aligment-word_wrapping","text":"Arguments text string font_name string font_size number font_weight DWRITE_FONT_WEIGHT Default 400 . font_style DWRITE_FONT_STYLE Default 0 . font_stretch DWRITE_FONT_STRETCH Default 5 . text_aligment DWRITE_TEXT_ALIGNMENT Default 0 . paragraph_aligment DWRITE_PARAGRAPH_ALIGNMENT Default 0 . word_wrapping DWRITE_WORD_WRAPPING Default 0 . Returns an ITextLayout instance. You typically use this when you want to calculate the height of a long string or need scrolling. When passing to IJSGraphics WriteTextLayout , you can supply a vertical offset. Example // ==PREPROCESSOR== // @name \"SimpleScroll\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.' ; var layout = utils . CreateTextLayout ( text , 'Segoe UI' , 24 ); var offset = 0 ; var text_height = 0 ; var box = { x : 50 , y : 50 , w : 0 , h : 0 , } function on_paint ( gr ) { gr . DrawRectangle ( box . x , box . y , box . w , box . h , 1 , RGB ( 255 , 0 , 0 )); gr . WriteTextLayout ( layout , RGB ( 0 , 0 , 0 ), box . x , box . y , box . w , box . h , offset ); } function on_mouse_wheel ( step ) { if ( text_height < box . h ) return ; offset += step * 60 ; if ( offset > 0 ) offset = 0 ; else if ( offset < box . h - text_height ) offset = box . h - text_height ; window . Repaint (); } function on_size () { box . w = window . Width / 2 ; box . h = window . Height / 2 ; text_height = layout . CalcTextHeight ( box . w ); if ( text_height < box . h ) offset = 0 ; else if ( offset < box . h - text_height ) offset = box . h - text_height ; }","title":"utils.CreateTextLayout(text, font_name, font_size[, font_size, font_style, font_stretch, text_aligment, paragraph_aligment, word_wrapping])"},{"location":"docs/namespaces/utils/#utilsdatestringtotimestampstr","text":"Arguments str string Must be in full YYYY-MM-DD HH:MM:SS format. The return value is seconds since 00:00:00 Thursday, 1 January 1970 UTC. It is expected date strings are timezone adjusted but timestamps are UTC (not adjusted). Example var last_played_string = \"2018-08-30 00:00:00\" ; var last_played_timestamp = utils . DateStringToTimestamp ( last_played_string ); // Divide by 1000 because JavaScript timestamps are in milliseconds. var now = Math . round ( new Date (). getTime () / 1000 ); // number of seconds in a day var day = 24 * 60 * 60 ; // number of days since last played console . log ( Math . floor (( now - last_played_timestamp ) / day ));","title":"utils.DateStringToTimestamp(str)"},{"location":"docs/namespaces/utils/#utilsdetectcharsetpath","text":"Arguments path string Path to a text file. Returns a number which can be supplied to utils.ReadTextFile . This may not be accurate and returns 0 if an error occurred.","title":"utils.DetectCharset(path)"},{"location":"docs/namespaces/utils/#utilsdownloadfileasyncwindow_id-url-path","text":"Arguments window_id window.ID url string The remote file you want to download. path string Full path including extension. The parent folder must already exist. Use in conjunction with on_download_file_done .","title":"utils.DownloadFileAsync(window_id, url, path)"},{"location":"docs/namespaces/utils/#utilsformatdurationseconds","text":"Arguments seconds number Returns a string . Example var playlist_items = plman . GetPlaylistItems ( plman . ActivePlaylist ); var playlist_length_seconds = playlist_items . CalcTotalDuration (); console . log ( utils . FormatDuration ( playlist_length_seconds )); // 5:24:44","title":"utils.FormatDuration(seconds)"},{"location":"docs/namespaces/utils/#utilsformatfilesizebytes","text":"Arguments bytes number Returns a string . Example var playlist_items = plman . GetPlaylistItems ( plman . ActivePlaylist ); var playlist_bytes = playlist_items . CalcTotalSize () console . log ( utils . FormatFileSize ( playlist_bytes )); // 601 MB","title":"utils.FormatFileSize(bytes)"},{"location":"docs/namespaces/utils/#utilsgetclipboardtext","text":"Returns a string . It will be empty if the clipboard contents are not text.","title":"utils.GetClipboardText()"},{"location":"docs/namespaces/utils/#utilsgetfilesizepath","text":"Arguments path string Returns the size in bytes.","title":"utils.GetFileSize(path)"},{"location":"docs/namespaces/utils/#utilsgetlastmodifiedpath","text":"Arguments path string The return value is seconds since 00:00:00 Thursday, 1 January 1970 UTC.","title":"utils.GetLastModified(path)"},{"location":"docs/namespaces/utils/#utilsgetsyscolourindex","text":"Arguments index number https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-getsyscolor Returns a number which can used as the colour in many methods. Could be 0 if the index is invalid. Example var splitter_colour = utils . GetSysColour ( 15 );","title":"utils.GetSysColour(index)"},{"location":"docs/namespaces/utils/#utilsgetsystemmetricsindex","text":"Arguments index number https://docs.microsoft.com/en-gb/windows/win32/api/winuser/nf-winuser-getsystemmetrics Returns a number .","title":"utils.GetSystemMetrics(index)"},{"location":"docs/namespaces/utils/#utilsglobpattern-exc_mask-inc_mask","text":"Arguments pattern string exc_mask FILE_ATTRIBUTE Default FILE_ATTRIBUTE_DIRECTORY . inc_mask FILE_ATTRIBUTE Default 0xffffffff . Returns a VBArray so you need to use .toArray() on the result. Example var arr = utils . Glob ( \"C:\\\\Pictures\\\\*.jpg\" ). toArray ();","title":"utils.Glob(pattern[, exc_mask, inc_mask])"},{"location":"docs/namespaces/utils/#utilshttprequestasyncwindow_id-type-url-user_agent_or_headers-post_data-content_type","text":"Arguments window_id window.ID type number Use 0 for GET , 1 for POST . url string user_agent_or_headers string See examples below. post_data string Should be omitted for GET requests and will be ignored. It is required for POST requests. It could be form data or a stringified JSON object/array. content_type string Should be omitted for GET requests and will be ignored. It is required for POST requests. 2 examples of valid values are application/json or application/x-www-form-urlencoded . Returns a unique task_id which is used as the first argument in the on_http_request_done callback. Notes A user agent should not contain spaces. If they exist, they will be stripped automatically. When making a POST request, do not add a Content-Type header. It must be set via the content_type argument listed above. Example Empty User Agent Custom User Agent Custom Headers var url = ... // Defaults to \"JScriptPanel3\". var user_agent = \"\" ; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , user_agent ); var url = ... var user_agent = \"my_app/0.1\" ; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , user_agent ); var url = ... var headers = { \"User-Agent\" : \"my_app/0.1\" , \"Some other header\" : \"blah\" , }; var task_id = utils . HTTPRequestAsync ( window . ID , 0 , url , JSON . stringify ( headers ));","title":"utils.HTTPRequestAsync(window_id, type, url, user_agent_or_headers, post_data, content_type)"},{"location":"docs/namespaces/utils/#utilsinputboxprompt-title-default_value-error_on_cancel","text":"Arguments prompt string title string default_value string Defaults to an empty string if omitted. error_on_cancel boolean Default false . If set to true , use try/catch to catch errors. Returns a string . The dialog is modal which means code directly after it will not run until it is dismissed. With error_on_cancel not set (or set to false ), cancelling the dialog will return default_value . Example var username = utils . InputBox ( \"Enter your username\" , \"JScript Panel\" , \"\" ); Using the above example, you can't tell if OK or Cancel was pressed if the return value is the same as default_value . If you need to know, set error_on_cancel to true which throws a script error when Cancel is pressed. Example try { var username = utils . InputBox ( \"Enter your name\" , \"JScript Panel\" , \"\" , true ); // OK was pressed. } catch ( e ) { // Dialog was closed by pressing Esc, Cancel or the Close button. }","title":"utils.InputBox(prompt, title[, default_value, error_on_cancel])"},{"location":"docs/namespaces/utils/#utilsisfilepath","text":"Arguments path string Returns a boolean value.","title":"utils.IsFile(path)"},{"location":"docs/namespaces/utils/#utilsisfolderfolder","text":"Arguments folder string Returns a boolean value.","title":"utils.IsFolder(folder)"},{"location":"docs/namespaces/utils/#utilsiskeypressedvkey","text":"Arguments vkey number https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes Returns a boolean value.","title":"utils.IsKeyPressed(vkey)"},{"location":"docs/namespaces/utils/#utilslistfilesfolder-recursive","text":"Arguments folder string recursive boolean Default false . Returns a VBArray so you need to use .toArray() on the result.","title":"utils.ListFiles(folder[, recursive])"},{"location":"docs/namespaces/utils/#utilslistfoldersfolder-recursive","text":"Arguments folder string recursive boolean Default false . Returns a VBArray so you need to use .toArray() on the result.","title":"utils.ListFolders(folder[, recursive])"},{"location":"docs/namespaces/utils/#utilslistfonts","text":"Returns a VBArray so you need to use .toArray() on the result.","title":"utils.ListFonts()"},{"location":"docs/namespaces/utils/#utilsloadimagepath","text":"Arguments path string Returns an IJSImage instance or null on failure.","title":"utils.LoadImage(path)"},{"location":"docs/namespaces/utils/#utilsloadimageasyncwindow_id-path","text":"Arguments window_id window.ID path string No return value. Use in conjunction with on_load_image_done .","title":"utils.LoadImageAsync(window_id, path)"},{"location":"docs/namespaces/utils/#utilsloadsvgpath_or_xml-max_width","text":"Arguments path_or_xml string max_width number Default 0 . Original size is used if zero. Returns an IJSImage instance or null on failure. Example var svg_file = fb . ComponentPath + \"samples\\\\svg\\\\android.svg\" ; var svg_content = utils . ReadUTF8 ( svg_file ); var original = utils . LoadSVG ( svg_file ); // Maybe manipulate the XML??? That's for others, not me!! var large = utils . LoadSVG ( svg_content , 512 ); function on_paint ( gr ) { gr . DrawImage ( original , 0 , 0 , original . Width , original . Height , 0 , 0 , original . Width , original . Height ); gr . DrawImage ( large , original . Width , 0 , large . Width , large . Height , 0 , 0 , large . Width , large . Height ); }","title":"utils.LoadSVG(path_or_xml[, max_width])"},{"location":"docs/namespaces/utils/#utilsmessageboxprompt-title-flags","text":"Arguments prompt string title string flags MessageBox Buttons , MessageBox Icons Can be combined. Returns a MessageBox Return Value . The dialog is modal which means code directly after it will not run until it is dismissed. Example // ==PREPROCESSOR== // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var prompt = \"Do you really want to open the Preferences?\" ; var title = \"A very important question\" ; if ( utils . MessageBox ( prompt , title , MB_YESNO | MB_ICONQUESTION ) == IDYES ) { fb . ShowPreferences (); }","title":"utils.MessageBox(prompt, title, flags)"},{"location":"docs/namespaces/utils/#utilsreadinipath-section-key-default_value","text":"Arguments path string section string key string default_value string This will be the return value if the key isn't found. Defaults to an empty string if omitted. Returns a string . The maximum length is limited to 255 characters. An INI file should look something like this: [section] key=val Example var username = utils . ReadINI ( \"e:\\\\my_file.ini\" , \"Last.fm\" , \"username\" );","title":"utils.ReadINI(path, section, key[, default_value])"},{"location":"docs/namespaces/utils/#utilsreadtextfilepath-codepage","text":"Arguments path string codepage number Default 0 . See utils.DetectCharset . Returns a string . Will be empty if path doesn't exist or there was an error opening it. Note If the file is determined to be UCS2-LE or UTF8 , any supplied codepage will be ignored. Example Simple Using utils.DetectCharset var path = \"E:\\\\some text file.txt\" ; var text = utils . ReadTextFile ( path ); var path = \"E:\\\\some text file.txt\" ; var codepage = utils . DetectCharset ( path ); var text = utils . ReadTextFile ( path , codepage );","title":"utils.ReadTextFile(path[, codepage])"},{"location":"docs/namespaces/utils/#utilsreadutf8path","text":"Arguments path string Returns a string . Will be empty if path doesn't exist or there was an error opening it. Note It's preferable to use this when you know the file is UTF8 . If you're unsure, continue to use utils.ReadTextFile","title":"utils.ReadUTF8(path)"},{"location":"docs/namespaces/utils/#utilsremovepathpath","text":"Arguments path string Can be a file or folder. If it's a folder, it must be empty. Returns a boolean value.","title":"utils.RemovePath(path)"},{"location":"docs/namespaces/utils/#utilsreplaceillegalcharsstr-modern","text":"Arguments str string modern boolean Default true . Returns a string . Example Legacy Modern var chars = '\"\\\\\\/*|:<>?' ; console . log ( utils . ReplaceIllegalChars ( chars , false )); Output ''--x_-__ var chars = '\"\\\\\\/*|:<>?' ; console . log ( utils . ReplaceIllegalChars ( chars , true )); Output ''\u29f5\u2044\u2217\u2223\u2236\u02c2\u02c3\uff1f Note These replacements should correspond with the settings available in the foobar2000 File Operations and Converter advanced preferences.","title":"utils.ReplaceIllegalChars(str[, modern])"},{"location":"docs/namespaces/utils/#utilssetclipboardtexttext","text":"Arguments text string No return value.","title":"utils.SetClipboardText(text)"},{"location":"docs/namespaces/utils/#utilsshowpopupmessagemessage-title","text":"Arguments message string title string Default JScript Panel 3 . No return value.","title":"utils.ShowPopupMessage(message[, title])"},{"location":"docs/namespaces/utils/#utilstimestamptodatestringts","text":"Arguments ts number Should be the number of seconds since 00:00:00 Thursday, 1 January 1970 UTC. Returns a string . It will be adjusted to your local time zone. Example // Divide by 1000 because JavaScript timestamps are in milliseconds. var now = Math . round ( new Date (). getTime () / 1000 ); console . log ( utils . TimestampToDateString ( now ));","title":"utils.TimestampToDateString(ts)"},{"location":"docs/namespaces/utils/#utilswriteinipath-section-key-value","text":"Arguments path string The parent folder must already exist. section string key string value string Returns a boolean value. Example utils . WriteINI ( \"e:\\\\my_file.ini\" , \"Last.fm\" , \"username\" , \"Bob\" );","title":"utils.WriteINI(path, section, key, value)"},{"location":"docs/namespaces/utils/#utilswritetextfilepath-content","text":"Arguments path string The parent folder must already exist. content string Returns a boolean value. Note Files are written as UTF8 without BOM .","title":"utils.WriteTextFile(path, content)"},{"location":"docs/namespaces/window/","text":"Properties window.DPI number read This value is fixed when foobar2000 starts. It will not change even if Windows display settings are updated. window.Height number read window.ID number read Unique identifier for the panel. Use in various async methods. window.IsDark boolean read Can only be true if Dark Mode is enabled in Columns UI v2.0.0 and later. window.IsDefaultUI boolean read window.IsVisible boolean read window.MaxHeight number read, write window.MaxWidth number read, write window.MinHeight number read, write window.MinWidth number read, write window.Name string read window.Width number read Methods window.ClearInterval(timerID) # Arguments timerID number No return value. window.ClearTimeout(timerID) # Arguments timerID number No return value. window.CreateThemeManager(class_list) # Arguments class_list string https://docs.microsoft.com/en-gb/windows/win32/controls/parts-and-states Returns an IThemeManager instance or null on failure. window.CreatePopupMenu() # Returns an IMenuObj instance. window.CreateTooltip([font_name, font_size_px) # Arguments font_name string Default Segoe UI . font_size_px number Default 16 . Returns an ITooltip instance. Note Since it's not permitted to call this more than once in a panel, see the additional window.SetTooltipFont method too. window.GetColourCUI(type) # Arguments type ColourTypeCUI Returns a number which can used as the colour in many methods. window.GetColourDUI(type) # Arguments type ColourTypeDUI Returns a number which can used as the colour in many methods. window.GetFontCUI(type) # Arguments type FontTypeCUI Returns a string which can be passed directly to IJSGraphics WriteText . Example var font = window . GetFontCUI ( 0 ); var colour = ... function on_paint ( gr ) { gr . WriteText ( \"some text\" , font , colour , 0 , 0 , window . Width , window . Height ); } The string is actually stringified JSON so it may look something like this: Example { \"Name\" : \"Segoe UI\" , \"Size\" : 16 , \"Style\" : 0 , \"Weight\" : 400 } See DWRITE_FONT_STYLE and DWRITE_FONT_WEIGHT for more info. If you want to access/change any properties, you can use JSON.parse . Example var font = window . GetFontCUI ( 0 ); var obj = JSON . parse ( font ); // double the size but keep other properties the same obj . Size = obj . Size * 2 ; // stringify the updated object font = JSON . stringify ( obj ); window.GetFontDUI(type) # Arguments type FontTypeDUI See above for the return value. window.GetProperty(name[, default_value]) # Arguments name string default_value string , number , boolean Default null . Returns the value of name from the panel properties. If no value is present and default_value is not null or undefined , it will be stored and returned. Example // ==PREPROCESSOR== // @name \"ColourPicker + Persistent Properties\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var default_colour = RGB ( 255 , 0 , 0 ); // Default colour is used on first run, otherwise colour // saved on previous use. var colour = window . GetProperty ( 'BASIC.COLOUR.PICKER.COLOUR' , default_colour ); function on_paint ( gr ) { gr . FillRectangle ( 0 , 0 , window . Width , window . Height , colour ); gr . FillRectangle ( 0 , 0 , window . Width , 24 , RGB ( 0 , 0 , 0 )); gr . WriteText ( 'Click to open ColourPicker' , '' , RGB ( 255 , 255 , 255 ), 0 , 0 , window . Width , 24 , 2 , 0 ); } function on_mouse_lbtn_up () { colour = utils . ColourPicker ( colour ); /* Save the new colour and it will be read the next time the script starts. These properties are stored as part of your layout either in theme.fth (Default UI) or foo_ui_columns.cfg (Columns UI), */ window . SetProperty ( 'BASIC.COLOUR.PICKER.COLOUR' , colour ); window . Repaint (); } window.NotifyOthers(name, info) # Arguments name string info string , number , array , object Listen for notifications in other panels with on_notify_data . window.Reload([clear_properties]) # Arguments clear_properties boolean Default false . No return value. window.Repaint() # No return value. window.RepaintRect(x, y, w, h) # No return value. Note Use this instead of window.Repaint on frequently updated areas such as time, bitrate, seekbar, etc. window.SetCursor(id) # Arguments id SetCursorID Use -1 if you want to hide the cursor. No return value. Note This would usually be used inside the on_mouse_move callback. window.SetInterval(func, delay) # Arguments function function delay number milliseconds The return value is the timerID which can be used to cancel it. Creates a timer that will run indefinitely unless cancelled. Example // This runs every 500ms forever because the return // was ignored! window . SetInterval ( function () { // do something }, 500 ); window.SetProperty(name, value) # Arguments name string value string , number , boolean No return value. Sets a persistent property value. To remove an existing property, you can supply null as the value . See window.GetProperty for an example. window.SetTimeout(func, delay) # Arguments function function delay number milliseconds The return value is the timerID which can be used to cancel it. Example window . SetTimeout ( function () { // code here will run after 10 seconds, once. }, 10000 ); window.SetTooltipFont(font_name, font_size_px) # Arguments font_name string font_size_px number No return value. window.ShowConfigure() # No return value. Shows the Configuration Window . window.ShowProperties() # No return value. Shows the Properties Window of the current panel.","title":"window"},{"location":"docs/namespaces/window/#windowclearintervaltimerid","text":"Arguments timerID number No return value.","title":"window.ClearInterval(timerID)"},{"location":"docs/namespaces/window/#windowcleartimeouttimerid","text":"Arguments timerID number No return value.","title":"window.ClearTimeout(timerID)"},{"location":"docs/namespaces/window/#windowcreatethememanagerclass_list","text":"Arguments class_list string https://docs.microsoft.com/en-gb/windows/win32/controls/parts-and-states Returns an IThemeManager instance or null on failure.","title":"window.CreateThemeManager(class_list)"},{"location":"docs/namespaces/window/#windowcreatepopupmenu","text":"Returns an IMenuObj instance.","title":"window.CreatePopupMenu()"},{"location":"docs/namespaces/window/#windowcreatetooltipfont_name-font_size_px","text":"Arguments font_name string Default Segoe UI . font_size_px number Default 16 . Returns an ITooltip instance. Note Since it's not permitted to call this more than once in a panel, see the additional window.SetTooltipFont method too.","title":"window.CreateTooltip([font_name, font_size_px)"},{"location":"docs/namespaces/window/#windowgetcolourcuitype","text":"Arguments type ColourTypeCUI Returns a number which can used as the colour in many methods.","title":"window.GetColourCUI(type)"},{"location":"docs/namespaces/window/#windowgetcolourduitype","text":"Arguments type ColourTypeDUI Returns a number which can used as the colour in many methods.","title":"window.GetColourDUI(type)"},{"location":"docs/namespaces/window/#windowgetfontcuitype","text":"Arguments type FontTypeCUI Returns a string which can be passed directly to IJSGraphics WriteText . Example var font = window . GetFontCUI ( 0 ); var colour = ... function on_paint ( gr ) { gr . WriteText ( \"some text\" , font , colour , 0 , 0 , window . Width , window . Height ); } The string is actually stringified JSON so it may look something like this: Example { \"Name\" : \"Segoe UI\" , \"Size\" : 16 , \"Style\" : 0 , \"Weight\" : 400 } See DWRITE_FONT_STYLE and DWRITE_FONT_WEIGHT for more info. If you want to access/change any properties, you can use JSON.parse . Example var font = window . GetFontCUI ( 0 ); var obj = JSON . parse ( font ); // double the size but keep other properties the same obj . Size = obj . Size * 2 ; // stringify the updated object font = JSON . stringify ( obj );","title":"window.GetFontCUI(type)"},{"location":"docs/namespaces/window/#windowgetfontduitype","text":"Arguments type FontTypeDUI See above for the return value.","title":"window.GetFontDUI(type)"},{"location":"docs/namespaces/window/#windowgetpropertyname-default_value","text":"Arguments name string default_value string , number , boolean Default null . Returns the value of name from the panel properties. If no value is present and default_value is not null or undefined , it will be stored and returned. Example // ==PREPROCESSOR== // @name \"ColourPicker + Persistent Properties\" // @author \"marc2003\" // @import \"%fb2k_component_path%helpers.txt\" // ==/PREPROCESSOR== var default_colour = RGB ( 255 , 0 , 0 ); // Default colour is used on first run, otherwise colour // saved on previous use. var colour = window . GetProperty ( 'BASIC.COLOUR.PICKER.COLOUR' , default_colour ); function on_paint ( gr ) { gr . FillRectangle ( 0 , 0 , window . Width , window . Height , colour ); gr . FillRectangle ( 0 , 0 , window . Width , 24 , RGB ( 0 , 0 , 0 )); gr . WriteText ( 'Click to open ColourPicker' , '' , RGB ( 255 , 255 , 255 ), 0 , 0 , window . Width , 24 , 2 , 0 ); } function on_mouse_lbtn_up () { colour = utils . ColourPicker ( colour ); /* Save the new colour and it will be read the next time the script starts. These properties are stored as part of your layout either in theme.fth (Default UI) or foo_ui_columns.cfg (Columns UI), */ window . SetProperty ( 'BASIC.COLOUR.PICKER.COLOUR' , colour ); window . Repaint (); }","title":"window.GetProperty(name[, default_value])"},{"location":"docs/namespaces/window/#windownotifyothersname-info","text":"Arguments name string info string , number , array , object Listen for notifications in other panels with on_notify_data .","title":"window.NotifyOthers(name, info)"},{"location":"docs/namespaces/window/#windowreloadclear_properties","text":"Arguments clear_properties boolean Default false . No return value.","title":"window.Reload([clear_properties])"},{"location":"docs/namespaces/window/#windowrepaint","text":"No return value.","title":"window.Repaint()"},{"location":"docs/namespaces/window/#windowrepaintrectx-y-w-h","text":"No return value. Note Use this instead of window.Repaint on frequently updated areas such as time, bitrate, seekbar, etc.","title":"window.RepaintRect(x, y, w, h)"},{"location":"docs/namespaces/window/#windowsetcursorid","text":"Arguments id SetCursorID Use -1 if you want to hide the cursor. No return value. Note This would usually be used inside the on_mouse_move callback.","title":"window.SetCursor(id)"},{"location":"docs/namespaces/window/#windowsetintervalfunc-delay","text":"Arguments function function delay number milliseconds The return value is the timerID which can be used to cancel it. Creates a timer that will run indefinitely unless cancelled. Example // This runs every 500ms forever because the return // was ignored! window . SetInterval ( function () { // do something }, 500 );","title":"window.SetInterval(func, delay)"},{"location":"docs/namespaces/window/#windowsetpropertyname-value","text":"Arguments name string value string , number , boolean No return value. Sets a persistent property value. To remove an existing property, you can supply null as the value . See window.GetProperty for an example.","title":"window.SetProperty(name, value)"},{"location":"docs/namespaces/window/#windowsettimeoutfunc-delay","text":"Arguments function function delay number milliseconds The return value is the timerID which can be used to cancel it. Example window . SetTimeout ( function () { // code here will run after 10 seconds, once. }, 10000 );","title":"window.SetTimeout(func, delay)"},{"location":"docs/namespaces/window/#windowsettooltipfontfont_name-font_size_px","text":"Arguments font_name string font_size_px number No return value.","title":"window.SetTooltipFont(font_name, font_size_px)"},{"location":"docs/namespaces/window/#windowshowconfigure","text":"No return value. Shows the Configuration Window .","title":"window.ShowConfigure()"},{"location":"docs/namespaces/window/#windowshowproperties","text":"No return value. Shows the Properties Window of the current panel.","title":"window.ShowProperties()"}]}